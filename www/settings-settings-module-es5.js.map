{"version":3,"sources":["webpack:///src/app/pages/profile/settings/settings-routing.module.ts","webpack:///src/app/pages/profile/settings/settings.page.ts","webpack:///src/app/pages/profile/settings/settings.page.scss","webpack:///src/app/pages/profile/settings/settings.page.html","webpack:///src/app/pages/profile/settings/settings.module.ts"],"names":["routes","path","component","loadChildren","then","m","PasswordPageModule","SettingsPageRoutingModule","imports","forChild","exports","SettingsPage","dooleService","authentication","faceId","communications","appointment","diets","medication","goals","advices","offers","form","messages","console","log","params","name","value","sendConfigution","postAPIConfiguration","subscribe","res","success","err","code","message","selector","template","SettingsPageModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,EAKpB;AACCD,YAAI,EAAE,UADP;AAECE,oBAAY,EAAE;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA,mBAAqCC,IAArC,CAA2C,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,kBAAN;AAAA,WAA5C,CAAN;AAAA;AAFf,OALoB,CAAvB;;UAeaC,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAJrC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBT,MAAtB,CAAD,CADD;AAERU,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCXAI,YAAY;AAYvB,8BACUC,YADV,EACsC;AAAA;;AAA5B,eAAAA,YAAA,GAAAA,YAAA;AAZV,eAAAC,cAAA,GAAiB,IAAjB;AACA,eAAAC,MAAA,GAAS,IAAT;AACA,eAAAC,cAAA,GAAiB,IAAjB;AACA,eAAAC,WAAA,GAAc,IAAd;AACA,eAAAC,KAAA,GAAQ,IAAR;AACA,eAAAC,UAAA,GAAa,IAAb;AACA,eAAAC,KAAA,GAAQ,IAAR;AACA,eAAAC,OAAA,GAAU,IAAV;AACA,eAAAC,MAAA,GAAS,IAAT;AACA,eAAAC,IAAA,GAAO,IAAP;AACA,eAAAC,QAAA,GAAW,IAAX;AAEyC;;AAblB;AAAA;AAAA,iBAcvB,oBAAW,CACV;AAfsB;AAAA;AAAA,iBAiBvB,gCAAoB;AAClBC,mBAAO,CAACC,GAAR,+CAAmD,KAAKZ,cAAxD;AACA,gBAAIa,MAAM,GAAG;AACXC,kBAAI,EAAE,gBADK;AAEXC,mBAAK,EAAE,KAAKf;AAFD,aAAb;AAIA,iBAAKgB,eAAL,CAAqBH,MAArB;AACD;AAxBsB;AAAA;AAAA,iBA0BvB,wBAAY;AACVF,mBAAO,CAACC,GAAR,uCAA2C,KAAKX,MAAhD;AACA,gBAAIY,MAAM,GAAG;AACXC,kBAAI,EAAE,QADK;AAEXC,mBAAK,EAAE,KAAKd;AAFD,aAAb;AAIA,iBAAKe,eAAL,CAAqBH,MAArB;AACD;AAjCsB;AAAA;AAAA,iBAmCvB,gCAAoB;AAClBF,mBAAO,CAACC,GAAR,+CAAmD,KAAKV,cAAxD;AACA,gBAAIW,MAAM,GAAG;AACXC,kBAAI,EAAE,gBADK;AAEXC,mBAAK,EAAE,KAAKb;AAFD,aAAb;AAIA,iBAAKc,eAAL,CAAqBH,MAArB;AACD;AA1CsB;AAAA;AAAA,iBA4CvB,6BAAiB;AACfF,mBAAO,CAACC,GAAR,4CAAgD,KAAKT,WAArD;AACA,gBAAIU,MAAM,GAAG;AACXC,kBAAI,EAAE,aADK;AAEXC,mBAAK,EAAE,KAAKZ;AAFD,aAAb;AAIA,iBAAKa,eAAL,CAAqBH,MAArB;AACD;AAnDsB;AAAA;AAAA,iBAqDvB,uBAAW;AACTF,mBAAO,CAACC,GAAR,sCAA0C,KAAKR,KAA/C;AACA,gBAAIS,MAAM,GAAG;AACXC,kBAAI,EAAE,OADK;AAEXC,mBAAK,EAAE,KAAKX;AAFD,aAAb;AAIA,iBAAKY,eAAL,CAAqBH,MAArB;AACD;AA5DsB;AAAA;AAAA,iBA8DvB,4BAAgB;AACdF,mBAAO,CAACC,GAAR,2CAA+C,KAAKP,UAApD;AACA,gBAAIQ,MAAM,GAAG;AACXC,kBAAI,EAAE,YADK;AAEXC,mBAAK,EAAE,KAAKV;AAFD,aAAb,CAFc,CAMd;;AACA,iBAAKW,eAAL,CAAqBH,MAArB;AACD;AAtEsB;AAAA;AAAA,iBAwEvB,yBAAa;AACXF,mBAAO,CAACC,GAAR,wCAA4C,KAAKL,OAAjD;AACA,gBAAIM,MAAM,GAAG;AACXC,kBAAI,EAAE,SADK;AAEXC,mBAAK,EAAE,KAAKR;AAFD,aAAb;AAIA,iBAAKS,eAAL,CAAqBH,MAArB;AACD;AA/EsB;AAAA;AAAA,iBAiFvB,wBAAY;AACVF,mBAAO,CAACC,GAAR,uCAA2C,KAAKJ,MAAhD;AACA,gBAAIK,MAAM,GAAG;AACXC,kBAAI,EAAE,QADK;AAEXC,mBAAK,EAAE,KAAKP;AAFD,aAAb;AAIA,iBAAKQ,eAAL,CAAqBH,MAArB;AACD;AAxFsB;AAAA;AAAA,iBA0FvB,uBAAW;AACTF,mBAAO,CAACC,GAAR,sCAA0C,KAAKN,KAA/C;AACA,gBAAIO,MAAM,GAAG;AACXC,kBAAI,EAAE,OADK;AAEXC,mBAAK,EAAE,KAAKT;AAFD,aAAb;AAIA,iBAAKU,eAAL,CAAqBH,MAArB;AACD;AAjGsB;AAAA;AAAA,iBAmGvB,sBAAU;AACRF,mBAAO,CAACC,GAAR,qCAAyC,KAAKH,IAA9C;AACA,gBAAII,MAAM,GAAG;AACXC,kBAAI,EAAE,MADK;AAEXC,mBAAK,EAAE,KAAKN;AAFD,aAAb;AAIA,iBAAKO,eAAL,CAAqBH,MAArB;AACD;AA1GsB;AAAA;AAAA,iBA4GvB,0BAAc;AACZF,mBAAO,CAACC,GAAR,yCAA6C,KAAKF,QAAlD;AACA,gBAAIG,MAAM,GAAG;AACXC,kBAAI,EAAE,UADK;AAEXC,mBAAK,EAAE,KAAKL;AAFD,aAAb;AAIA,iBAAKM,eAAL,CAAqBH,MAArB;AACD;AAnHsB;AAAA;AAAA,iBAsHvB,yBAAgBA,MAAhB,EAAsB;AAAA;;AACpB,iBAAKd,YAAL,CAAkBkB,oBAAlB,CAAuCJ,MAAvC,EAA+CK,SAA/C,CACE,UAAOC,GAAP;AAAA,qBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,sCAClBR,OADkB;AAAA;AAC8B,+BAAMQ,GAAN;;AAD9B;AAAA;;AAAA,oCACVP,GADU,mBACN,kCADM;;AAElB,4BAAGO,GAAG,CAACC,OAAP,EAAe;AACdT,iCAAO,CAACC,GAAR,mDAAuDO,GAAG,CAACC,OAA3D;AACA,yBAFD,MAGK;AACFT,iCAAO,CAACC,GAAR,mDAAuDO,GAAG,CAACC,OAA3D;AACD;;AAPgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAnB;AAAA,aADF,EASK,UAACC,GAAD,EAAS;AACRV,qBAAO,CAACC,GAAR,CAAY,6CAA6CS,GAAG,CAACC,IAAjD,GAAwD,KAAxD,GAAgED,GAAG,CAACE,OAAhF;AACA,oBAAMF,GAAN;AACH,aAZH;AAaD;AApIsB;;AAAA;AAAA,S;;;;gBAPhB;;;;AAOIvB,kBAAY,6DALxB,gEAAU;AACT0B,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR,sEAFS;;AAAA,OAAV,CAKwB,GAAZ3B,YAAY,CAAZ;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCqBF4B,kBAAkB;AAAA;AAAA,O;;AAAlBA,wBAAkB,6DAV9B,+DAAS;AACR/B,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,mEAJO,EAKP,kFALO,CADD;AAQRgC,oBAAY,EAAE,CAAC,2DAAD;AARN,OAAT,CAU8B,GAAlBD,kBAAkB,CAAlB","file":"settings-settings-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  } ,\n   {\n    path: 'password',\n    loadChildren: () => import('./password/password.module').then( m => m.PasswordPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DooleService } from 'src/app/services/doole.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  authentication = true\n  faceId = true\n  communications = true\n  appointment = true\n  diets = true\n  medication = true\n  goals = true\n  advices = true\n  offers = true\n  form = true\n  messages = true\n  constructor(\n    private dooleService: DooleService) { }\n  ngOnInit() {\n  }\n\n  changeAuthentication(){\n    console.log(`[SettingsPage] changeAuthentication(${this.authentication})`);\n    let params = {\n      name: 'authentication',\n      value: this.authentication\n    }\n    this.sendConfigution(params)\n  }\n\n  changeFaceId(){\n    console.log(`[SettingsPage] changeFaceId(${this.faceId})`);\n    let params = {\n      name: 'faceId',\n      value: this.faceId\n    }\n    this.sendConfigution(params)\n  }\n\n  changeCommunications(){\n    console.log(`[SettingsPage] changeCommunications(${this.communications})`);\n    let params = {\n      name: 'communications',\n      value: this.communications\n    }\n    this.sendConfigution(params)\n  }\n\n  changeAppointment(){\n    console.log(`[SettingsPage] changeAppointment(${this.appointment})`);\n    let params = {\n      name: 'appointment',\n      value: this.appointment\n    }\n    this.sendConfigution(params)\n  }\n\n  changeDiets(){\n    console.log(`[SettingsPage] changeDiets(${this.diets})`);\n    let params = {\n      name: 'diets',\n      value: this.diets\n    }\n    this.sendConfigution(params)\n  }\n\n  changeMedication(){\n    console.log(`[SettingsPage] changeMedication(${this.medication})`);\n    let params = {\n      name: 'medication',\n      value: this.medication\n    }\n    //let params2 = {drugIntakeNotificationMail: 1}\n    this.sendConfigution(params)\n  }\n\n  changeAdvices(){\n    console.log(`[SettingsPage] changeAdvices(${this.advices})`);\n    let params = {\n      name: 'advices',\n      value: this.advices\n    }\n    this.sendConfigution(params)\n  }\n\n  changeOffers(){\n    console.log(`[SettingsPage] changeOffers(${this.offers})`);\n    let params = {\n      name: 'offers',\n      value: this.offers\n    }\n    this.sendConfigution(params)\n  }\n\n  changeGoals(){\n    console.log(`[SettingsPage] changeGoals(${this.goals})`);\n    let params = {\n      name: 'goals',\n      value: this.goals\n    }\n    this.sendConfigution(params)\n  }\n\n  changeForm(){\n    console.log(`[SettingsPage] changeForm(${this.form})`);\n    let params = {\n      name: 'form',\n      value: this.form\n    }\n    this.sendConfigution(params)\n  }\n\n  changeMessages(){\n    console.log(`[SettingsPage] changeMessages(${this.messages})`);\n    let params = {\n      name: 'messages',\n      value: this.messages\n    }\n    this.sendConfigution(params)\n  }\n\n\n  sendConfigution(params){\n    this.dooleService.postAPIConfiguration(params).subscribe(\n      async (res: any) =>{\n       console.log('[SettingsPage] sendConfigution()', await res);\n       if(res.success){\n        console.log(`[SettingsPage] sendConfigution(success: ${res.success})`);\n       }\n        else{\n          console.log(`[SettingsPage] sendConfigution(success: ${res.success})`);\n        }\n       },(err) => { \n          console.log('p[SettingsPage] sendConfigution() ERROR(' + err.code + '): ' + err.message); \n          throw err; \n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXR0aW5ncy5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"{{'setting.button_profile' | translate }}\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ 'setting.title_setting' | translate}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <div class=\\\"txtTitle2\\\"></div>\\n    <ion-text class=\\\"txtTitle2\\\">{{ 'setting.title_security' | translate}}</ion-text>\\n    <ion-card class=\\\"cardProfile\\\">\\n          <ion-list>\\n            <ion-item routerLink=\\\"password\\\"  >\\n              <ion-label>{{ 'setting.password.title_change_password' | translate}}</ion-label>\\n              \\n            </ion-item>\\n            <ion-item >\\n              <ion-label >{{ 'setting.subtitle_authentication' | translate}}</ion-label>\\n              <ion-toggle slot=\\\"end\\\" color=\\\"success\\\" [(ngModel)]=\\\"authentication\\\" (ionChange)=\\\"changeAuthentication()\\\" checked></ion-toggle>\\n            </ion-item>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>{{ 'setting.subtitle_face_id' | translate}}</ion-label>\\n              <ion-toggle slot=\\\"end\\\" color=\\\"success\\\" [(ngModel)]=\\\"faceId\\\" (ionChange)=\\\"changeFaceId()\\\" checked></ion-toggle>\\n            </ion-item>\\n       \\n          </ion-list>\\n    </ion-card>\\n    <ion-text class=\\\"txtTitle\\\">{{ 'setting.title_notification' | translate}}</ion-text>\\n    <ion-card class=\\\"cardProfile\\\">\\n          <ion-list>\\n            <ion-item>\\n              <ion-label >{{'setting.subtitle_communications' | translate}}</ion-label>\\n              <ion-toggle slot=\\\"end\\\" color=\\\"success\\\" [(ngModel)]=\\\"communications\\\" (ionChange)=\\\"changeCommunications()\\\" checked></ion-toggle>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label >{{'setting.subtitle_appointment' | translate}}</ion-label>\\n              <ion-toggle slot=\\\"end\\\" color=\\\"success\\\" [(ngModel)]=\\\"appointment\\\" (ionChange)=\\\"changeAppointment()\\\" checked></ion-toggle>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label >{{'setting.subtitle_diets' | translate}}</ion-label>\\n              <ion-toggle slot=\\\"end\\\" color=\\\"success\\\" [(ngModel)]=\\\"diets\\\" (ionChange)=\\\"changeDiets()\\\" checked></ion-toggle>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label >{{'setting.subtitle_medication' | translate}}</ion-label>\\n              <ion-toggle slot=\\\"end\\\" color=\\\"success\\\" [(ngModel)]=\\\"medication\\\" (ionChange)=\\\"changeMedication()\\\" checked></ion-toggle>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label >{{'setting.subtitle_goals' | translate}}</ion-label>\\n              <ion-toggle slot=\\\"end\\\" color=\\\"success\\\" [(ngModel)]=\\\"goals\\\" (ionChange)=\\\"changeGoals()\\\" checked></ion-toggle>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label >C{{'setting.subtitle_advices' | translate}}</ion-label>\\n              <ion-toggle slot=\\\"end\\\" color=\\\"success\\\" [(ngModel)]=\\\"advices\\\" (ionChange)=\\\"changeAdvices()\\\" checked></ion-toggle>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label >{{'setting.subtitle_offers' | translate}}</ion-label>\\n              <ion-toggle slot=\\\"end\\\" color=\\\"success\\\" [(ngModel)]=\\\"offers\\\" (ionChange)=\\\"changeOffers()\\\" checked></ion-toggle>\\n            </ion-item>\\n             <ion-item>\\n              <ion-label >{{'setting.subtitle_form' | translate}}</ion-label>\\n              <ion-toggle slot=\\\"end\\\" color=\\\"success\\\" [(ngModel)]=\\\"form\\\" (ionChange)=\\\"changeForm()\\\" checked></ion-toggle>\\n            </ion-item>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>{{'setting.subtitle_messages' | translate}}</ion-label>\\n              <ion-toggle slot=\\\"end\\\" color=\\\"success\\\" [(ngModel)]=\\\"messages\\\" (ionChange)=\\\"changeMessages()\\\" checked></ion-toggle>\\n            </ion-item>\\n          </ion-list>\\n    </ion-card>\\n   \\n\\n</ion-content>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n"]}