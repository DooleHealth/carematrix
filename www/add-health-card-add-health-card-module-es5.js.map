{"version":3,"sources":["webpack:///src/app/pages/profile/cards/add-health-card/add-health-card.page.html","webpack:///src/app/pages/profile/cards/add-health-card/add-health-card.page.ts","webpack:///src/app/pages/profile/cards/add-health-card/add-health-card-routing.module.ts","webpack:///src/app/pages/profile/cards/add-health-card/add-health-card.module.ts","webpack:///src/app/pages/profile/cards/add-health-card/add-health-card.page.scss"],"names":["AddHealthCardPage","dooleService","formBuilder","alertController","router","translate","cards","modality","color","isSubmittedName","isSubmittedAffiliationNumber","isSubmittedModality","isAddCard","translateModalityCards","year","Date","now","getFullYear","dateMax","formHealthCard","group","required","name","affiliation_number","expiration_date","expedition_date","getHealthCard","card","history","state","console","log","showDetailCard","forEach","index","instant","get","setValue","value","isSubmittedFields","valid","postAPIhealthCards","subscribe","res","isSuccess","success","messagge","presentAlert","err","code","message","putAPIhealthCard","create","cssClass","buttons","text","handler","navigateByUrl","backdropDismiss","alert","present","isSubmitted","selector","template","routes","path","component","AddHealthCardPageRoutingModule","imports","forChild","exports","AddHealthCardPageModule","declarations"],"mappings":"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","file":"add-health-card-add-health-card-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-button slot=\\\"start\\\" fill=\\\"clear\\\" routerLink=\\\"/cards\\\">{{ 'health_card.button_return' | translate}}</ion-button>\\n<!--     <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"Inicio\\\"></ion-back-button>\\n    </ion-buttons> -->\\n    <ion-title>{{ isAddCard? ('add_health_card.header_add_card' | translate) : ('edit_health_card.header_edit_card' | translate) }}</ion-title>\\n    <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"this.isAddCard? addCard(): editCard()\\\">\\n      {{ isAddCard? ('add_health_card.button_add' | translate) : ('edit_health_card.button_edit' | translate) }}</ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <img class=\\\"img-wrapperCard\\\" src=\\\"assets/images/Subtract.png\\\">\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <form [formGroup]=\\\"formHealthCard\\\" (ngSubmit)=\\\"addCard()\\\">\\n  <ion-card class=\\\"cardProfile\\\">\\n    <ion-list>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>{{ 'health_card.modality' | translate}}</ion-label>\\n        <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Selecciona uno\\\" formControlName=\\\"modality\\\" required>\\n          <ion-select-option *ngFor=\\\"let card of cards\\\" [value]=\\\"card.modality\\\">{{card.modality}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    </ion-list>\\n  </ion-card>\\n  <ion-card class=\\\"cardProfile\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label>{{ 'health_card.name' | translate}}</ion-label>\\n        <ion-input formControlName=\\\"name\\\" placeholder=\\\"\\\" slot=\\\"end\\\" (ionInput)=\\\"isSubmitted = false\\\" maxlength=\\\"50\\\" required></ion-input>\\n        <ion-label *ngIf=\\\"this.isSubmittedName && this.formHealthCard.get('name').invalid\\\" class=\\\"error ion-padding\\\" color=\\\"danger\\\" slot=\\\"end\\\"><p>{{ 'health_card.error_required' | translate}}</p></ion-label>\\n        <ion-icon name=\\\"chevron-forward-outline\\\" slot=\\\"end\\\" size=\\\"small\\\"></ion-icon>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>{{ 'health_card.affiliation_number' | translate}}</ion-label>\\n        <ion-input formControlName=\\\"affiliation_number\\\" placeholder=\\\"\\\" (ionInput)=\\\"isSubmittedAffiliationNumber = false\\\" maxlength=\\\"30\\\" required></ion-input>\\n        <ion-label *ngIf=\\\"this.isSubmittedAffiliationNumber && this.formHealthCard.get('affiliation_number').invalid\\\" class=\\\"error ion-padding\\\" color=\\\"danger\\\" slot=\\\"end\\\"><p>{{ 'health_card.error_required' | translate}}</p></ion-label>\\n        <ion-icon name=\\\"chevron-forward-outline\\\" slot=\\\"end\\\" size=\\\"small\\\"></ion-icon>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>{{ 'health_card.expiration_date' | translate}}</ion-label>\\n        <ion-datetime formControlName=\\\"expiration_date\\\" displayFormat=\\\"DD/MM/YY\\\" placeholder=\\\"Opcional\\\" min=\\\"1990-01-01\\\" [max]=\\\"this.dateMax\\\"></ion-datetime>\\n        <ion-icon name=\\\"chevron-forward-outline\\\" slot=\\\"end\\\" size=\\\"small\\\"></ion-icon>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label lines=\\\"none\\\">{{ 'health_card.expedition_date' | translate}}</ion-label>\\n        <ion-datetime formControlName=\\\"expedition_date\\\" displayFormat=\\\"DD/MM/YY\\\" placeholder=\\\"Opcional\\\" min=\\\"1990-01-01\\\"></ion-datetime>\\n        <ion-icon name=\\\"chevron-forward-outline\\\" slot=\\\"end\\\" size=\\\"small\\\"></ion-icon>\\n      </ion-item>\\n    </ion-list>\\n  </ion-card>\\n</form>\\n</ion-content>\";","import { transition } from '@angular/animations';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HealthCard } from 'src/app/models/user';\nimport { DooleService } from 'src/app/services/doole.service';\n\n@Component({\n  selector: 'app-add-health-card',\n  templateUrl: './add-health-card.page.html',\n  styleUrls: ['./add-health-card.page.scss'],\n})\nexport class AddHealthCardPage implements OnInit {\n  card: HealthCard;\n  cards = [\n    {\n      modality: \"Mutuas Seguros\",\n      color: \"BDC3C7\"\n    },\n    {\n      modality: \"Sanidad Pública\",\n      color: \"2980B9\"\n    },\n    {\n      modality: \"Sanidad Privada\",\n      color: \"09f\"\n    }\n  ]\n  dateMax: any;\n  formHealthCard: FormGroup;\n  isSubmittedName = false;\n  isSubmittedAffiliationNumber = false;\n  isSubmittedModality = false;\n  isAddCard = true;\n  constructor(\n    private dooleService: DooleService,\n    private formBuilder: FormBuilder,\n    private alertController: AlertController,\n    public router: Router,\n    private translate: TranslateService\n  ) { }\n\n  ngOnInit() {\n    this.translateModalityCards()\n    let year = (new Date(Date.now()).getFullYear()) + 20\n    this.dateMax =  year\n    this.formHealthCard = this.formBuilder.group({\n      modality: [this.cards[0].modality, [Validators.required]],\n      name: ['', [Validators.required]],\n      affiliation_number: ['', [Validators.required]],\n      expiration_date: [''],\n      expedition_date: [''],\n    })\n    this.getHealthCard()\n  }\n\n  getHealthCard(){\n    this.card = history.state.card;\n    console.log('[AddHealthCardPage] getHealthCard()' ,  this.card);\n    if(this.card){\n      this.isAddCard = false\n      this.showDetailCard()\n    }\n  }\n  \n  translateModalityCards(){\n    this.cards.forEach((card, index) =>{\n      card.modality = this.translate.instant(`health_card.modality_type.text${index}`)\n    })\n  }\n\n  showDetailCard(){\n    this.formHealthCard.get('modality').setValue(this.card.modality)\n    this.formHealthCard.get('name').setValue(this.card.name)\n    this.formHealthCard.get('affiliation_number').setValue(this.card.affiliation_number)\n    this.formHealthCard.get('expiration_date').setValue(this.card.expiration_date? this.card.expiration_date:'')\n    this.formHealthCard.get('expedition_date').setValue(this.card.expedition_date? this.card.expedition_date:'')\n  }\n\n  addCard(){\n    console.log('[AddHealthCardPage] addCard()' , this.formHealthCard.value); \n    this.isSubmittedFields(true);\n    if(this.formHealthCard.valid){\n      this.dooleService.postAPIhealthCards(this.formHealthCard.value).subscribe(\n        async (res: any) =>{\n          console.log('[AddHealthCardPage] addCard()', await res);\n          let  isSuccess = res.success \n          if(isSuccess){\n            let messagge = this.translate.instant('add_health_card.alert_message_add_card')\n            this.presentAlert(messagge)\n          }else{\n            console.log('[AddHealthCardPage] addCard() Unsuccessful response', await res);\n          }\n         },(err) => { \n            console.log('[AddHealthCardPage] addCard() ERROR(' + err.code + '): ' + err.message); \n             this.dooleService.presentAlert(err.messagge)\n            throw err; \n        });\n    }\n  }\n\n  editCard(){\n    console.log('[AddHealthCardPage] editCard()' , this.formHealthCard.value); \n    this.isSubmittedFields(true);\n    if(this.formHealthCard.valid){\n      this.dooleService.putAPIhealthCard(this.formHealthCard.value).subscribe(\n        async (res: any) =>{\n          console.log('[AddHealthCardPage] editCard()', await res);\n          let  isSuccess = res.success \n          if(isSuccess){\n            let messagge = this.translate.instant('edit_health_card.alert_message_edit_card')\n            this.presentAlert(messagge)\n          }else{\n            console.log('[InitialPage] editCard() Unsuccessful response', await res);\n          }\n         },(err) => { \n            console.log('[InitialPage] editCard() ERROR(' + err.code + '): ' + err.message); \n             this.dooleService.presentAlert(err.messagge)\n            throw err; \n        });\n    }\n  }\n\n  async presentAlert(message) {\n    const alert = await this.alertController.create({\n      cssClass: 'my-alert-class',\n      message: message,\n      buttons: [{\n        text: this.translate.instant(\"alert.button_ok\"),\n        handler: () => {\n          console.log('Confirm Okay');\n          this.router.navigateByUrl('/cards');\n        }\n      }],\n      backdropDismiss: false\n    });\n\n    await alert.present();\n  }\n\n\n  isSubmittedFields(isSubmitted){\n    this.isSubmittedName = isSubmitted\n    this.isSubmittedAffiliationNumber = isSubmitted;\n    this.isSubmittedModality = isSubmitted;\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddHealthCardPage } from './add-health-card.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddHealthCardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddHealthCardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddHealthCardPageRoutingModule } from './add-health-card-routing.module';\n\nimport { AddHealthCardPage } from './add-health-card.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    TranslateModule,\n    AddHealthCardPageRoutingModule\n  ],\n  declarations: [AddHealthCardPage]\n})\nexport class AddHealthCardPageModule {}\n","export default \".img-wrapperCard {\\n  min-width: 88px;\\n  display: block;\\n  margin: auto;\\n  margin-top: 10%;\\n  margin-bottom: 10%;\\n}\\n\\n.textMedium {\\n  text-align: right;\\n  color: #7f8c8d;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2FkZC1oZWFsdGgtY2FyZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0VBQ0EsY0FBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFDQTtFQUNJLGlCQUFBO0VBQ0EsY0FBQTtBQUVKIiwiZmlsZSI6ImFkZC1oZWFsdGgtY2FyZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1nLXdyYXBwZXJDYXJkIHtcbiAgbWluLXdpZHRoOiA4OHB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiBhdXRvO1xuICBtYXJnaW4tdG9wOiAxMCU7XG4gIG1hcmdpbi1ib3R0b206IDEwJTtcbn1cbi50ZXh0TWVkaXVtIHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBjb2xvcjogIzdmOGM4ZDtcbiAgfSJdfQ== */\";"]}