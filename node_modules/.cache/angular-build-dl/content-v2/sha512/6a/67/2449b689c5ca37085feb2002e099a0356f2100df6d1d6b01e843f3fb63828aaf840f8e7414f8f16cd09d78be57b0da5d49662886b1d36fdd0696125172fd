{"version":3,"sources":["./src/app/pages/home/healthcare/locations/locations.page.scss","./src/app/pages/home/healthcare/locations/locations.page.html","./src/app/pages/home/healthcare/locations/locations.module.ts","./src/app/pages/home/healthcare/locations/locations.page.ts","./src/app/pages/home/healthcare/locations/locations-routing.module.ts"],"names":[],"mappings":"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","file":"locations-locations-module-es2015.js","sourcesContent":["export default \"google-map {\\n  display: block;\\n  max-width: 85%;\\n  height: 100%;\\n  position: unset !important;\\n  overflow: visible !important;\\n}\\n\\nion-content {\\n  --background: none;\\n  background-position: center top;\\n  background-repeat: no-repeat !important;\\n  background-size: cover !important;\\n  min-height: 500px;\\n}\\n\\nion-button {\\n  color: white;\\n  --background:#D6006D;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xvY2F0aW9ucy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsY0FBQTtFQUNBLFlBQUE7RUFDQSwwQkFBQTtFQUNBLDRCQUFBO0FBQ0o7O0FBQ0U7RUFDRSxrQkFBQTtFQUNBLCtCQUFBO0VBQ0EsdUNBQUE7RUFDQSxpQ0FBQTtFQUNBLGlCQUFBO0FBRUo7O0FBQUU7RUFDRSxZQUFBO0VBQ0Esb0JBQUE7QUFHSiIsImZpbGUiOiJsb2NhdGlvbnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZ29vZ2xlLW1hcCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWF4LXdpZHRoOiA4NSU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvc2l0aW9uOnVuc2V0ICFpbXBvcnRhbnQ7XG4gICAgb3ZlcmZsb3c6dmlzaWJsZSAhaW1wb3J0YW50O1xuICB9XG4gIGlvbi1jb250ZW50IHtcbiAgICAtLWJhY2tncm91bmQ6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHRvcDtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0ICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlciAhaW1wb3J0YW50O1xuICAgIG1pbi1oZWlnaHQ6IDUwMHB4O1xuICB9XG4gIGlvbi1idXR0b257XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIC0tYmFja2dyb3VuZDojRDYwMDZEO1xuICB9Il19 */\";","export default \"<custom-header></custom-header>\\n<ion-content\\n  class=\\\"back\\\"\\n  [ngStyle]=\\\"{'background': 'url(' + backgroundImage + ')'}\\\"\\n  fullscreen\\n>\\n  <page-header\\n    title=\\\"{{ 'quadres.quadre_' + this.healthcareService.tipus_registre  | translate}}\\\"\\n    icon=\\\"assets/icons/i_quadre_{{ this.healthcareService.tipus_registre }}.svg\\\"\\n  >\\n  </page-header>\\n  <div class=\\\"main-container\\\">\\n    <!--Breadcrumbss-->\\n    <ion-text>\\n      <a\\n        routerLink=\\\"/app/home/healthcare/medical-specialties\\\"\\n        [state]=\\\"{tipus_registre:this.healthcareService.tipus_registre}\\\"\\n      >\\n        {{ 'commons.home' | translate }}\\n      </a>\\n      > <span> {{ this.healthcareService.specialty?.NOM_SERVEI}} </span>\\n    </ion-text>\\n\\n    <ion-searchbar\\n      placeholder=\\\"{{ 'locations.search' | translate }}\\\"\\n      [(ngModel)]=\\\"filterTerm\\\"\\n      animated=\\\"true\\\"\\n    >\\n    </ion-searchbar>\\n\\n    \\n    <ion-segment\\n      color=\\\"primary\\\"\\n      [(ngModel)]=\\\"type\\\"\\n      (ionChange)=\\\"segmentChanged($event)\\\"\\n      scrollable\\n    >\\n      <ion-segment-button value=\\\"by-location\\\">\\n        <ion-label>{{ 'locations.by_location' | translate }}</ion-label>\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"near-me\\\">\\n        <ion-label>{{ 'locations.near_me' | translate }}</ion-label>\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"map\\\" id=\\\"content\\\" >\\n        <ion-label>{{ 'locations.map' | translate }}</ion-label>\\n      </ion-segment-button>\\n    </ion-segment>\\n\\n    <ng-container *ngIf=\\\"this.fetching else showLocations\\\">\\n      <div style=\\\"margin: 20px 40px; text-align: center\\\">\\n        <ion-spinner color=\\\"primary\\\"></ion-spinner>\\n      </div>\\n    </ng-container>\\n  \\n    <ng-template #showLocations>\\n      <div [ngSwitch]=\\\"type\\\">\\n        <div [@fetchData]=\\\"this.fetching ? 'hidden' : 'shown'\\\" style=\\\"opacity: 0\\\">\\n        <ion-list lines=\\\"full\\\" *ngSwitchCase=\\\"'by-location'\\\">\\n          <ion-item\\n            *ngFor=\\\"let location of locations | filter:filterTerm\\\"\\n            (click)=\\\"getProviders(location)\\\"\\n            >{{ location.POBLACIO }}\\n            <ion-icon\\n              name=\\\"chevron-forward-outline\\\"\\n              slot=\\\"end\\\"\\n              size=\\\"small\\\"\\n            ></ion-icon>\\n          </ion-item>\\n        </ion-list>\\n  \\n        <ion-list lines=\\\"full\\\" *ngSwitchCase=\\\"'near-me'\\\">\\n          <ion-item *ngIf=\\\"this.gpsNotFound\\\">\\n            {{ 'locations.gpsNotFound' | translate }}\\n          </ion-item>\\n  \\n          <ion-item\\n            *ngFor=\\\"let provider of providersByGPS | filter:filterTerm\\\"\\n            (click)=\\\"getContact(provider)\\\"\\n            >{{ provider.getName() }}&nbsp;<ion-button\\n              *ngIf=\\\"provider.getPreferent() == '1'\\\"\\n              >CMC</ion-button\\n            >\\n            <ion-icon\\n              name=\\\"chevron-forward-outline\\\"\\n              slot=\\\"end\\\"\\n              size=\\\"small\\\"\\n            ></ion-icon>\\n          </ion-item>\\n        </ion-list>\\n  \\n      </div>\\n      </div>\\n    </ng-template>\\n\\n    \\n    <div [style.display]=\\\"type == 'map' ? 'block' : 'none'\\\">\\n      <ion-content>\\n        <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n          <ion-fab-button (click)=\\\"geolocateMe()\\\" color=\\\"secondary\\\">\\n            <ion-icon name=\\\"locate\\\"></ion-icon>\\n          </ion-fab-button>\\n        </ion-fab>\\n        <google-map [mapOptions]=\\\"mapOptions\\\"></google-map>\\n      </ion-content>\\n    </div>\\n    \\n\\n  </div>\\n  \\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { LocationsPageRoutingModule } from './locations-routing.module';\nimport { LocationsPage } from './locations.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LocationsPageRoutingModule,\n    ReactiveFormsModule,\n    ComponentsModule,\n    TranslateModule,\n    Ng2SearchPipeModule,\n    \n  ],\n  declarations: [LocationsPage]\n})\nexport class LocationsPageModule {}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { GoogleMapComponent } from 'src/app/components/google-map/google-map.component';\nimport { HealthcareService } from 'src/app/services/healthcare.service';\nimport { Location, LocationsByGPSRequest, ProviderByGPS, ProviderByLocation } from 'src/app/shared/classes/credential-data';\nimport { Plugins } from '@capacitor/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { LanguageService } from 'src/app/pages/language/language.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { getRandomBackground } from 'src/app/shared/classes/utils';\nimport { throwError } from 'rxjs';\nimport { Location as NgLocation} from '@angular/common';\nconst { Geolocation } = Plugins;\n@Component({\n  selector: 'app-locations',\n  templateUrl: './locations.page.html',\n  styleUrls: ['./locations.page.scss'],\n  animations: [\n    trigger('fetchData', [\n      state('shown', style({ opacity: 1 })),\n      state('hidden', style({ opacity: 0 })),\n      transition('* => *', animate('1000ms'))\n    ])\n  ]\n})\nexport class LocationsPage implements OnInit, AfterViewInit {\n  backgroundImage: string = getRandomBackground();\n \n  @ViewChild(GoogleMapComponent, { static: false }) _GoogleMap: GoogleMapComponent;\n  @ViewChild('content') content;\n\n  map: google.maps.Map;\n  mapOptions: google.maps.MapOptions = {\n    zoom: 15,\n    center: { lat: 41.3851, lng: 2.1734 }\n    // uncomment the following line if you want to remove the default Map controls\n    // disableDefaultUI: true\n  };\n  visibility: string = 'hidden';\n  fetching:boolean = true;\n  deviceCoords: {};\n  loadingElement: any;\n  locations: any;\n  providersByGPS: ProviderByGPS[] = [];\n  filterTerm: string;\n  tipus_registre: string;\n  type: string = \"map\";\n  url: string = '/app/home/healthcare/providers';\n  nom_servei: string;\n  directionsService = new google.maps.DirectionsService();\n  directionsDisplay = new google.maps.DirectionsRenderer();\n  current_location: google.maps.LatLng;\n  gpsNotFound:boolean;\n\n  constructor(public healthcareService: HealthcareService,\n    private router: Router,\n    private loadingController: LoadingController,\n    public languageService: LanguageService,\n    public translate: TranslateService,\n    private location: NgLocation) { \n      \n    }\n\n  ngOnInit() {\n    this.getLocationsByMedicalSpecialty();\n\n  }\n\n  // Init google map API\n  ngAfterViewInit() {\n    // GoogleMapComponent should be available\n    this._GoogleMap.$mapReady.subscribe(map => {\n      this.map = map;\n      this.directionsDisplay.setMap(map);\n    });\n    this.createLoader();\n    this.type = \"by-location\";\n  }\n\n\n  toggle(){\n    this.fetching = !this.fetching;\n  }\n\n  async createLoader() {\n    this.translate.get('locations.fetching').subscribe(async text => {\n      console.log(\"message:\", await text);\n      this.loadingElement = await this.loadingController.create({\n        message: text\n      });\n    })\n  }\n\n  async presentLoader() {\n    await this.loadingElement.present();\n  }\n\n  async dismissLoader() {\n    if (this.loadingElement) {\n      await this.loadingElement.dismiss();\n    }\n  }\n\n  // Get the device coords\n  public async geolocateMe(): Promise<void> {\n    //this.presentLoader();\n    \n    await Geolocation.getCurrentPosition().then(async position => {\n     \n     \n      this.deviceCoords = position;\n      this.current_location = new google.maps.LatLng(position.coords?.latitude, position.coords?.longitude);\n      this.map.panTo(this.current_location);\n      const request = new LocationsByGPSRequest(this.languageService.getLanguageAPI(), this.healthcareService.quadre, this.healthcareService.specialty.CODI_SERV, this.healthcareService.tipus_registre, position.coords?.latitude.toString(), position.coords?.longitude.toString(), \"1.173422\", \"3.173422\", (position.coords?.latitude - 2).toString(), (position.coords?.latitude + 2).toString(), \"10\");\n      \n      \n        \n      this.healthcareService.getMedicalCentersByGPS(request).subscribe(\n        async (response: ProviderByGPS[]) => {\n          console.log(\"getMedicalCentersByGPS:\",response);\n          this.providersByGPS = response;\n\n           // add marker in google map for each provider\n          this.providersByGPS.forEach(provider => {\n           \n            const provider_location = new google.maps.LatLng(parseFloat(provider.LATITUD), parseFloat(provider.LONGITUD));\n            const marker = new google.maps.Marker({\n              position: provider_location,\n              title: provider.getName()\n            });\n\n            // To add the marker to the map, call setMap();\n            marker.setMap(this.map);\n            google.maps.event.addListener(marker, 'click', function (evt) {\n              const provider_location = new google.maps.LatLng(evt.latLng.lat().toFixed(3), evt.latLng.lng().toFixed(3));\n              window.open('https://www.google.com/maps/search/?api=1&query=' + evt.latLng.lat().toFixed(3) + ',' + evt.latLng.lng().toFixed(3),\n                '_system', 'location=yes');\n            });\n          })\n        },\n        async (error) => {\n          // Called when error\n          return throwError(await error);\n        }, \n        ()=>{\n          this.fetching = false;\n        });\n    }).catch((error) => { \n      this.fetching = false;\n      this.gpsNotFound = true;\n      console.log('Error getting current location', error);\n    });\n   \n  }\n\n  async getLocationsByMedicalSpecialty() {\n  \n    this.healthcareService.getLocationByMedicalSpecialty().subscribe(\n      async (response) => {\n        this.locations = response;\n      },\n      async (error) => {\n        // Called when error\n        this.location.back();\n        throw error;\n      }, \n      ()=>{\n        this.toggle();\n      });\n  }\n\n  async initMap() {\n    this.directionsService = new google.maps.DirectionsService();\n    this.directionsDisplay = new google.maps.DirectionsRenderer();\n\n    this.createLoader();\n  }\n\n  // Get providers by location\n  getProviders(location: Location) {\n    this.healthcareService.location = location;\n    this.router.navigate([this.url]);\n  }\n\n  // Handle UI tabs\n  async segmentChanged(ev: any) {\n   \n    const segment = ev.detail.value;\n    if (segment == 'near-me' || segment == 'map') {\n      \n      if(segment == 'near-me') \n        this.fetching = true;\n\n      await this.geolocateMe();\n    }\n\n  }\n\n\n  // Redirect to provider's contact info\n  getContact(providerByGps: ProviderByGPS) {\n    console.log(\"providerByGps\", providerByGps);\n    \n    this.locations.forEach(element => {\n      if(providerByGps.CODI_POBLE == element.CODI_POBLE){\n        this.healthcareService.location = element;\n        console.log(\"found: \", element);\n        return false;\n      }\n    });\n    let provider = new ProviderByLocation();\n\n    this.healthcareService.provider = Object.assign(provider, providerByGps);\n    \n    console.log(\"this.healthcareService.provider: \", this.healthcareService.provider);\n    if (provider.isDoctor())\n      this.router.navigate(['/app/home/healthcare/doctors']);\n    else\n      this.router.navigate(['/app/home/healthcare/centers']);\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LocationsPage } from './locations.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LocationsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LocationsPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}