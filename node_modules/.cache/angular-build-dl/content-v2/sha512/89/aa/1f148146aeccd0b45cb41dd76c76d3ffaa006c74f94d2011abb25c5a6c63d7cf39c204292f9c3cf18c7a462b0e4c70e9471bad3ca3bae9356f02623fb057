{"version":3,"sources":["webpack:///src/app/pages/home/healthcare/providers/providers.page.ts","webpack:///src/app/pages/home/healthcare/providers/providers.page.scss","webpack:///src/app/pages/home/healthcare/providers/providers-routing.module.ts","webpack:///src/app/pages/home/healthcare/providers/providers.module.ts","webpack:///src/app/pages/home/healthcare/providers/providers.page.html"],"names":["ProvidersPage","healthcareService","router","loadingController","languageService","ngLocation","backgroundImage","url","providers","doctors","centers","type","visibility","fetching","getProvidersByLocation","request","getLanguageAPI","quadre","specialty","CODI_SERV","location","CODI_POBLE","tipus_registre","getMedicalCentersByLocation","subscribe","data","forEach","provider","isDoctor","push","error","back","toggle","navigate","ev","segment","detail","value","selector","template","routes","path","component","ProvidersPageRoutingModule","imports","forChild","exports","ProvidersPageModule","declarations"],"mappings":"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","file":"providers-providers-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { Location, Specialty, ProvidersRequest, ProviderByLocation } from 'src/app/shared/classes/credential-data';\nimport { HealthcareService } from 'src/app/services/healthcare.service';\nimport { LanguageService } from 'src/app/pages/language/language.service';\nimport { getRandomBackground } from 'src/app/shared/classes/utils';\nimport { Location as NgLocation} from '@angular/common';\n\n@Component({\n  selector: 'app-providers',\n  templateUrl: './providers.page.html',\n  styleUrls: ['./providers.page.scss'],\n})\nexport class ProvidersPage implements OnInit {\n  backgroundImage: string = getRandomBackground();\n  filterTerm: string;\n  specialties: Specialty[];\n  params : any;\n  url :string = 'app/home/healthcare/centers';\n  location: Location;\n  providers : ProviderByLocation[] = [];\n  doctors : ProviderByLocation[]= [];\n  centers : ProviderByLocation[]= [];\n  preferent: any;\n  segmento :any;\n  type : string = \"doctors&centers\";\n  visibility: string = 'hidden';\n  fetching:boolean = true;\n  constructor( public healthcareService: HealthcareService,\n    private router: Router,\n    private loadingController: LoadingController,\n    public languageService: LanguageService,\n    private ngLocation: NgLocation) {\n      \n     }\n\n  ngOnInit() {\n    this.getProvidersByLocation();\n   \n  }\n\n  async getProvidersByLocation(){\n    const request = new ProvidersRequest(this.languageService.getLanguageAPI(),this.healthcareService.quadre,this.healthcareService.specialty.CODI_SERV, this.healthcareService.location.CODI_POBLE, this.healthcareService.tipus_registre);\n  \n    this.healthcareService.getMedicalCentersByLocation(request).subscribe( \n      async (data : ProviderByLocation[]) => {\n       \n      \n        this.providers = data;\n        this.providers.forEach(provider => {\n\n          if(provider.isDoctor()){\n            this.doctors.push(provider);\n          }else{\n            this.centers.push(provider);\n          }\n            \n        });\n      },\n      async (error) => {\n        this.ngLocation.back();\n        throw error;\n      },\n      () => {\n        this.toggle();\n      });\n  }\n\n  public getContact(provider : ProviderByLocation){\n    this.healthcareService.provider = provider;\n    \n    if(provider.isDoctor())\n      this.router.navigate(['/app/home/healthcare/doctors']);\n    else\n      this.router.navigate([this.url]);\n  }\n\n  public segmentChanged(ev: any) {\n      const segment = ev.detail.value;\n    }\n\n  toggle(){\n    this.fetching = !this.fetching;\n  }\n  \n\n}\n","export default \"ion-content {\\n  --background: none;\\n  background-position: center top;\\n  background-repeat: no-repeat !important;\\n  background-size: cover !important;\\n}\\n\\n.Pref {\\n  color: white;\\n  --background:#D6006D;\\n}\\n\\n.cuadreBtn {\\n  --background:#ffffff;\\n  color: black;\\n  --border-color:#505050;\\n  --border-radius: 0% !important;\\n  --border: 1px !important;\\n  --min-width: 135%!important;\\n  --padding-top: 20px;\\n  --padding-bottom: 30px;\\n  --margin-bottom:30px;\\n}\\n\\n.cuadreIcon {\\n  padding-top: 16%;\\n}\\n\\n.itemList {\\n  outline: none;\\n  min-height: 60px !important;\\n  padding-top: 5px !important;\\n  padding-bottom: 5px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb3ZpZGVycy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBQTtFQUNBLCtCQUFBO0VBQ0EsdUNBQUE7RUFDQSxpQ0FBQTtBQUNGOztBQUNBO0VBQ0UsWUFBQTtFQUNBLG9CQUFBO0FBRUY7O0FBQUE7RUFDRSxvQkFBQTtFQUNBLFlBQUE7RUFDQSxzQkFBQTtFQUNBLDhCQUFBO0VBQ0Esd0JBQUE7RUFDQSwyQkFBQTtFQUNBLG1CQUFBO0VBQ0Esc0JBQUE7RUFDQSxvQkFBQTtBQUdGOztBQUFBO0VBQ0MsZ0JBQUE7QUFHRDs7QUFBQTtFQUNFLGFBQUE7RUFDQywyQkFBQTtFQUNBLDJCQUFBO0VBQ0EsOEJBQUE7QUFHSCIsImZpbGUiOiJwcm92aWRlcnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IG5vbmU7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciB0b3A7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlciAhaW1wb3J0YW50O1xufVxuLlByZWZ7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgLS1iYWNrZ3JvdW5kOiNENjAwNkQ7XG59XG4uY3VhZHJlQnRue1xuICAtLWJhY2tncm91bmQ6I2ZmZmZmZjtcbiAgY29sb3I6IGJsYWNrO1xuICAtLWJvcmRlci1jb2xvcjojNTA1MDUwO1xuICAtLWJvcmRlci1yYWRpdXM6IDAlICFpbXBvcnRhbnQ7XG4gIC0tYm9yZGVyOiAxcHggIWltcG9ydGFudDtcbiAgLS1taW4td2lkdGg6IDEzNSUhaW1wb3J0YW50O1xuICAtLXBhZGRpbmctdG9wOiAyMHB4O1xuICAtLXBhZGRpbmctYm90dG9tOiAzMHB4O1xuICAtLW1hcmdpbi1ib3R0b206MzBweDtcbiBcbn1cbi5jdWFkcmVJY29ue1xuIHBhZGRpbmctdG9wOiAxNiU7XG5cbn1cbi5pdGVtTGlzdCB7XG4gIG91dGxpbmU6IG5vbmU7XG4gICBtaW4taGVpZ2h0OjYwcHggIWltcG9ydGFudDtcbiAgIHBhZGRpbmctdG9wOiA1cHghaW1wb3J0YW50O1xuICAgcGFkZGluZy1ib3R0b206IDVweCFpbXBvcnRhbnQ7XG59Il19 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProvidersPage } from './providers.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProvidersPage,\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  \n})\nexport class ProvidersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ProvidersPageRoutingModule } from './providers-routing.module';\nimport { ProvidersPage } from './providers.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProvidersPageRoutingModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    Ng2SearchPipeModule,\n    RouterModule,\n    ComponentsModule\n  ],\n  \n  declarations: [ProvidersPage]\n})\nexport class ProvidersPageModule {}\n","export default \"<custom-header></custom-header>\\n<ion-content class=\\\"back\\\" [ngStyle]=\\\"{'background': 'url(' + backgroundImage + ')'}\\\" fullscreen>\\n    <page-header title=\\\"{{'quadres.quadre_' + this.healthcareService.tipus_registre | translate}}\\\" icon=\\\"assets/icons/i_quadre_{{ this.healthcareService.tipus_registre }}.svg\\\">\\n  </page-header>\\n  <div class=\\\"main-container\\\">\\n    <!--Breadcrumbs-->\\n  <ion-text>\\n    <a routerLink='/app/home/healthcare/medical-specialties'> {{ 'commons.home'  | translate  }} </a> >\\n    <a routerLink='/app/home/healthcare/locations'> {{ this.healthcareService.specialty?.NOM_SERVEI}} </a> \\n    > <span> {{ this.healthcareService.location?.POBLACIO }} </span> \\n  </ion-text>\\n\\n  <ion-searchbar placeholder=\\\"{{ 'centers.search' | translate }}\\\" [(ngModel)]=\\\"filterTerm\\\" animated=\\\"true\\\"></ion-searchbar>\\n\\n  <ion-segment color=\\\"primary\\\" [(ngModel)]=\\\"type\\\" (ionChange)=\\\"segmentChanged($event)\\\" scrollable>\\n    <ion-segment-button value=\\\"doctors&centers\\\">\\n      <ion-label>{{ 'providers.locations' | translate }}</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"doctors\\\">\\n      <ion-label>{{ 'providers.doctors' | translate }}</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"centers\\\">\\n      <ion-label>{{ 'providers.centers' | translate }}</ion-label>\\n    </ion-segment-button>\\n\\n  </ion-segment>\\n\\n  <ng-container *ngIf=\\\"this.fetching else showProviders\\\">\\n    <div style=\\\"margin: 20px 40px; text-align: center\\\">\\n      <ion-spinner color=\\\"primary\\\"></ion-spinner>\\n    </div>\\n  </ng-container>\\n\\n  <ng-template #showProviders>\\n    <div [ngSwitch]=\\\"type\\\">\\n      <ion-list *ngSwitchCase=\\\"'doctors&centers'\\\" >\\n        <ion-list lines=\\\"full\\\" *ngFor=\\\"let provider of providers | filter:filterTerm\\\">\\n          <ion-item class=\\\"itemList\\\" (click)=\\\"getContact(provider)\\\">{{ provider.getName() }}&nbsp;<ion-button class=\\\"Pref\\\" *ngIf=\\\"provider.getPreferent() == '1'\\\">CMC</ion-button>\\n            <ion-icon name=\\\"chevron-forward-outline\\\" slot=\\\"end\\\" size=\\\"small\\\"></ion-icon>\\n          </ion-item>\\n        </ion-list>\\n      </ion-list>\\n  \\n      <ion-list lines=\\\"full\\\" *ngSwitchCase=\\\"'doctors'\\\">\\n        <ion-item class=\\\"itemList\\\"  *ngFor=\\\"let doctor of doctors | filter:filterTerm\\\" (click)=\\\"getContact(doctor)\\\">{{ doctor.getName() }}&nbsp;<ion-button class=\\\"Pref\\\" *ngIf=\\\"doctor.getPreferent() == '1'\\\">CMC</ion-button>\\n          <ion-icon name=\\\"chevron-forward-outline\\\" slot=\\\"end\\\" size=\\\"small\\\"></ion-icon>\\n        </ion-item>\\n      </ion-list>\\n  \\n      <ion-list  lines=\\\"full\\\" *ngSwitchCase=\\\"'centers'\\\">\\n        <ion-item  class=\\\"itemList\\\"  *ngFor=\\\"let center of centers | filter:filterTerm\\\" (click)=\\\"getContact(center)\\\">{{ center.getName() }}&nbsp;<ion-button class=\\\"Pref\\\" *ngIf=\\\"center.getPreferent() == '1'\\\">CMC</ion-button>\\n          <ion-icon name=\\\"chevron-forward-outline\\\" slot=\\\"end\\\" size=\\\"small\\\"></ion-icon>\\n        </ion-item>\\n      </ion-list>\\n    </div>\\n  </ng-template>\\n\\n</div> \\n</ion-content>\";"]}