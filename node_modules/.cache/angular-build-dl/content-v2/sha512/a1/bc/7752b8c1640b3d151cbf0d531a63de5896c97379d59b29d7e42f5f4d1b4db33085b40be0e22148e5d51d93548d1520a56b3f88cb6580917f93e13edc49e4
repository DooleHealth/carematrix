{"version":3,"sources":["webpack:///src/app/pages/home/healthcare/locations/locations.page.scss","webpack:///src/app/pages/home/healthcare/locations/locations.page.html","webpack:///src/app/pages/home/healthcare/locations/locations.module.ts","webpack:///src/app/pages/home/healthcare/locations/locations.page.ts","webpack:///src/app/pages/home/healthcare/locations/locations-routing.module.ts"],"names":["LocationsPageModule","imports","declarations","Geolocation","LocationsPage","healthcareService","router","loadingController","languageService","translate","location","backgroundImage","mapOptions","zoom","center","lat","lng","visibility","fetching","providersByGPS","type","url","directionsService","google","maps","DirectionsService","directionsDisplay","DirectionsRenderer","getLocationsByMedicalSpecialty","_GoogleMap","$mapReady","subscribe","map","setMap","createLoader","get","text","console","log","create","message","loadingElement","present","dismiss","getCurrentPosition","then","position","deviceCoords","current_location","LatLng","coords","latitude","longitude","panTo","request","getLanguageAPI","quadre","specialty","CODI_SERV","tipus_registre","toString","getMedicalCentersByGPS","response","forEach","provider","provider_location","parseFloat","LATITUD","LONGITUD","marker","Marker","title","getName","event","addListener","evt","latLng","toFixed","window","open","error","gpsNotFound","getLocationByMedicalSpecialty","locations","back","toggle","navigate","ev","segment","detail","value","geolocateMe","providerByGps","element","CODI_POBLE","Object","assign","isDoctor","selector","template","animations","opacity","routes","path","component","LocationsPageRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCwBFA,mBAAmB;AAAA;AAAA,O;;AAAnBA,yBAAmB,6DAd/B,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,oFAJO,EAKP,kEALO,EAMP,qFANO,EAOP,mEAPO,EAQP,qEARO,CADD;AAYRC,oBAAY,EAAE,CAAC,6DAAD;AAZN,OAAT,CAc+B,GAAnBF,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXb,UAAQG,WAAR,GAAwB,uDAAxB,CAAQA,WAAR;;UAaaC,aAAa;AA6BxB,+BAAmBC,iBAAnB,EACUC,MADV,EAEUC,iBAFV,EAGSC,eAHT,EAISC,SAJT,EAKUC,QALV,EAKgC;AAAA;;AALb,eAAAL,iBAAA,GAAAA,iBAAA;AACT,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACD,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AACC,eAAAC,QAAA,GAAAA,QAAA;AAjCV,eAAAC,eAAA,GAA0B,2FAA1B;AAMA,eAAAC,UAAA,GAAqC;AACnCC,gBAAI,EAAE,EAD6B;AAEnCC,kBAAM,EAAE;AAAEC,iBAAG,EAAE,OAAP;AAAgBC,iBAAG,EAAE;AAArB,aAF2B,CAGnC;AACA;;AAJmC,WAArC;AAMA,eAAAC,UAAA,GAAqB,QAArB;AACA,eAAAC,QAAA,GAAmB,IAAnB;AAIA,eAAAC,cAAA,GAAkC,EAAlC;AAGA,eAAAC,IAAA,GAAe,KAAf;AACA,eAAAC,GAAA,GAAc,gCAAd;AAEA,eAAAC,iBAAA,GAAoB,IAAIC,MAAM,CAACC,IAAP,CAAYC,iBAAhB,EAApB;AACA,eAAAC,iBAAA,GAAoB,IAAIH,MAAM,CAACC,IAAP,CAAYG,kBAAhB,EAApB;AAWG;;AApCqB;AAAA;AAAA,iBAsCxB,oBAAW;AACT,iBAAKC,8BAAL;AAED,WAzCuB,CA2CxB;;AA3CwB;AAAA;AAAA,iBA4CxB,2BAAkB;AAAA;;AAChB;AACA,iBAAKC,UAAL,CAAgBC,SAAhB,CAA0BC,SAA1B,CAAoC,UAAAC,GAAG,EAAI;AACzC,mBAAI,CAACA,GAAL,GAAWA,GAAX;;AACA,mBAAI,CAACN,iBAAL,CAAuBO,MAAvB,CAA8BD,GAA9B;AACD,aAHD;;AAIA,iBAAKE,YAAL;AACA,iBAAKd,IAAL,GAAY,aAAZ;AACD;AApDuB;AAAA;AAAA,iBAuDxB,kBAAM;AACJ,iBAAKF,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACD;AAzDuB;AAAA;AAAA,iBA2DlB,wBAAe;;;;;;;;AACnB,2BAAKT,SAAL,CAAe0B,GAAf,CAAmB,oBAAnB,EAAyCJ,SAAzC,CAAmD,UAAMK,IAAN;AAAA,+BAAc;AAAA;AAAA;AAAA;AAAA;AAAA,gDAC/DC,OAD+D;AAAA;AACvC,yCAAMD,IAAN;;AADuC;AAAA;;AAAA,8CACvDE,GADuD,mBACnD,UADmD;;AAAA;AAEzC,yCAAM,KAAK/B,iBAAL,CAAuBgC,MAAvB,CAA8B;AACxDC,2CAAO,EAAEJ;AAD+C,mCAA9B,CAAN;;AAFyC;AAE/D,uCAAKK,cAF0D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAd;AAAA,uBAAnD;;;;;;;;;AAMD;AAlEuB;AAAA;AAAA,iBAoElB,yBAAgB;;;;;;;AACpB,6BAAM,KAAKA,cAAL,CAAoBC,OAApB,EAAN;;;;;;;;;AACD;AAtEuB;AAAA;AAAA,iBAwElB,yBAAgB;;;;;;2BAChB,KAAKD,c;;;;;;AACP,6BAAM,KAAKA,cAAL,CAAoBE,OAApB,EAAN;;;;;;;;;AAEH,WA5EuB,CA8ExB;;AA9EwB;AAAA;AAAA,iBA+EX,uBAAW;;;;;;;;;AAGtB,6BAAMxC,WAAW,CAACyC,kBAAZ,GAAiCC,IAAjC,CAAsC,UAAMC,QAAN;AAAA,+BAAkB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAG5D,uCAAKC,YAAL,GAAoBD,QAApB;AACA,uCAAKE,gBAAL,GAAwB,IAAIzB,MAAM,CAACC,IAAP,CAAYyB,MAAhB,CAAuB,CAAD,KAACH,QAAQ,CAACI,MAAT,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEC,QAAxC,EAAkD,CAAF,KAAEL,QAAQ,CAACI,MAAT,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEE,SAAnE,CAAxB;AACA,uCAAKpB,GAAL,CAASqB,KAAT,CAAe,KAAKL,gBAApB;AACMM,yCANsD,GAM5C,IAAI,4FAAJ,CAA0B,KAAK9C,eAAL,CAAqB+C,cAArB,EAA1B,EAAiE,KAAKlD,iBAAL,CAAuBmD,MAAxF,EAAgG,KAAKnD,iBAAL,CAAuBoD,SAAvB,CAAiCC,SAAjI,EAA4I,KAAKrD,iBAAL,CAAuBsD,cAAnK,EAAmL,CAAF,KAAEb,QAAQ,CAACI,MAAT,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEC,QAAF,CAAWS,QAAX,EAAlM,EAAyN,CAAJ,KAAId,QAAQ,CAACI,MAAT,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEE,SAAF,CAAYQ,QAAZ,EAAxO,EAAgQ,UAAhQ,EAA4Q,UAA5Q,EAAwR,CAAC,OAAAd,QAAQ,CAACI,MAAT,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEC,QAAjB,IAA4B,CAA7B,EAAgCS,QAAhC,EAAxR,EAAoU,CAAC,OAAAd,QAAQ,CAACI,MAAT,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEC,QAAjB,IAA4B,CAA7B,EAAgCS,QAAhC,EAApU,EAAgX,IAAhX,CAN4C;AAU5D,uCAAKvD,iBAAL,CAAuBwD,sBAAvB,CAA8CP,OAA9C,EAAuDvB,SAAvD,CACE,UAAO+B,QAAP;AAAA,2CAAqC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnCzB,qDAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCwB,QAAtC;AACA,mDAAK3C,cAAL,GAAsB2C,QAAtB,CAFmC,CAIlC;;AAAA;AACD,mDAAK3C,cAAL,CAAoB4C,OAApB,CAA4B,UAAAC,QAAQ,EAAI;AAEtC,oDAAMC,iBAAiB,GAAG,IAAI1C,MAAM,CAACC,IAAP,CAAYyB,MAAhB,CAAuBiB,UAAU,CAACF,QAAQ,CAACG,OAAV,CAAjC,EAAqDD,UAAU,CAACF,QAAQ,CAACI,QAAV,CAA/D,CAA1B;AACA,oDAAMC,MAAM,GAAG,IAAI9C,MAAM,CAACC,IAAP,CAAY8C,MAAhB,CAAuB;AACpCxB,0DAAQ,EAAEmB,iBAD0B;AAEpCM,uDAAK,EAAEP,QAAQ,CAACQ,OAAT;AAF6B,iDAAvB,CAAf,CAHsC,CAQtC;;AAAA;AACAH,sDAAM,CAACpC,MAAP,CAAc,MAAI,CAACD,GAAnB;AACAT,sDAAM,CAACC,IAAP,CAAYiD,KAAZ,CAAkBC,WAAlB,CAA8BL,MAA9B,EAAsC,OAAtC,EAA+C,UAAUM,GAAV,EAAe;AAC5D,sDAAMV,iBAAiB,GAAG,IAAI1C,MAAM,CAACC,IAAP,CAAYyB,MAAhB,CAAuB0B,GAAG,CAACC,MAAJ,CAAW7D,GAAX,GAAiB8D,OAAjB,CAAyB,CAAzB,CAAvB,EAAoDF,GAAG,CAACC,MAAJ,CAAW5D,GAAX,GAAiB6D,OAAjB,CAAyB,CAAzB,CAApD,CAA1B;AACAC,wDAAM,CAACC,IAAP,CAAY,qDAAqDJ,GAAG,CAACC,MAAJ,CAAW7D,GAAX,GAAiB8D,OAAjB,CAAyB,CAAzB,CAArD,GAAmF,GAAnF,GAAyFF,GAAG,CAACC,MAAJ,CAAW5D,GAAX,GAAiB6D,OAAjB,CAAyB,CAAzB,CAArG,EACE,SADF,EACa,cADb;AAED,iDAJD;AAKD,+CAfD;;AALmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAArC;AAAA,mCADF,EAuBE,UAAOG,KAAP;AAAA,2CAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,6DAER,wDAFQ;AAAA;AAEG,qDAAMA,KAAN;;AAFH;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAjB;AAAA,mCAvBF,EA2BE,YAAI;AACF,0CAAI,CAAC9D,QAAL,GAAgB,KAAhB;AACD,mCA7BH;;AAV4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAlB;AAAA,uBAAtC,WAwCG,UAAC8D,KAAD,EAAW;AAClB,8BAAI,CAAC9D,QAAL,GAAgB,KAAhB;AACA,8BAAI,CAAC+D,WAAL,GAAmB,IAAnB;AACA5C,+BAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C0C,KAA9C;AACD,uBA5CK,CAAN;;;;;;;;;AA8CD;AAhIuB;AAAA;AAAA,iBAkIlB,0CAAiC;;;;;;;;AAErC,2BAAK3E,iBAAL,CAAuB6E,6BAAvB,GAAuDnD,SAAvD,CACE,UAAO+B,QAAP;AAAA,+BAAoB;AAAA;AAAA;AAAA;AAAA;AAClB,uCAAKqB,SAAL,GAAiBrB,QAAjB;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAApB;AAAA,uBADF,EAIE,UAAOkB,KAAP;AAAA,+BAAiB;AAAA;AAAA;AAAA;AAAA;AACf;AACA,uCAAKtE,QAAL,CAAc0E,IAAd;AAFe,wCAGTJ,KAHS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAjB;AAAA,uBAJF,EASE,YAAI;AACF,8BAAI,CAACK,MAAL;AACD,uBAXH;;;;;;;;;AAYD;AAhJuB;AAAA;AAAA,iBAkJlB,mBAAU;;;;;;AACd,2BAAK/D,iBAAL,GAAyB,IAAIC,MAAM,CAACC,IAAP,CAAYC,iBAAhB,EAAzB;AACA,2BAAKC,iBAAL,GAAyB,IAAIH,MAAM,CAACC,IAAP,CAAYG,kBAAhB,EAAzB;AAEA,2BAAKO,YAAL;;;;;;;;;AACD,WAvJuB,CAyJxB;;AAzJwB;AAAA;AAAA,iBA0JxB,sBAAaxB,QAAb,EAAiC;AAC/B,iBAAKL,iBAAL,CAAuBK,QAAvB,GAAkCA,QAAlC;AACA,iBAAKJ,MAAL,CAAYgF,QAAZ,CAAqB,CAAC,KAAKjE,GAAN,CAArB;AACD,WA7JuB,CA+JxB;;AA/JwB;AAAA;AAAA,iBAgKlB,wBAAekE,EAAf,EAAwB;;;;;;;AAEtBC,6B,GAAUD,EAAE,CAACE,MAAH,CAAUC,K;;4BACtBF,OAAO,IAAI,SAAX,IAAwBA,OAAO,IAAI,K;;;;;AAErC,0BAAGA,OAAO,IAAI,SAAd,EACE,KAAKtE,QAAL,GAAgB,IAAhB;;AAEF,6BAAM,KAAKyE,WAAL,EAAN;;;;;;;;;AAGH,WA3KuB,CA8KxB;;AA9KwB;AAAA;AAAA,iBA+KxB,oBAAWC,aAAX,EAAyC;AAAA;;AACvCvD,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BsD,aAA7B;AAEA,iBAAKT,SAAL,CAAepB,OAAf,CAAuB,UAAA8B,OAAO,EAAI;AAChC,kBAAGD,aAAa,CAACE,UAAd,IAA4BD,OAAO,CAACC,UAAvC,EAAkD;AAChD,sBAAI,CAACzF,iBAAL,CAAuBK,QAAvB,GAAkCmF,OAAlC;AACAxD,uBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBuD,OAAvB;AACA,uBAAO,KAAP;AACD;AACF,aAND;AAOA,gBAAI7B,QAAQ,GAAG,IAAI,yFAAJ,EAAf;AAEA,iBAAK3D,iBAAL,CAAuB2D,QAAvB,GAAkC+B,MAAM,CAACC,MAAP,CAAchC,QAAd,EAAwB4B,aAAxB,CAAlC;AAEAvD,mBAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiD,KAAKjC,iBAAL,CAAuB2D,QAAxE;AACA,gBAAIA,QAAQ,CAACiC,QAAT,EAAJ,EACE,KAAK3F,MAAL,CAAYgF,QAAZ,CAAqB,CAAC,8BAAD,CAArB,EADF,KAGE,KAAKhF,MAAL,CAAYgF,QAAZ,CAAqB,CAAC,8BAAD,CAArB;AAEH;AAnMuB;;AAAA;AAAA,S;;;;gBAtBjB;;gBAHA;;gBACA;;gBAMA;;gBACA;;gBAGY;;;;;;gBAiBlB,uD;AAAS,iBAAC,qGAAD,EAAqB;AAAE,sBAAQ;AAAV,WAArB;;;gBACT,uD;AAAS,iBAAC,SAAD;;;AAJClF,mBAAa,6DAZzB,gEAAU;AACT8F,gBAAQ,EAAE,eADD;AAETC,gBAAQ,EAAR,uEAFS;AAITC,kBAAU,EAAE,CACV,qEAAQ,WAAR,EAAqB,CACnB,mEAAM,OAAN,EAAe,mEAAM;AAAEC,iBAAO,EAAE;AAAX,SAAN,CAAf,CADmB,EAEnB,mEAAM,QAAN,EAAgB,mEAAM;AAAEA,iBAAO,EAAE;AAAX,SAAN,CAAhB,CAFmB,EAGnB,wEAAW,QAAX,EAAqB,qEAAQ,QAAR,CAArB,CAHmB,CAArB,CADU,CAJH;;AAAA,OAAV,CAYyB,GAAbjG,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBb,UAAMkG,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,0BAA0B;AAAA;AAAA,O;;AAA1BA,gCAA0B,6DAJtC,+DAAS;AACRxG,eAAO,EAAE,CAAC,6DAAayG,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIsC,GAA1BF,0BAA0B,CAA1B","file":"locations-locations-module-es5.js","sourcesContent":["export default \"google-map {\\n  display: block;\\n  max-width: 85%;\\n  height: 100%;\\n  position: unset !important;\\n  overflow: visible !important;\\n}\\n\\nion-content {\\n  --background: none;\\n  background-position: center top;\\n  background-repeat: no-repeat !important;\\n  background-size: cover !important;\\n  min-height: 500px;\\n}\\n\\nion-button {\\n  color: white;\\n  --background:#D6006D;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xvY2F0aW9ucy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsY0FBQTtFQUNBLFlBQUE7RUFDQSwwQkFBQTtFQUNBLDRCQUFBO0FBQ0o7O0FBQ0U7RUFDRSxrQkFBQTtFQUNBLCtCQUFBO0VBQ0EsdUNBQUE7RUFDQSxpQ0FBQTtFQUNBLGlCQUFBO0FBRUo7O0FBQUU7RUFDRSxZQUFBO0VBQ0Esb0JBQUE7QUFHSiIsImZpbGUiOiJsb2NhdGlvbnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZ29vZ2xlLW1hcCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWF4LXdpZHRoOiA4NSU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvc2l0aW9uOnVuc2V0ICFpbXBvcnRhbnQ7XG4gICAgb3ZlcmZsb3c6dmlzaWJsZSAhaW1wb3J0YW50O1xuICB9XG4gIGlvbi1jb250ZW50IHtcbiAgICAtLWJhY2tncm91bmQ6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHRvcDtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0ICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlciAhaW1wb3J0YW50O1xuICAgIG1pbi1oZWlnaHQ6IDUwMHB4O1xuICB9XG4gIGlvbi1idXR0b257XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIC0tYmFja2dyb3VuZDojRDYwMDZEO1xuICB9Il19 */\";","export default \"<custom-header></custom-header>\\n<ion-content\\n  class=\\\"back\\\"\\n  [ngStyle]=\\\"{'background': 'url(' + backgroundImage + ')'}\\\"\\n  fullscreen\\n>\\n  <page-header\\n    title=\\\"{{ 'quadres.quadre_' + this.healthcareService.tipus_registre  | translate}}\\\"\\n    icon=\\\"assets/icons/i_quadre_{{ this.healthcareService.tipus_registre }}.svg\\\"\\n  >\\n  </page-header>\\n  <div class=\\\"main-container\\\">\\n    <!--Breadcrumbss-->\\n    <ion-text>\\n      <a\\n        routerLink=\\\"/app/home/healthcare/medical-specialties\\\"\\n        [state]=\\\"{tipus_registre:this.healthcareService.tipus_registre}\\\"\\n      >\\n        {{ 'commons.home' | translate }}\\n      </a>\\n      > <span> {{ this.healthcareService.specialty?.NOM_SERVEI}} </span>\\n    </ion-text>\\n\\n    <ion-searchbar\\n      placeholder=\\\"{{ 'locations.search' | translate }}\\\"\\n      [(ngModel)]=\\\"filterTerm\\\"\\n      animated=\\\"true\\\"\\n    >\\n    </ion-searchbar>\\n\\n    \\n    <ion-segment\\n      color=\\\"primary\\\"\\n      [(ngModel)]=\\\"type\\\"\\n      (ionChange)=\\\"segmentChanged($event)\\\"\\n      scrollable\\n    >\\n      <ion-segment-button value=\\\"by-location\\\">\\n        <ion-label>{{ 'locations.by_location' | translate }}</ion-label>\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"near-me\\\">\\n        <ion-label>{{ 'locations.near_me' | translate }}</ion-label>\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"map\\\" id=\\\"content\\\" >\\n        <ion-label>{{ 'locations.map' | translate }}</ion-label>\\n      </ion-segment-button>\\n    </ion-segment>\\n\\n    <ng-container *ngIf=\\\"this.fetching else showLocations\\\">\\n      <div style=\\\"margin: 20px 40px; text-align: center\\\">\\n        <ion-spinner color=\\\"primary\\\"></ion-spinner>\\n      </div>\\n    </ng-container>\\n  \\n    <ng-template #showLocations>\\n      <div [ngSwitch]=\\\"type\\\">\\n        <div [@fetchData]=\\\"this.fetching ? 'hidden' : 'shown'\\\" style=\\\"opacity: 0\\\">\\n        <ion-list lines=\\\"full\\\" *ngSwitchCase=\\\"'by-location'\\\">\\n          <ion-item\\n            *ngFor=\\\"let location of locations | filter:filterTerm\\\"\\n            (click)=\\\"getProviders(location)\\\"\\n            >{{ location.POBLACIO }}\\n            <ion-icon\\n              name=\\\"chevron-forward-outline\\\"\\n              slot=\\\"end\\\"\\n              size=\\\"small\\\"\\n            ></ion-icon>\\n          </ion-item>\\n        </ion-list>\\n  \\n        <ion-list lines=\\\"full\\\" *ngSwitchCase=\\\"'near-me'\\\">\\n          <ion-item *ngIf=\\\"this.gpsNotFound\\\">\\n            {{ 'locations.gpsNotFound' | translate }}\\n          </ion-item>\\n  \\n          <ion-item\\n            *ngFor=\\\"let provider of providersByGPS | filter:filterTerm\\\"\\n            (click)=\\\"getContact(provider)\\\"\\n            >{{ provider.getName() }}&nbsp;<ion-button\\n              *ngIf=\\\"provider.getPreferent() == '1'\\\"\\n              >CMC</ion-button\\n            >\\n            <ion-icon\\n              name=\\\"chevron-forward-outline\\\"\\n              slot=\\\"end\\\"\\n              size=\\\"small\\\"\\n            ></ion-icon>\\n          </ion-item>\\n        </ion-list>\\n  \\n      </div>\\n      </div>\\n    </ng-template>\\n\\n    \\n    <div [style.display]=\\\"type == 'map' ? 'block' : 'none'\\\">\\n      <ion-content>\\n        <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n          <ion-fab-button (click)=\\\"geolocateMe()\\\" color=\\\"secondary\\\">\\n            <ion-icon name=\\\"locate\\\"></ion-icon>\\n          </ion-fab-button>\\n        </ion-fab>\\n        <google-map [mapOptions]=\\\"mapOptions\\\"></google-map>\\n      </ion-content>\\n    </div>\\n    \\n\\n  </div>\\n  \\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { LocationsPageRoutingModule } from './locations-routing.module';\nimport { LocationsPage } from './locations.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LocationsPageRoutingModule,\n    ReactiveFormsModule,\n    ComponentsModule,\n    TranslateModule,\n    Ng2SearchPipeModule,\n    \n  ],\n  declarations: [LocationsPage]\n})\nexport class LocationsPageModule {}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { GoogleMapComponent } from 'src/app/components/google-map/google-map.component';\nimport { HealthcareService } from 'src/app/services/healthcare.service';\nimport { Location, LocationsByGPSRequest, ProviderByGPS, ProviderByLocation } from 'src/app/shared/classes/credential-data';\nimport { Plugins } from '@capacitor/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { LanguageService } from 'src/app/pages/language/language.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { getRandomBackground } from 'src/app/shared/classes/utils';\nimport { throwError } from 'rxjs';\nimport { Location as NgLocation} from '@angular/common';\nconst { Geolocation } = Plugins;\n@Component({\n  selector: 'app-locations',\n  templateUrl: './locations.page.html',\n  styleUrls: ['./locations.page.scss'],\n  animations: [\n    trigger('fetchData', [\n      state('shown', style({ opacity: 1 })),\n      state('hidden', style({ opacity: 0 })),\n      transition('* => *', animate('1000ms'))\n    ])\n  ]\n})\nexport class LocationsPage implements OnInit, AfterViewInit {\n  backgroundImage: string = getRandomBackground();\n \n  @ViewChild(GoogleMapComponent, { static: false }) _GoogleMap: GoogleMapComponent;\n  @ViewChild('content') content;\n\n  map: google.maps.Map;\n  mapOptions: google.maps.MapOptions = {\n    zoom: 15,\n    center: { lat: 41.3851, lng: 2.1734 }\n    // uncomment the following line if you want to remove the default Map controls\n    // disableDefaultUI: true\n  };\n  visibility: string = 'hidden';\n  fetching:boolean = true;\n  deviceCoords: {};\n  loadingElement: any;\n  locations: any;\n  providersByGPS: ProviderByGPS[] = [];\n  filterTerm: string;\n  tipus_registre: string;\n  type: string = \"map\";\n  url: string = '/app/home/healthcare/providers';\n  nom_servei: string;\n  directionsService = new google.maps.DirectionsService();\n  directionsDisplay = new google.maps.DirectionsRenderer();\n  current_location: google.maps.LatLng;\n  gpsNotFound:boolean;\n\n  constructor(public healthcareService: HealthcareService,\n    private router: Router,\n    private loadingController: LoadingController,\n    public languageService: LanguageService,\n    public translate: TranslateService,\n    private location: NgLocation) { \n      \n    }\n\n  ngOnInit() {\n    this.getLocationsByMedicalSpecialty();\n\n  }\n\n  // Init google map API\n  ngAfterViewInit() {\n    // GoogleMapComponent should be available\n    this._GoogleMap.$mapReady.subscribe(map => {\n      this.map = map;\n      this.directionsDisplay.setMap(map);\n    });\n    this.createLoader();\n    this.type = \"by-location\";\n  }\n\n\n  toggle(){\n    this.fetching = !this.fetching;\n  }\n\n  async createLoader() {\n    this.translate.get('locations.fetching').subscribe(async text => {\n      console.log(\"message:\", await text);\n      this.loadingElement = await this.loadingController.create({\n        message: text\n      });\n    })\n  }\n\n  async presentLoader() {\n    await this.loadingElement.present();\n  }\n\n  async dismissLoader() {\n    if (this.loadingElement) {\n      await this.loadingElement.dismiss();\n    }\n  }\n\n  // Get the device coords\n  public async geolocateMe(): Promise<void> {\n    //this.presentLoader();\n    \n    await Geolocation.getCurrentPosition().then(async position => {\n     \n     \n      this.deviceCoords = position;\n      this.current_location = new google.maps.LatLng(position.coords?.latitude, position.coords?.longitude);\n      this.map.panTo(this.current_location);\n      const request = new LocationsByGPSRequest(this.languageService.getLanguageAPI(), this.healthcareService.quadre, this.healthcareService.specialty.CODI_SERV, this.healthcareService.tipus_registre, position.coords?.latitude.toString(), position.coords?.longitude.toString(), \"1.173422\", \"3.173422\", (position.coords?.latitude - 2).toString(), (position.coords?.latitude + 2).toString(), \"10\");\n      \n      \n        \n      this.healthcareService.getMedicalCentersByGPS(request).subscribe(\n        async (response: ProviderByGPS[]) => {\n          console.log(\"getMedicalCentersByGPS:\",response);\n          this.providersByGPS = response;\n\n           // add marker in google map for each provider\n          this.providersByGPS.forEach(provider => {\n           \n            const provider_location = new google.maps.LatLng(parseFloat(provider.LATITUD), parseFloat(provider.LONGITUD));\n            const marker = new google.maps.Marker({\n              position: provider_location,\n              title: provider.getName()\n            });\n\n            // To add the marker to the map, call setMap();\n            marker.setMap(this.map);\n            google.maps.event.addListener(marker, 'click', function (evt) {\n              const provider_location = new google.maps.LatLng(evt.latLng.lat().toFixed(3), evt.latLng.lng().toFixed(3));\n              window.open('https://www.google.com/maps/search/?api=1&query=' + evt.latLng.lat().toFixed(3) + ',' + evt.latLng.lng().toFixed(3),\n                '_system', 'location=yes');\n            });\n          })\n        },\n        async (error) => {\n          // Called when error\n          return throwError(await error);\n        }, \n        ()=>{\n          this.fetching = false;\n        });\n    }).catch((error) => { \n      this.fetching = false;\n      this.gpsNotFound = true;\n      console.log('Error getting current location', error);\n    });\n   \n  }\n\n  async getLocationsByMedicalSpecialty() {\n  \n    this.healthcareService.getLocationByMedicalSpecialty().subscribe(\n      async (response) => {\n        this.locations = response;\n      },\n      async (error) => {\n        // Called when error\n        this.location.back();\n        throw error;\n      }, \n      ()=>{\n        this.toggle();\n      });\n  }\n\n  async initMap() {\n    this.directionsService = new google.maps.DirectionsService();\n    this.directionsDisplay = new google.maps.DirectionsRenderer();\n\n    this.createLoader();\n  }\n\n  // Get providers by location\n  getProviders(location: Location) {\n    this.healthcareService.location = location;\n    this.router.navigate([this.url]);\n  }\n\n  // Handle UI tabs\n  async segmentChanged(ev: any) {\n   \n    const segment = ev.detail.value;\n    if (segment == 'near-me' || segment == 'map') {\n      \n      if(segment == 'near-me') \n        this.fetching = true;\n\n      await this.geolocateMe();\n    }\n\n  }\n\n\n  // Redirect to provider's contact info\n  getContact(providerByGps: ProviderByGPS) {\n    console.log(\"providerByGps\", providerByGps);\n    \n    this.locations.forEach(element => {\n      if(providerByGps.CODI_POBLE == element.CODI_POBLE){\n        this.healthcareService.location = element;\n        console.log(\"found: \", element);\n        return false;\n      }\n    });\n    let provider = new ProviderByLocation();\n\n    this.healthcareService.provider = Object.assign(provider, providerByGps);\n    \n    console.log(\"this.healthcareService.provider: \", this.healthcareService.provider);\n    if (provider.isDoctor())\n      this.router.navigate(['/app/home/healthcare/doctors']);\n    else\n      this.router.navigate(['/app/home/healthcare/centers']);\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LocationsPage } from './locations.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LocationsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LocationsPageRoutingModule {}\n"]}