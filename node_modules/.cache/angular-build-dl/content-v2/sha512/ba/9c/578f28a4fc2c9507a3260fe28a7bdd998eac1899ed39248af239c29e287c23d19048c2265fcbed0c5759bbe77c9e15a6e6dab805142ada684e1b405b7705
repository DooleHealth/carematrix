{"version":3,"sources":["./src/app/pages/home/healthcare/providers/providers.page.ts","./src/app/pages/home/healthcare/providers/providers.page.scss","./src/app/pages/home/healthcare/providers/providers-routing.module.ts","./src/app/pages/home/healthcare/providers/providers.module.ts","./src/app/pages/home/healthcare/providers/providers.page.html"],"names":[],"mappings":"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","file":"providers-providers-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { Location, Specialty, ProvidersRequest, ProviderByLocation } from 'src/app/shared/classes/credential-data';\nimport { HealthcareService } from 'src/app/services/healthcare.service';\nimport { LanguageService } from 'src/app/pages/language/language.service';\nimport { getRandomBackground } from 'src/app/shared/classes/utils';\nimport { Location as NgLocation} from '@angular/common';\n\n@Component({\n  selector: 'app-providers',\n  templateUrl: './providers.page.html',\n  styleUrls: ['./providers.page.scss'],\n})\nexport class ProvidersPage implements OnInit {\n  backgroundImage: string = getRandomBackground();\n  filterTerm: string;\n  specialties: Specialty[];\n  params : any;\n  url :string = 'app/home/healthcare/centers';\n  location: Location;\n  providers : ProviderByLocation[] = [];\n  doctors : ProviderByLocation[]= [];\n  centers : ProviderByLocation[]= [];\n  preferent: any;\n  segmento :any;\n  type : string = \"doctors&centers\";\n  visibility: string = 'hidden';\n  fetching:boolean = true;\n  constructor( public healthcareService: HealthcareService,\n    private router: Router,\n    private loadingController: LoadingController,\n    public languageService: LanguageService,\n    private ngLocation: NgLocation) {\n      \n     }\n\n  ngOnInit() {\n    this.getProvidersByLocation();\n   \n  }\n\n  async getProvidersByLocation(){\n    const request = new ProvidersRequest(this.languageService.getLanguageAPI(),this.healthcareService.quadre,this.healthcareService.specialty.CODI_SERV, this.healthcareService.location.CODI_POBLE, this.healthcareService.tipus_registre);\n  \n    this.healthcareService.getMedicalCentersByLocation(request).subscribe( \n      async (data : ProviderByLocation[]) => {\n       \n      \n        this.providers = data;\n        this.providers.forEach(provider => {\n\n          if(provider.isDoctor()){\n            this.doctors.push(provider);\n          }else{\n            this.centers.push(provider);\n          }\n            \n        });\n      },\n      async (error) => {\n        this.ngLocation.back();\n        throw error;\n      },\n      () => {\n        this.toggle();\n      });\n  }\n\n  public getContact(provider : ProviderByLocation){\n    this.healthcareService.provider = provider;\n    \n    if(provider.isDoctor())\n      this.router.navigate(['/app/home/healthcare/doctors']);\n    else\n      this.router.navigate([this.url]);\n  }\n\n  public segmentChanged(ev: any) {\n      const segment = ev.detail.value;\n    }\n\n  toggle(){\n    this.fetching = !this.fetching;\n  }\n  \n\n}\n","export default \"ion-content {\\n  --background: none;\\n  background-position: center top;\\n  background-repeat: no-repeat !important;\\n  background-size: cover !important;\\n}\\n\\n.Pref {\\n  color: white;\\n  --background:#D6006D;\\n}\\n\\n.cuadreBtn {\\n  --background:#ffffff;\\n  color: black;\\n  --border-color:#505050;\\n  --border-radius: 0% !important;\\n  --border: 1px !important;\\n  --min-width: 135%!important;\\n  --padding-top: 20px;\\n  --padding-bottom: 30px;\\n  --margin-bottom:30px;\\n}\\n\\n.cuadreIcon {\\n  padding-top: 16%;\\n}\\n\\n.itemList {\\n  outline: none;\\n  min-height: 60px !important;\\n  padding-top: 5px !important;\\n  padding-bottom: 5px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb3ZpZGVycy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBQTtFQUNBLCtCQUFBO0VBQ0EsdUNBQUE7RUFDQSxpQ0FBQTtBQUNGOztBQUNBO0VBQ0UsWUFBQTtFQUNBLG9CQUFBO0FBRUY7O0FBQUE7RUFDRSxvQkFBQTtFQUNBLFlBQUE7RUFDQSxzQkFBQTtFQUNBLDhCQUFBO0VBQ0Esd0JBQUE7RUFDQSwyQkFBQTtFQUNBLG1CQUFBO0VBQ0Esc0JBQUE7RUFDQSxvQkFBQTtBQUdGOztBQUFBO0VBQ0MsZ0JBQUE7QUFHRDs7QUFBQTtFQUNFLGFBQUE7RUFDQywyQkFBQTtFQUNBLDJCQUFBO0VBQ0EsOEJBQUE7QUFHSCIsImZpbGUiOiJwcm92aWRlcnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IG5vbmU7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciB0b3A7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlciAhaW1wb3J0YW50O1xufVxuLlByZWZ7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgLS1iYWNrZ3JvdW5kOiNENjAwNkQ7XG59XG4uY3VhZHJlQnRue1xuICAtLWJhY2tncm91bmQ6I2ZmZmZmZjtcbiAgY29sb3I6IGJsYWNrO1xuICAtLWJvcmRlci1jb2xvcjojNTA1MDUwO1xuICAtLWJvcmRlci1yYWRpdXM6IDAlICFpbXBvcnRhbnQ7XG4gIC0tYm9yZGVyOiAxcHggIWltcG9ydGFudDtcbiAgLS1taW4td2lkdGg6IDEzNSUhaW1wb3J0YW50O1xuICAtLXBhZGRpbmctdG9wOiAyMHB4O1xuICAtLXBhZGRpbmctYm90dG9tOiAzMHB4O1xuICAtLW1hcmdpbi1ib3R0b206MzBweDtcbiBcbn1cbi5jdWFkcmVJY29ue1xuIHBhZGRpbmctdG9wOiAxNiU7XG5cbn1cbi5pdGVtTGlzdCB7XG4gIG91dGxpbmU6IG5vbmU7XG4gICBtaW4taGVpZ2h0OjYwcHggIWltcG9ydGFudDtcbiAgIHBhZGRpbmctdG9wOiA1cHghaW1wb3J0YW50O1xuICAgcGFkZGluZy1ib3R0b206IDVweCFpbXBvcnRhbnQ7XG59Il19 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProvidersPage } from './providers.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProvidersPage,\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  \n})\nexport class ProvidersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ProvidersPageRoutingModule } from './providers-routing.module';\nimport { ProvidersPage } from './providers.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProvidersPageRoutingModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    Ng2SearchPipeModule,\n    RouterModule,\n    ComponentsModule\n  ],\n  \n  declarations: [ProvidersPage]\n})\nexport class ProvidersPageModule {}\n","export default \"<custom-header></custom-header>\\n<ion-content class=\\\"back\\\" [ngStyle]=\\\"{'background': 'url(' + backgroundImage + ')'}\\\" fullscreen>\\n    <page-header title=\\\"{{'quadres.quadre_' + this.healthcareService.tipus_registre | translate}}\\\" icon=\\\"assets/icons/i_quadre_{{ this.healthcareService.tipus_registre }}.svg\\\">\\n  </page-header>\\n  <div class=\\\"main-container\\\">\\n    <!--Breadcrumbs-->\\n  <ion-text>\\n    <a routerLink='/app/home/healthcare/medical-specialties'> {{ 'commons.home'  | translate  }} </a> >\\n    <a routerLink='/app/home/healthcare/locations'> {{ this.healthcareService.specialty?.NOM_SERVEI}} </a> \\n    > <span> {{ this.healthcareService.location?.POBLACIO }} </span> \\n  </ion-text>\\n\\n  <ion-searchbar placeholder=\\\"{{ 'centers.search' | translate }}\\\" [(ngModel)]=\\\"filterTerm\\\" animated=\\\"true\\\"></ion-searchbar>\\n\\n  <ion-segment color=\\\"primary\\\" [(ngModel)]=\\\"type\\\" (ionChange)=\\\"segmentChanged($event)\\\" scrollable>\\n    <ion-segment-button value=\\\"doctors&centers\\\">\\n      <ion-label>{{ 'providers.locations' | translate }}</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"doctors\\\">\\n      <ion-label>{{ 'providers.doctors' | translate }}</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"centers\\\">\\n      <ion-label>{{ 'providers.centers' | translate }}</ion-label>\\n    </ion-segment-button>\\n\\n  </ion-segment>\\n\\n  <ng-container *ngIf=\\\"this.fetching else showProviders\\\">\\n    <div style=\\\"margin: 20px 40px; text-align: center\\\">\\n      <ion-spinner color=\\\"primary\\\"></ion-spinner>\\n    </div>\\n  </ng-container>\\n\\n  <ng-template #showProviders>\\n    <div [ngSwitch]=\\\"type\\\">\\n      <ion-list *ngSwitchCase=\\\"'doctors&centers'\\\" >\\n        <ion-list lines=\\\"full\\\" *ngFor=\\\"let provider of providers | filter:filterTerm\\\">\\n          <ion-item class=\\\"itemList\\\" (click)=\\\"getContact(provider)\\\">{{ provider.getName() }}&nbsp;<ion-button class=\\\"Pref\\\" *ngIf=\\\"provider.getPreferent() == '1'\\\">CMC</ion-button>\\n            <ion-icon name=\\\"chevron-forward-outline\\\" slot=\\\"end\\\" size=\\\"small\\\"></ion-icon>\\n          </ion-item>\\n        </ion-list>\\n      </ion-list>\\n  \\n      <ion-list lines=\\\"full\\\" *ngSwitchCase=\\\"'doctors'\\\">\\n        <ion-item class=\\\"itemList\\\"  *ngFor=\\\"let doctor of doctors | filter:filterTerm\\\" (click)=\\\"getContact(doctor)\\\">{{ doctor.getName() }}&nbsp;<ion-button class=\\\"Pref\\\" *ngIf=\\\"doctor.getPreferent() == '1'\\\">CMC</ion-button>\\n          <ion-icon name=\\\"chevron-forward-outline\\\" slot=\\\"end\\\" size=\\\"small\\\"></ion-icon>\\n        </ion-item>\\n      </ion-list>\\n  \\n      <ion-list  lines=\\\"full\\\" *ngSwitchCase=\\\"'centers'\\\">\\n        <ion-item  class=\\\"itemList\\\"  *ngFor=\\\"let center of centers | filter:filterTerm\\\" (click)=\\\"getContact(center)\\\">{{ center.getName() }}&nbsp;<ion-button class=\\\"Pref\\\" *ngIf=\\\"center.getPreferent() == '1'\\\">CMC</ion-button>\\n          <ion-icon name=\\\"chevron-forward-outline\\\" slot=\\\"end\\\" size=\\\"small\\\"></ion-icon>\\n        </ion-item>\\n      </ion-list>\\n    </div>\\n  </ng-template>\\n\\n</div> \\n</ion-content>\";"],"sourceRoot":"webpack:///"}