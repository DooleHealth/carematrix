{"version":3,"sources":["./src/app/shared/classes/appointments.ts","./src/app/services/appointment.service.ts"],"names":[],"mappings":"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","file":"default~appointments-appointments-module~bookmarks-bookmarks-module~centers-centers-module~contact-c~886963fb-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\n\nexport class ApiResponse {\n    status: number;\n    message: string;\n    data: any;\n}\n\n@Injectable()\nexport class AgendaResponse {\n    status: number;\n    message: string;\n    data: Agenda[];\n}\n\nexport class AgendaRequest {\n\n    constructor(public id_agenda: string, public codi_servei: string) { };\n\n\n}\n\nexport class AgendaAvailabilityRequest {\n\n    constructor(public id_agenda: string, public data_inici: string, public data_fi: string) { };\n\n}\n\n@Injectable()\nexport class Agenda {\n    public id_agenda: string;\n    public centre_nom: string;\n    public metge_tracte: string;\n    public metge_nom: string;\n    public servei_codi: string;\n    public servei_nom: string;\n    public centre_adreca: string;\n    public centre_cp: string;\n    public centre_poblacio: string;\n    public centre_telefon: string;\n    constructor() { };\n}\n\nexport interface IAgenda {\n    agenda_type_id: number;\n    day: string;\n    description: string;\n    end_date: string;\n    end_time: string;\n    ext_id: string;\n    hide: boolean;\n    id: number;\n    month: string;\n    online: number;\n    origin: number;\n    site: string;\n    start_date: string;\n    start_date_iso8601: string;\n    start_time: string;\n    title: string;\n    year: string;\n}\n\n@Injectable()\nexport class TimeSlot {\n    public hora: string;\n    public disponible: boolean\n\n    constructor() { };\n\n}\n\n\n\n@Injectable()\nexport class AgendaAvailabilityResponse {\n    status: number;\n    message: string;\n    data: Array<AgendaAvailability>;\n}\n\n@Injectable()\nexport class AppointmentsRecordRequest {\n\n    public mutua: string;\n    public data_ini: string;\n    public data_fi: string;\n    public ordre: string;\n    constructor() { };\n}\n\n@Injectable()\nexport class AppointmentsRecordResponse {\n    public status: number;\n    public message: string;\n    public data: Array<Appointment>\n\n    constructor() { };\n}\n\n\nexport class BookAppointmentRequest {\n\n    constructor(public mutua: string, public data_cita: string, public id_agenda: string, public codi_servei, public enviar_mail: number) { };\n\n}\n\n@Injectable()\nexport class BookAppointmentResponse {\n\n    public status: number;\n    public message: string;\n    public data: AppointmentConfirmation;\n\n    constructor() { };\n\n};\n\nexport class AppointmentConfirmation {\n    constructor(public guardar_bbdd: boolean,\n        public enviar_mail: boolean,\n        public dades: AppointmentDetail) { };\n}\n\nexport class AppointmentDeleteConfirmation{\n    status: number;\n    message: string;\n    data: {\n        modificar_bbdd: boolean,\n        enviar_mail: boolean,\n        dades: {\n            email: string,\n            pacient_nom: string,\n            pacient_cognom: string,\n            id_cita: string,\n            data: string,\n            hora: string,\n            metge_nom: string,\n            centre_nom: string,\n            centre_adreca: string,\n            centre_cp: string,\n            centre_poblacio: string,\n            centre_telefon: string,\n        }\n    }\n}\n\nexport class AppointmentDetail {\n    constructor(\n        public agenda_type: string,\n        public email: string,\n        public pacient_nom: string,\n        public pacient_cognom: string,\n        public id_cita: number,\n        public data: string,\n        public hora: string,\n        public estat: string,\n        public metge_nom: string,\n        public centre_nom: string,\n        public centre_adreca: string,\n        public centre_cp: string,\n        public centre_poblacio: string,\n        public centre_telefon: string) { };\n\n}\n\n@Injectable()\nexport class Appointment {\n\n    public id_agenda: string;\n    public codi_servei: string;\n    public id_cita: number;\n    public data: string;\n    public hora: string;\n    public estat: string;\n    public metge_nom: string;\n    public servei_nom: string;\n    public centre_nom: string;\n    constructor() { };\n\n}\n\n\nexport interface ITeladocUser {\n    status: number;\n    message: string;\n    data: TeladocUser;\n}\nexport class TeladocUser {\n\n    public name: string;\n    public surname: string;\n    public surname2: string;\n    public gender: string;\n    public birth_date: string;\n    public language: string;\n    public email: string;\n    public password: string;\n    public phone_prefix: string;\n    public phone: string;\n    public time_zone: string;\n    public client_code: string;\n    public project_id: string;\n    public user_mgc: string;\n    public password_mgc: string;\n    public data_alta_user: number;\n    public cp: string;\n    public adreca: string;\n    public document_id: string;\n\n    constructor() { };\n}\n\nexport class TeladocCredentialsResponse {\n    status: string;\n    data: TeladocCredentials;\n    constructor() { };\n}\n@Injectable()\nexport class TeladocTimeSlot {\n    public time_ini: string;\n    public time_end: string;\n    public availability: boolean;\n    constructor() { };\n}\n\n@Injectable()\nexport class TeladocAvailability {\n\n    public date: string;\n    public day_slots: Array<TeladocTimeSlot>\n    constructor() { };\n}\n\n@Injectable()\nexport class AgendaAvailability {\n    public data: string;\n    public horaris: Array<TimeSlot>\n    constructor() { };\n\n}\n@Injectable()\nexport class TeladocAvailabilityResponse {\n    public status: string;\n    public data: {\n        availability: Array<TeladocAvailability>\n    }\n    constructor() { };\n}\n\n@Injectable()\nexport class TeladocBookAppointmentRequest {\n    public project_id: number;\n    public client_id: string;\n    public language: string;\n    public specialty: string;\n    public date: string;\n    public time: string;\n    public time_zone: string;\n    public country: string;\n    public doctor_location: string;\n    public patient: {\n        name: string;\n        surname: string;\n        surname2: string;\n        birth_date: string;\n        age: string;\n        phone_prefix: string;\n        phone: string;\n    }\n    public patient_files: [];\n    public title: string;\n    public call_reason: string;\n    public scheduled: boolean;\n    public doctor_answer: string;\n\n    constructor() { };\n}\n\n@Injectable()\nexport class TeladocCredentials {\n    public client_id: string;\n    public client_token: string;\n    public client_refresh_token: string;\n    public change_password: boolean;\n}\n\n@Injectable()\nexport class TeladocBookAppointmentResponse {\n    status: string;\n    data: {\n        id: number,\n        reference: string,\n        project_id: number,\n        client_id: string,\n        dependent_id: string,\n        doctor_id: string,\n        status: string,\n        language: string,\n        time_zone: string,\n        country: string,\n        doctor_location: string,\n        data_sharing: string,\n        patient: {\n            name: string,\n            surname: string,\n            surname2: string,\n            birth_date: string,\n            age: number,\n            phone_prefix: string,\n            phone: string,\n        },\n        title: string,\n        done_date: string,\n        doctor_answer: string,\n        patient_files: [],\n        doctor_files: [],\n        specialty: string,\n        on_demand: boolean,\n        scheduled: number,\n        date: string,\n        time: string,\n        call_reason: string,\n    }\n}\n\n@Injectable()\nexport class TeladocStartVideocallResponse {\n    status: string;\n    data: {\n        teladoc_jwt: string;\n        teladoc_id: number,\n        teladoc_auth_details: {\n            video_provider: string;\n            token: string;\n            session_id: string;\n            api_key: string;\n        },\n        teladoc_atendee_id: number;\n    }\n}","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Constants } from '../config/constants';\nimport { Agenda, AgendaAvailability, AgendaAvailabilityRequest, AgendaAvailabilityResponse, AgendaRequest, AgendaResponse, Appointment, AppointmentConfirmation, AppointmentDetail, AppointmentsRecordRequest, AppointmentsRecordResponse, BookAppointmentRequest, BookAppointmentResponse, ITeladocUser, TeladocAvailabilityResponse, TeladocAvailability, TeladocBookAppointmentRequest, TeladocCredentialsResponse, TeladocCredentials, TeladocUser, TeladocBookAppointmentResponse, TeladocStartVideocallResponse, AppointmentDeleteConfirmation } from '../shared/classes/appointments';\nimport { ApiEndpointsService } from './api-endpoints.service';\nimport { HttpService } from './http.service';\nimport { AuthenticationService } from \"./authentication.service\";\nimport { AlertController } from '@ionic/angular';\n\n\n\nexport interface bookAppointment {\n  mutua: string;\n  date: string;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService {\n  agendas: Array<Agenda>;\n  schedules: Array<AgendaAvailability>\n  teladocSchedules : Array<TeladocAvailability>;\n  agenda: Agenda;\n  // DEV: \n  id_agenda: string;// = \"5dc98665-358b-403a-9e32-a5d81c3d7fb3\";\n  codi_servei: string;// = \"51FIST\";\n  appointment: Date;\n  booking: AppointmentDetail;\n  metgeTutor: any;\n  teladocUser: TeladocUser;\n  teladocCredentials: TeladocCredentials;\n  tractament: string;\n\n  constructor(private http: HttpService, private api: ApiEndpointsService, private constants: Constants,\n    private authService: AuthenticationService, public alertController: AlertController) {\n  }\n\n  getAgenda(): Observable<Agenda[]> {\n\n    const params = new AgendaRequest(this.id_agenda, this.codi_servei);\n    const endpoint = this.api.getEndpoint(this.constants.get_info_agenda);\n    \n    return this.http.post(endpoint, params).pipe(\n      map((res: AgendaResponse) => {\n        if (res.status != 200)\n          this.throwError(res);\n\n        return res.data.map(item => {\n          const agenda = new Agenda();\n          return Object.assign(agenda, item);\n        });\n\n      })\n    );\n  }\n\n  showAlert(message: string) {\n\n    return this.alertController.create({\n      header: 'Info',\n      message: message,\n      buttons: ['OK']\n    });\n\n  }\n\n  getAgendaAvailability(params: AgendaAvailabilityRequest): Observable<AgendaAvailability[]> {\n\n    //console.log(\"params: \", params);\n    const endpoint = this.api.getEndpoint(this.constants.get_agenda_availability);\n    return this.http.post(endpoint, params).pipe(\n      map((res: AgendaAvailabilityResponse) => {\n\n        if (res.status !== 200 && res.status !== 204)\n          this.throwError(res);\n\n        return res.data.map(item => {\n          const agenda = new AgendaAvailability();\n          return Object.assign(agenda, item);\n        });\n      })\n    );\n  }\n\n  getTeladocUser(): Observable<any> {\n\n    const endpoint = this.api.getEndpoint('getUserTeladoc');\n    const params = { username: this.authService.user.id_usuari_mgc, app: this.constants.get_teladoc_app_id, entorn: this.constants.get_teladoc_env };\n\n    return this.http.post(endpoint, params).pipe(\n      map(async (res: ITeladocUser) => {\n\n        console.log(\"getTeladocUser: \", res);\n        \n        if (res.status != 200)\n          return this.throwError(res.message);\n\n        this.teladocUser = res.data;\n        return res.data;\n\n      })\n    );\n  }\n\n  getTeladocUser2(): Promise<any> {\n\n    const endpoint = this.api.getEndpoint('getUserTeladoc');\n    const params = { username: this.authService.user.id_usuari_mgc, app: this.constants.get_teladoc_app_id, entorn: this.constants.get_teladoc_env };\n\n    return this.http.post(endpoint, params).pipe(\n      map((res : ITeladocUser ) => {\n        console.log(\"getTeladocUser: \", res);\n  \n        if (res.status != 200)\n          return this.throwError(res);\n\n        this.teladocUser = res.data;\n        return res.data;\n      })\n    ).toPromise();\n\n  }\n  getTeladocToken(params: Object): Observable<TeladocCredentials> {\n\n    var token: string;\n    const endpoint = this.api.getEndpoint('teladoc/users/login');\n\n    return this.http.post(endpoint, params).pipe(\n      map((res: TeladocCredentialsResponse) => {\n\n        //console.log('TeladocToken: ', res);\n        if (res.status != \"ok\")\n          this.throwError(\"Teladoc login failed\");\n\n        const credentials = new TeladocCredentials();\n        return Object.assign(credentials, res.data);\n        \n      })\n    )\n\n  }\n  getTeladocAvailability(params: Object): Observable<TeladocAvailability[]> {\n\n    //console.log(\"params: \", params);\n    const endpoint = this.api.getEndpoint('teladoc/telehealth/videocalls/availability');\n    return this.http.post(endpoint, params).pipe(\n      map((res: TeladocAvailabilityResponse) => {\n\n        if (res.status !== \"ok\")\n          this.throwError(res);\n\n        return res.data.availability.map(item => {\n          const date = new TeladocAvailability();\n          return Object.assign(date, item);\n        });\n      })\n    );\n  }\n\n  getTeladocAppointmentInfo(id:string, project_id:string): Observable<TeladocBookAppointmentResponse> {\n\n    const params = {\n      project_id: project_id,\n      token : this.teladocCredentials.client_token };\n    const endpoint = this.api.getEndpoint('teladoc/telehealth/videocalls/info/' + id );\n   \n    return this.http.post(endpoint, params).pipe(\n      map((res: TeladocBookAppointmentResponse) => {\n\n        if (res.status !== \"ok\")\n          this.throwError(res);\n\n        return res;\n      })\n    );\n  }\n\n  getAppointmentsRecord(params: AppointmentsRecordRequest): Observable<Appointment[]> {\n\n    //console.log(\"params: \", params);\n    const endpoint = this.api.getEndpoint(this.constants.get_appointments_record);\n    return this.http.post(endpoint, params).pipe(\n      map((res: AppointmentsRecordResponse) => {\n\n        if (res.status !== 200)\n          this.throwError(res);\n\n        return res.data.map(item => {\n          const appointment = new Appointment();\n          return Object.assign(appointment, item);\n        });\n      })\n    );\n  }\n\n  saveAppointment(data, isOnline, type, place, indications, staff_id){\n   \n    data[\"place\"] = place;\n    data[\"indications\"] =indications;\n    data[\"date\"] = data.data;\n    data[\"staff_id\"] = staff_id;\n    data[\"online\"] = isOnline;\n    data[\"agenda_type\"] = type;\n\n    \n    // Saves appointment in Doole\n    //console.log(\"saveAppointment data: \", data);\n  \n    this.authService.post('mgc/agenda', {data}).subscribe(\n    async (data) => { },\n    (error) => {\n      // Called when error\n      console.log('error: ', error);\n      throw new HttpErrorResponse(error);\n    });\n   \n  }\n\n\n  deleteAppointment(mutua, appointmentId, appointmentType, agenda){\n   \n    const params = {\n      \"mutua\": mutua,\n      \"id_cita\": appointmentId,\n      \"enviar_mail\": this.constants.send_mail\n    }\n\n    const endpoint = this.api.getEndpoint(this.constants.delete_appointment);\n\n    return this.http.post(endpoint, params).pipe(\n      map((res: AppointmentDeleteConfirmation) => {\n\n        console.log(\"RES: \", res);\n        if (res.status !== 200)\n          this.throwError(res);\n          \n        return res;\n        \n      })\n    );\n \n  }\n\n  getAppointmentInfo(mutua, id_cita){\n  \n    let params = {mutua, id_cita};\n    const endpoint = this.api.getEndpoint(this.constants.info_appointment);\n    return this.http.post(endpoint, params).pipe(\n      map((res) => {\n      \n        if (res.status !== 200)\n          this.throwError(res);\n          \n        return res.data;\n\n      })\n    );    \n  }\n\n  deleteAppointmentDoole(appointmentId){\n     //Delele appointment in Doole\n\n     const params = {agenda: appointmentId}\n     return this.authService.post('user/agenda/delete', params).pipe(\n      map((data) => {\n      \n        return data;\n       },\n      (error) => {\n        // Called when error\n        return error;\n      }));\n  }\n\n  \n  bookAppointment(mutua: string, date: string, isOnline:boolean = false, type:number,  place:string, indications:string, staff_id:string): Observable<AppointmentConfirmation> {\n    let params = new BookAppointmentRequest(mutua, date, this.id_agenda, this.codi_servei, this.constants.send_mail);\n    \n    //console.log(\"bookAppointment params:\", params);\n\n    const endpoint = this.api.getEndpoint(this.constants.make_appointment);\n    return this.http.post(endpoint, params).pipe(\n      map((res: BookAppointmentResponse) => {\n\n        if (res.status !== 200)\n          this.throwError(res);\n          \n        this.saveAppointment(res.data.dades, isOnline, type, place, indications, staff_id);\n        \n        return new AppointmentConfirmation(res.data.guardar_bbdd, res.data.enviar_mail, res.data.dades);\n\n      })\n    );\n  }\n\n  bookMetgeTutorAppointment(mutua: string, date: string, isOnline:boolean = false, type:string,  place:string, indications:string, staff_id:string): Observable<AppointmentConfirmation> {\n    let params = new BookAppointmentRequest(mutua, date, this.id_agenda, this.codi_servei, this.constants.send_mail);\n    //console.log(\"bookAppointment params:\", params);\n\n    const endpoint = this.api.getEndpoint(this.constants.make_appointment);\n    return this.http.post(endpoint, params).pipe(\n      map((res: BookAppointmentResponse) => {\n\n        if (res.status !== 200)\n          this.throwError(res);\n        \n        this.saveAppointment(res.data.dades, isOnline, type, place, indications, staff_id);\n         \n        return new AppointmentConfirmation(res.data.guardar_bbdd, res.data.enviar_mail, res.data.dades);\n\n      })\n    );\n  }\n\n  bookTeladocAppointment(params: TeladocBookAppointmentRequest, type:string,  place:string, indications:string, staff_id:string): Observable<any> {\n    \n    //console.log(\"teladocBookAppointment params:\", params);\n\n    const endpoint = this.api.getEndpoint('teladoc/telehealth/videocalls/create/' + this.teladocCredentials.client_token);\n    return this.http.post(endpoint, params).pipe(\n      map(async (res: TeladocBookAppointmentResponse) => {\n\n        if (res.status != 'ok')\n          this.throwError(\"Failed while creating videocall with Teladoc\");\n\n        let data = {\n            data: res.data.date.replace(/-/g, \"\"),\n            hora: res.data.time.replace(/:/g, \"\"),\n            id_cita:res.data.id,\n            metge_nom:\"Consulta online\",\n            centre_nom:\"\",\n            centre_adreca:\"\",\n            centre_cp:\"\",\n            centre_poblacio:\"\",\n            centre_telefon:\"\",    \n        };\n  \n        this.saveAppointment(data, true, type, place, indications, staff_id);\n        \n        return res.data;\n      })\n    );\n  }\n\n  getVideocallCredentials(params: Object){\n    //console.log(\"teladocBookAppointment params:\", params);\n\n    const endpoint = this.api.getEndpoint('teladoc/telehealth/videocalls/create/' + this.teladocCredentials.client_token);\n    return this.http.post(endpoint, params).pipe(\n      map((res: TeladocBookAppointmentResponse) => {\n\n        if (res.status != 'ok')\n          this.throwError(\"Failed while creating videocall with Teladoc\");\n\n        const data = res.data;\n        \n        const postData = {\n          data: {\n            data: data.date,\n            hora:data.time,\n            id_cita:data.id,\n            metge_nom:\"\",\n            centre_nom:\"\",\n            centre_adreca:\"\",\n            centre_cp:\"\",\n            centre_poblacio:\"\",\n            centre_telefon:\"\"\n          }\n        };\n  \n        // save apoointment in backoffice\n        this.authService.post('mgc/agenda', postData).subscribe(\n          async (data) => { },\n          (error) => {\n            // Called when error\n            console.log('error: ', error);\n            \n            throw new HttpErrorResponse(error);\n          });\n        \n        return res.data;\n      })\n    );\n  }\n\n  startTeladocVideocall(id:number, project_id:number){\n  \n    const params = {\n      id: id,\n      project_id: project_id\n    }\n    //console.log(\"teladocBookAppointment params:\", params);\n    const endpoint = this.api.getEndpoint('teladoc/telehealth/videocalls/start/' + this.teladocCredentials.client_token );\n    \n    return this.http.post(endpoint, params).pipe(\n      map((res: TeladocStartVideocallResponse) => {\n        //if (res.status != 'ok')\n          //this.throwError(\"Failed while creating videocall with Teladoc\");\n        \n        return res;\n      })\n    );\n  }\n\n  deleteAppointmentTeladoc(appointmentId, project_id) {\n\n    const params = {\n      id: appointmentId,\n      project_id: project_id\n    }\n    console.log('deleteAppointmentTeladoc params: ', params);\n    //console.log(\"teladocBookAppointment params:\", params);\n    const endpoint = this.api.getEndpoint('teladoc/telehealth/videocalls/cancel/' + this.teladocCredentials.client_token );\n    \n    return this.http.post(endpoint, params).pipe(\n      map((res: TeladocStartVideocallResponse) => {\n\n        console.log(\"deleteAppointmentTeladoc Response: \", res);\n\n        if (res.status != 'ok')\n          this.throwError(res.data);\n        \n        return res.data;\n      })\n    ); \n  }\n\n  throwError(error: any) {\n    \n    if (error instanceof HttpErrorResponse)\n       throw new HttpErrorResponse(error);\n    else\n       throw new Error(error);\n\n  }\n\n  get(endpt): Observable<any> {\n    const endpoint = this.api.getDooleEndpoint(endpt);\n    return this.http.get(endpoint).pipe(\n      map((res: any) => {\n        return res;\n      })\n    );\n  }\n\n  post(endpt, items): Observable<any> {\n    const endpoint = this.api.getDooleEndpoint(endpt);\n    return this.http.post(endpoint, items).pipe(\n      map((res: any) => {\n        return res;\n      })\n    );\n  }\n\n\n}\n"],"sourceRoot":"webpack:///"}