(function () {
  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  (window["webpackJsonp"] = window["webpackJsonp"] || []).push([["videocall-videocall-module"], {
    /***/
    "9FOy":
    /*!***************************************************************************!*\
      !*** ./src/app/pages/home/wellbeing/agenda/videocall/videocall.module.ts ***!
      \***************************************************************************/

    /*! exports provided: VideocallPageModule */

    /***/
    function FOy(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "VideocallPageModule", function () {
        return VideocallPageModule;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @ionic/angular */
      "TEn/");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @ngx-translate/core */
      "sYmb");
      /* harmony import */


      var _videocall_routing_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./videocall-routing.module */
      "oSkg");
      /* harmony import */


      var _videocall_page__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./videocall.page */
      "W/WP");
      /* harmony import */


      var src_app_components_components_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! src/app/components/components.module */
      "j1ZV");

      var VideocallPageModule = function VideocallPageModule() {
        _classCallCheck(this, VideocallPageModule);
      };

      VideocallPageModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"], _ionic_angular__WEBPACK_IMPORTED_MODULE_4__["IonicModule"], _videocall_routing_module__WEBPACK_IMPORTED_MODULE_6__["VideocallPageRoutingModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateModule"], src_app_components_components_module__WEBPACK_IMPORTED_MODULE_8__["ComponentsModule"]],
        declarations: [_videocall_page__WEBPACK_IMPORTED_MODULE_7__["VideocallPage"]]
      })], VideocallPageModule);
      /***/
    },

    /***/
    "W/WP":
    /*!*************************************************************************!*\
      !*** ./src/app/pages/home/wellbeing/agenda/videocall/videocall.page.ts ***!
      \*************************************************************************/

    /*! exports provided: VideocallPage */

    /***/
    function WWP(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "VideocallPage", function () {
        return VideocallPage;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_videocall_page_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./videocall.page.html */
      "zOQT");
      /* harmony import */


      var _videocall_page_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./videocall.page.scss */
      "quXl");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/router */
      "tyNb");
      /* harmony import */


      var _services_authentication_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../../../../../services/authentication.service */
      "ej43");
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      "TEn/");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common/http */
      "tk/3");
      /* harmony import */


      var src_app_services_appointment_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! src/app/services/appointment.service */
      "Oz3r");
      /* harmony import */


      var _capacitor_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! @capacitor/core */
      "gcOT");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! @ngx-translate/core */
      "sYmb");

      var TeladocPlugin = _capacitor_core__WEBPACK_IMPORTED_MODULE_9__["Plugins"].TeladocPlugin;

      var VideocallPage = /*#__PURE__*/function () {
        function VideocallPage(activatedRoute, authService, loadingController, appointmentService, translate) {
          _classCallCheck(this, VideocallPage);

          this.activatedRoute = activatedRoute;
          this.authService = authService;
          this.loadingController = loadingController;
          this.appointmentService = appointmentService;
          this.translate = translate;
          this.agenda = history.state.agenda;
          this.idAgenda = this.activatedRoute.snapshot.paramMap.get('id');
        }

        _createClass(VideocallPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
              return regeneratorRuntime.wrap(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      console.log(" this.agenda: ", this.agenda);
                      this.btnConectarStr = this.translate.instant('commons.start');

                    case 2:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee, this);
            }));
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.unpublish();
          }
        }, {
          key: "startTeladocVideocall",
          value: function startTeladocVideocall() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
              var _this = this;

              return regeneratorRuntime.wrap(function _callee3$(_context3) {
                while (1) {
                  switch (_context3.prev = _context3.next) {
                    case 0:
                      this.connecting = true;
                      this.btnConectarStr = "Conectando...";
                      this.appointmentService.getTeladocUser().subscribe(function (data) {
                        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
                          return regeneratorRuntime.wrap(function _callee2$(_context2) {
                            while (1) {
                              switch (_context2.prev = _context2.next) {
                                case 0:
                                  this.appointmentService.teladocUser = data;
                                  _context2.next = 3;
                                  return this.getTeladocCredentials();

                                case 3:
                                case "end":
                                  return _context2.stop();
                              }
                            }
                          }, _callee2, this);
                        }));
                      }, function (error) {
                        // Called when error
                        error = error;
                        console.log("error:", error);
                        throw error;
                      });

                    case 3:
                    case "end":
                      return _context3.stop();
                  }
                }
              }, _callee3, this);
            }));
          }
        }, {
          key: "getTeladocCredentials",
          value: function getTeladocCredentials() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
              var _this2 = this;

              return regeneratorRuntime.wrap(function _callee6$(_context6) {
                while (1) {
                  switch (_context6.prev = _context6.next) {
                    case 0:
                      this.appointmentService.getTeladocToken({
                        client_code: this.appointmentService.teladocUser.client_code,
                        project_id: this.appointmentService.teladocUser.project_id
                      }).subscribe(function (data) {
                        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this2, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
                          var _this3 = this;

                          return regeneratorRuntime.wrap(function _callee5$(_context5) {
                            while (1) {
                              switch (_context5.prev = _context5.next) {
                                case 0:
                                  console.log("getTeladocCredentials: ", this.appointmentService.teladocCredentials);
                                  this.appointmentService.teladocCredentials = data;
                                  this.appointmentService.startTeladocVideocall(parseInt(this.idAgenda), parseInt(this.appointmentService.teladocUser.project_id)).subscribe(function (res) {
                                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this3, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
                                      var videoDetailsJSONString;
                                      return regeneratorRuntime.wrap(function _callee4$(_context4) {
                                        while (1) {
                                          switch (_context4.prev = _context4.next) {
                                            case 0:
                                              if (res.status == '150') this.appointmentService.showAlert('Encara no té doctor assignat');else if (res.data) {
                                                videoDetailsJSONString = JSON.stringify(res.data); //JSON.stringify({videoDetailsJSONString:res.data});

                                                TeladocPlugin.makeVideoCall({
                                                  videoDetailsJSONString: videoDetailsJSONString
                                                });
                                                this.connecting = false;
                                                this.btnConectarStr = this.translate.instant('commons.start');
                                              } else this.appointmentService.showAlert("No s'ha pogut iniciar la sessió");

                                            case 1:
                                            case "end":
                                              return _context4.stop();
                                          }
                                        }
                                      }, _callee4, this);
                                    }));
                                  }, function (error) {
                                    console.log("error", error);
                                    throw error;
                                  });

                                case 3:
                                case "end":
                                  return _context5.stop();
                              }
                            }
                          }, _callee5, this);
                        }));
                      }, function (error) {
                        throw error;
                      });

                    case 1:
                    case "end":
                      return _context6.stop();
                  }
                }
              }, _callee6, this);
            }));
          }
        }, {
          key: "startVideocall",
          value: function startVideocall() {
            var _a, _b;

            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
              return regeneratorRuntime.wrap(function _callee7$(_context7) {
                while (1) {
                  switch (_context7.prev = _context7.next) {
                    case 0:
                      if (((_a = this.agenda) === null || _a === void 0 ? void 0 : _a.agenda_type_id) == 6) {
                        this.idAgenda = (_b = this.agenda) === null || _b === void 0 ? void 0 : _b.ext_id;
                        this.startTeladocVideocall();
                      } else this.startDooleVideocall();

                    case 1:
                    case "end":
                      return _context7.stop();
                  }
                }
              }, _callee7, this);
            }));
          }
        }, {
          key: "startDooleVideocall",
          value: function startDooleVideocall() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
              var _this4 = this;

              var loading;
              return regeneratorRuntime.wrap(function _callee9$(_context9) {
                while (1) {
                  switch (_context9.prev = _context9.next) {
                    case 0:
                      this.connecting = true;
                      this.btnConectarStr = "Conectando...";
                      _context9.next = 4;
                      return this.loadingController.create();

                    case 4:
                      loading = _context9.sent;
                      _context9.next = 7;
                      return loading.present();

                    case 7:
                      this.authService.get('user/agenda/' + this.idAgenda + '/videocallSession').subscribe(function (data) {
                        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this4, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {
                          var _this5 = this;

                          var response;
                          return regeneratorRuntime.wrap(function _callee8$(_context8) {
                            while (1) {
                              switch (_context8.prev = _context8.next) {
                                case 0:
                                  response = data;
                                  this.sessionId = response.sessionId;
                                  this.token = response.token;
                                  this.api = response.tokboxAPI;
                                  this.session = OT.initSession(this.api, this.sessionId);
                                  this.publisher = OT.initPublisher('publisher', {
                                    fitMode: "contain"
                                  }, function (error) {
                                    if (error) {
                                      console.log(error);
                                      return;
                                    }
                                  });
                                  /*this.insomnia.keepAwake()
                                      .then(
                                          () => console.log('success'),
                                          () => console.log('error')
                                      );*/

                                  this.session.on({
                                    streamCreated: function streamCreated(event) {
                                      var subscriberOptions = {
                                        fitMode: "contain",
                                        insertMode: 'append'
                                      };

                                      _this5.session.subscribe(event.stream, 'subscriber', subscriberOptions);

                                      OT.updateViews();
                                    },
                                    streamDestroyed: function streamDestroyed(event) {
                                      console.log("Stream ".concat(event.stream.name, " ended because ").concat(event.reason));
                                      OT.updateViews();
                                    },
                                    sessionConnected: function sessionConnected(event) {
                                      _this5.connected = true;

                                      _this5.session.publish(_this5.publisher);

                                      OT.updateViews();
                                    },
                                    connectionCreated: function connectionCreated(event) {
                                      if (event.connection.connectionId != _this5.session.connection.connectionId) {
                                        //this.showMessage("Se ha conectado un usuario");
                                        _this5.infoStr = "";
                                      } else {}
                                    }
                                  });
                                  this.session.on("signal:duration", function (event) {
                                    if (event.data > 60) {
                                      var min = event.data / 60;
                                      min = Math.floor(min);
                                      _this5.durationStr = "Unos " + Math.round(min) + " minutos";
                                    } else if (event.data > 0) {
                                      _this5.durationStr = "Menos de 1 minuto";
                                    } else {
                                      _this5.durationStr = "Tiempo agotado";
                                    }
                                  });
                                  this.session.connect(this.token, function (error) {
                                    if (error) {
                                      console.log("There was an error connecting to the session ".concat(error));
                                    }
                                  });

                                case 9:
                                case "end":
                                  return _context8.stop();
                              }
                            }
                          }, _callee8, this);
                        }));
                      }, function (error) {
                        // Called when error
                        console.log("error: ", error);
                        throw new _angular_common_http__WEBPACK_IMPORTED_MODULE_7__["HttpErrorResponse"](error);
                      }, function () {
                        // Called when operation is complete (both success and error)
                        loading.dismiss();
                      });

                    case 8:
                    case "end":
                      return _context9.stop();
                  }
                }
              }, _callee9, this);
            }));
          }
        }, {
          key: "unpublish",
          value: function unpublish() {
            this.connected = false;
            this.connecting = false;
            this.infoStr = "";
            this.btnConectarStr = "Conectar";

            if (this.session) {
              this.session.disconnect();
            }
            /*this.insomnia.allowSleepAgain()
                .then(
                    () => console.log('success'),
                    () => console.log('error')
                );*/

          }
        }]);

        return VideocallPage;
      }();

      VideocallPage.ctorParameters = function () {
        return [{
          type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
        }, {
          type: _services_authentication_service__WEBPACK_IMPORTED_MODULE_5__["AuthenticationService"]
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_6__["LoadingController"]
        }, {
          type: src_app_services_appointment_service__WEBPACK_IMPORTED_MODULE_8__["AppointmentService"]
        }, {
          type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__["TranslateService"]
        }];
      };

      VideocallPage = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-videocall',
        template: _raw_loader_videocall_page_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_videocall_page_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
      })], VideocallPage);
      /***/
    },

    /***/
    "oSkg":
    /*!***********************************************************************************!*\
      !*** ./src/app/pages/home/wellbeing/agenda/videocall/videocall-routing.module.ts ***!
      \***********************************************************************************/

    /*! exports provided: VideocallPageRoutingModule */

    /***/
    function oSkg(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "VideocallPageRoutingModule", function () {
        return VideocallPageRoutingModule;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/router */
      "tyNb");
      /* harmony import */


      var _videocall_page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./videocall.page */
      "W/WP");

      var routes = [{
        path: '',
        component: _videocall_page__WEBPACK_IMPORTED_MODULE_3__["VideocallPage"]
      }];

      var VideocallPageRoutingModule = function VideocallPageRoutingModule() {
        _classCallCheck(this, VideocallPageRoutingModule);
      };

      VideocallPageRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
      })], VideocallPageRoutingModule);
      /***/
    },

    /***/
    "quXl":
    /*!***************************************************************************!*\
      !*** ./src/app/pages/home/wellbeing/agenda/videocall/videocall.page.scss ***!
      \***************************************************************************/

    /*! exports provided: default */

    /***/
    function quXl(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2aWRlb2NhbGwucGFnZS5zY3NzIn0= */";
      /***/
    },

    /***/
    "zOQT":
    /*!*****************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/home/wellbeing/agenda/videocall/videocall.page.html ***!
      \*****************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function zOQT(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<custom-header></custom-header>\n<ion-content>\n  <div id=\"publisher\"></div>\n  <div id=\"subscriber\"></div>\n  <div id=\"infoText\">{{infoStr}}</div>\n  <div *ngIf=\"connected\" id=\"duration\"><i class=\"fas fa-clock\"></i> {{durationStr}}</div>\n  <ion-button expand=\"block\" *ngIf=\"!connected\" ion-button icon-left id=\"btnConectar\"(click)=\"startVideocall()\" [disabled]=\"connecting\"><ion-icon name=\"videocam\"style=\"zoom:1;\" slot=\"end\"></ion-icon>{{btnConectarStr}} </ion-button>\n  <div id=\"actionDiv\">\n    <button *ngIf=\"connected\" ion-button id=\"btnColgar\" (click)=\"unpublish()\">{{ 'commons.end' | translate }}</button>\n    <div *ngIf=\"connected\" id=\"duration\"><i class=\"fas fa-clock\"></i> {{durationStr}}</div>\n  </div>\n</ion-content>\n";
      /***/
    }
  }]);
})();
//# sourceMappingURL=videocall-videocall-module-es5.js.map