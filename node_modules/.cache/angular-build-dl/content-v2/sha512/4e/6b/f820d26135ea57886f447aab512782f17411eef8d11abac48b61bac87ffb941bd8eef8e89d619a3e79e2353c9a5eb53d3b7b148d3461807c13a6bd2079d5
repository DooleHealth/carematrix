{"version":3,"sources":["./src/app/pages/home/wellbeing/diagnostictests/diagnostictests.page.scss","./src/app/pages/home/wellbeing/diagnostictests/diagnostictests-routing.module.ts","./src/app/pages/home/wellbeing/diagnostictests/diagnostictests.module.ts","./src/app/pages/home/wellbeing/diagnostictests/diagnostictests.page.html","./src/app/pages/home/wellbeing/diagnostictests/diagnostictests.page.ts"],"names":[],"mappings":"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","file":"diagnostictests-diagnostictests-module-es2015.js","sourcesContent":["export default \"ion-content {\\n  --background: none;\\n  background-position: center top;\\n  background-repeat: no-repeat !important;\\n  background-size: cover !important;\\n}\\n\\nion-card {\\n  border-bottom: 2pt solid #006488;\\n  border-radius: 0%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2RpYWdub3N0aWN0ZXN0cy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBQTtFQUNBLCtCQUFBO0VBQ0EsdUNBQUE7RUFDQSxpQ0FBQTtBQUNGOztBQUVBO0VBQ0UsZ0NBQUE7RUFDQSxpQkFBQTtBQUNGIiwiZmlsZSI6ImRpYWdub3N0aWN0ZXN0cy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XG4gIC0tYmFja2dyb3VuZDogbm9uZTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHRvcDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdCAhaW1wb3J0YW50O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyICFpbXBvcnRhbnQ7XG59XG5cbmlvbi1jYXJke1xuICBib3JkZXItYm90dG9tOiAycHQgc29saWQgIzAwNjQ4ODtcbiAgYm9yZGVyLXJhZGl1czogMCU7XG59Il19 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DiagnostictestsPage } from './diagnostictests.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DiagnostictestsPage\n  },\n  {\n    path: 'add',\n    loadChildren: () => import('./add/add.module').then( m => m.AddPageModule)\n  },\n  {\n    path: 'edit',\n    loadChildren: () => import('./add/add.module').then( m => m.AddPageModule)\n  },\n  {\n    path: 'diagnosticdetail',\n    loadChildren: () => import('./diagnosticdetail/diagnosticdetail.module').then( m => m.DiagnosticdetailPageModule)\n  } ,\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DiagnostictestsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DiagnostictestsPageRoutingModule } from './diagnostictests-routing.module';\n\nimport { DiagnostictestsPage } from './diagnostictests.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DiagnostictestsPageRoutingModule,\n    TranslateModule,\n    ComponentsModule\n  ],\n  declarations: [DiagnostictestsPage]\n})\nexport class DiagnostictestsPageModule {}\n","export default \"<custom-header></custom-header>\\n<ion-content\\n  class=\\\"back\\\"\\n  [ngStyle]=\\\"{'background': 'url(' + backgroundImage + ')'}\\\"\\n  fullscreen\\n>\\n  <page-header\\n    title=\\\"{{'diagnostics.header' | translate}}\\\"\\n    icon=\\\"assets/icons/i_historia_clinica_digital.svg\\\"\\n    info=\\\"{{'diagnostics.info' | translate}}\\\"\\n  >\\n  </page-header>\\n  <div class=\\\"main-container\\\">\\n    <ion-text *ngIf=\\\"!firstTime\\\">{{'diagnostics.title' | translate}}</ion-text><br /><br />\\n\\n    <div *ngIf=\\\"firstTime\\\">\\n     \\n       \\n          <p>{{'diagnostics.text1' | translate}}<strong>{{'diagnostics.text2' | translate}}</strong>? </p>\\n    \\n          <p>{{'diagnostics.text3' | translate}}<strong>{{'diagnostics.text4' | translate}}</strong>\\n            {{'diagnostics.text5' | translate}}</p>\\n          <ion-img src=\\\"assets/images/ilustr_microscopi.svg\\\"></ion-img>\\n          <ion-button color=\\\"primary\\\" (click)=\\\"load()\\\" style=\\\"float: right;\\\">{{'commons.start' | translate}}</ion-button><br><br><br><br>\\n    \\n      \\n      \\n    </div>\\n    <!-- <ion-item *ngIf=\\\"!firstTime\\\">\\n      <ion-label>\\n        NOT First Time\\n      </ion-label>\\n    </ion-item> -->\\n\\n\\n<div *ngIf=\\\"!firstTime\\\" >\\n    <ng-container *ngIf=\\\"this.showProcessing ; else showTests\\\">\\n      <div style=\\\"margin: 20px 40px; text-align: center\\\">\\n        <ion-spinner></ion-spinner>\\n        <p>\\n          <b>{{ 'diagnostics.fetching' | translate }}</b>\\n        </p>\\n      </div>\\n    </ng-container>\\n\\n     \\n      <ng-template #showTests>\\n        <ng-container *ngIf=\\\"this.tests?.length == 0\\\">\\n          <ion-card lines=\\\"none\\\" class=\\\"no_agenda\\\">  \\n            <ion-avatar slot=\\\"start\\\">\\n            <ion-img src=\\\"assets/icons/i_diagnostic.svg\\\"></ion-img>\\n          </ion-avatar>\\n            <ion-card-content>\\n              {{ 'diagnostics.empty' | translate }}\\n            </ion-card-content>\\n          </ion-card>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"this.tests?.length > 0\\\">\\n        <ion-row>\\n          <ion-col style=\\\"background: #bbdce0\\\" size=\\\"6\\\">\\n            <ion-select\\n              placeholder=\\\"{{ 'diagnostics.type' | translate }}\\\"\\n              (ionChange)=\\\"filterTestsByType($event)\\\"\\n              [(ngModel)]=\\\"search_type\\\"\\n              interface=\\\"action-sheet\\\"\\n            >\\n              <ion-select-option value=\\\"all\\\"\\n                >{{ 'diagnostics.all_types' | translate }}</ion-select-option\\n              >\\n              <ion-select-option *ngFor=\\\"let t of types\\\" value=\\\"{{t.id}}\\\"\\n                >{{t.name}}</ion-select-option\\n              >\\n            </ion-select> </ion-col\\n          ><ion-col size=\\\"1\\\"></ion-col>\\n  \\n          <ion-col style=\\\"background: #bbdce0\\\" size=\\\"5\\\">\\n            <ion-select\\n              placeholder=\\\"{{'diagnostics.search_by_dates' | translate}}\\\"\\n              (ionChange)=\\\"filterTestsByDate($event)\\\"\\n              [(ngModel)]=\\\"search_date\\\"\\n              interface=\\\"action-sheet\\\"\\n            >\\n              <ion-select-option value=\\\"all\\\"\\n                >{{ 'diagnostics.all_dates' | translate }}</ion-select-option\\n              >\\n              <ion-select-option *ngFor=\\\"let date of dates\\\" [value]=\\\"date\\\"\\n                >{{date}}</ion-select-option\\n              >\\n            </ion-select>\\n          </ion-col> \\n        </ion-row>\\n          <br />\\n          <ion-list lines=\\\"full\\\">\\n            <ng-container *ngFor=\\\"let t of this.tests\\\">\\n              <ion-item\\n                *ngIf=\\\"t.show\\\"\\n                class=\\\"diagnostic-tests-card\\\"\\n                [routerLink]=\\\"['diagnosticdetail']\\\"\\n                [queryParams]=\\\"{ id: t.id }\\\"\\n              >\\n                <p>{{t.date | date:'dd/MM/YYYY'}}</p>\\n                <p style=\\\"color: #006488\\\">{{' - ' + t.title}}</p>\\n              </ion-item>\\n            </ng-container>\\n          </ion-list>\\n        </ng-container>\\n      </ng-template>\\n  </div>\\n</div>\\n</ion-content>\\n<div *ngIf=\\\"!firstTime\\\">\\n<ion-footer>\\n  <ion-toolbar style=\\\"--background: #d9e7ea;\\\" >\\n    <ion-button color=\\\"primary\\\" [routerLink]=\\\"['add']\\\" [state]=\\\"{action : 'add' }\\\" slot=\\\"end\\\">\\n      {{ 'diagnostics.add_text' | translate }}\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n</div>\\n\";","import { Component, OnInit } from '@angular/core';\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {AuthenticationService} from \"../../../../services/authentication.service\";\nimport { Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { StorageService } from 'src/app/services/storage.service';\nimport { Storage } from '@ionic/storage';\nimport { getRandomBackground } from 'src/app/shared/classes/utils';\n\n@Component({\n  selector: 'app-diagnostictests',\n  templateUrl: './diagnostictests.page.html',\n  styleUrls: ['./diagnostictests.page.scss'],\n  providers:[DatePipe]\n  \n})\nexport class DiagnostictestsPage implements OnInit {\n  backgroundImage: string = getRandomBackground();\n  firstTime: boolean;\n  showProcessing: boolean  = true;\n  error:string;\n  tests: {id: number, title: string , type_id: number, date: Date, show: boolean }[];\n  types: any;\n  search_type:string;\n  search_date:string;\n  dates: Array<string> = new Array<string>();\n  constructor(private dooleService: AuthenticationService,\n              private router: Router,\n              private storageService: StorageService,\n              public datepipe: DatePipe) { }\n\n  ngOnInit() {\n    \n    this.storageService.isFirstTimeLoad().then(((result) =>\n    {\n      this.firstTime = result;\n    }));\n\n    //if first time update first time \n    if(this.firstTime){\n      // this.storageService.saveFirstTimeLoad();\n    }\n\n    this.getTypes();\n  \n  }\n\n  ionViewWillEnter(){\n    this.getTests();\n\n  }\n  \n  load(){\n    this.firstTime = false;\n    this.storageService.saveFirstTimeLoad(false);\n  }\n\n  getTypes(){\n    return this.dooleService.get('diagnosticTestTypes/available').subscribe(\n      async (data) => {\n       \n        this.types = data.diagnosticTestTypes;\n        console.log(\"this.types: \",  this.types);\n        \n      },\n      (error) => {\n        // Called when error\n        //loading.dismiss();\n        console.log(\"error: \", error);\n        throw new HttpErrorResponse(error);\n      },\n      () => {\n        // Called when operation is complete (both success and error)\n        //loading.dismiss();\n      });\n  }\n  \n  getTests(){\n\n    return this.dooleService.get('user/diagnosticTests').subscribe(\n      async (data) => {\n\n        await data;\n        this.showProcessing = false;\n        this.tests = [];\n        \n        data.diagnosticTests?.forEach(element => {\n        \n          this.tests.push({id: parseInt(element['id']), title: element['title'], type_id: parseInt(element['diagnostic_test_type_id']), date:new Date(element['data']), show:true})\n          let date = this.datepipe.transform(new Date(element['data']), 'MMMM YYYY');\n          \n          // To filter tests by date\n          if(this.dates.indexOf(date) === -1)\n            this.dates.push(date)\n  \n        });\n         \n        return data;\n      },\n      (error) => {\n        // Called when error\n        console.log(\"error: \", error);\n        throw new HttpErrorResponse(error);\n      },\n      () => {\n        // Called when operation is complete (both success and error)\n      });\n  }\n\n  filterTestsByDate(event: any){\n\n    this.tests.forEach(element => {      \n      element.show = this.showElement(element);\n    }); \n    \n  }\n\n  filterTestsByType(event: any){\n    this.tests.forEach(element => {\n      element.show = this.showElement(element);\n    });\n  }\n\n  showElement(e){\n    console.log(\"showElement\", e);\n    console.log(\"this.search_type: \", this.search_type  );\n    console.log(\"this.search_date: \", this.search_date  );\n    console.log(\" e.date.getMonth() == new Date(this.search_date).getMonth())\",  e.date.getMonth() , new Date(this.search_date));\n    return (!this.search_type || this.search_type == \"all\" || e.type_id == this.search_type) && \n          (!this.search_date || this.search_date == \"all\" || e.date.getMonth() == new Date(this.search_date).getMonth()) ? true : false;\n  };\n\n  addTest(){\n    this.router.navigate(['/add']);\n  }\n}\n"],"sourceRoot":"webpack:///"}