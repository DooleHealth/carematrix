{"version":3,"sources":["webpack:///src/app/pages/landing/email/email.page.scss","webpack:///src/app/pages/landing/email/email.page.ts","webpack:///src/app/pages/landing/email/email.page.html","webpack:///src/app/pages/landing/email/email.module.ts"],"names":["EmailPage","fb","authService","router","loadingController","translate","alertController","pseudo_email","setCredentials","action","resource","route","header","create","loading","present","console","log","validateCredentials","credentials","value","subscribe","data","dismiss","navigate","id_usuari_mgc","error","showAlert","instant","message","buttons","then","res","hideEmail","email","replace","gp1","gp2","gp3","i","length","group","codi","required","mutua","credencial","username","user","selector","template","routes","path","component","EmailPageModule","imports","forChild","declarations"],"mappings":"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","file":"email-email-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlbWFpbC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../../services/authentication.service';\n\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n\n@Component({\n  selector: 'app-email',\n  templateUrl: './email.page.html',\n  styleUrls: ['./email.page.scss'],\n})\n\n\nexport class EmailPage implements OnInit {\n\n  credentials: FormGroup;\n  pseudo_email: string = \"\";\n  header : string;\n  resource:string;\n  route:string;\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router,\n    private loadingController: LoadingController,\n    public translate: TranslateService,\n    public alertController: AlertController\n  ) { }\n\n  ngOnInit() {\n    this.setCredentials();\n    // Based on user action, get API resource\n    switch(this.authService.action){\n      case 'signUpUser':\n        this.resource = 'registre3';\n        this.route = 'identity';\n        this.header = 'landing.registre';\n        break;\n      case 'passwordRecovery':\n        this.resource = 'contrasenya2';\n        this.route = 'email';\n        this.header = 'landing.password';\n        break;\n      case 'addSocialAuth':\n        this.resource = 'credencial2';\n        this.route = 'email';\n        this.header = 'landing.social';\n        break;\n    }\n    \n  }\n\n  async submit() {  \n    \n    const loading = await this.loadingController.create();\n    await loading.present();\n    \n    console.log(\"this.authService.is_recovery: \",this.resource);\n   \n    this.authService.validateCredentials(this.credentials.value, this.resource).subscribe(\n      async (data) => {\n        await loading.dismiss();\n        console.log(data);\n        if(this.authService.action ==\"addSocialAuth\"){\n          this.router.navigate(['confirmation']);\n\n        }else{\n          this.authService.id_usuari_mgc = data.id_usuari_mgc;\n          this.router.navigate(['/password']);\n        }\n       \n      },\n      (error) => {\n        // Called when error\n        loading.dismiss();\n        this.showAlert(this.translate.instant('login.fail'));\n      },\n       () => {\n        // Called when operation is complete (both success and error)\n        loading.dismiss();\n      });   \n  }\n\n  \n  \n  showAlert(message:string) {\n\n    this.alertController.create({\n      header: 'Error',\n      message: message,\n      buttons: ['OK']\n    }).then(res => {\n\n      res.present();\n\n    });\n\n  }  \n  setCredentials(){\n   \n    // hide partially email address\n    let hideEmail = function(email) {\n      return email.replace(/(.{2})(.*)(?=@)/,\n        function(gp1, gp2, gp3) { \n          for(let i = 0; i < gp3.length; i++) { \n            gp2+= \"*\"; \n          } return gp2; \n        });\n    };  \n    this.pseudo_email = hideEmail(this.authService.email);\n    \n    // Prepare API request parameters (recovery or sign-up)\n    if(this.authService.action ==\"passwordRecovery\"){\n      this.credentials = this.fb.group({\n        id_usuari_mgc: this.authService.id_usuari_mgc,\n        email: this.authService.email,\n        codi: ['', [Validators.required]]\n      });\n    }else if(this.authService.action ==\"addSocialAuth\"){\n      this.credentials = this.fb.group({\n        mutua: this.authService.mutua,\n        credencial:\"google\",\n        codi: ['', [Validators.required]],\n        username: this.authService.user.username\n      });\n    }else{\n      this.credentials = this.fb.group({\n        mutua: this.authService.mutua,\n        codi: ['', [Validators.required]]\n      });\n    }\n    \n  }\n\n  \n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-icon class=\\\"icon_person\\\" src=\\\"assets/icons/usuari.svg\\\"></ion-icon>\\n      <!-- <ion-icon class=\\\"icon_person\\\" name=\\\"person-circle\\\"></ion-icon> -->\\n      <!-- <ion-back-button defaultHref=\\\"/identity\\\"></ion-back-button> -->\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-back-button defaultHref=\\\"/credential\\\"></ion-back-button> \\n    </ion-buttons>\\n  \\n    <ion-title >{{ this.header | translate }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n  <ion-content>\\n    <div class=\\\"landing-container\\\">\\n    <form (ngSubmit)=\\\"submit()\\\" [formGroup]=\\\"credentials\\\">\\n    <div class=\\\"input-group\\\">\\n        <ion-text>\\n          <p> {{ 'email.text' | translate }} </p>\\n        </ion-text>\\n        <ion-text>\\n          <h4>  &nbsp;&nbsp;&nbsp;&nbsp; {{ this.pseudo_email  }} </h4>\\n        </ion-text>\\n        <ion-text>\\n          <p>{{ 'email.text_2' | translate }} </p>\\n        </ion-text>\\n        <ion-text>\\n          <p>{{ 'email.text_3' | translate }} </p>\\n        </ion-text>\\n        <ion-text>\\n          <p> {{ 'email.text_4' | translate }} </p>\\n        </ion-text>\\n  \\n        <ion-item-divider>\\n          <ion-input placeholder=\\\"{{ 'email.code_placeholder' | translate }}\\\" formControlName=\\\"codi\\\"></ion-input>\\n        </ion-item-divider>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col></ion-col>\\n            <ion-col></ion-col>\\n            <ion-col>\\n              <div>\\n                <ion-button type=\\\"submit\\\" color=\\\"primary\\\" slot=\\\"end\\\">\\n                  {{ 'email.button' | translate | uppercase}}\\n                  </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n    </div>\\n    </form>\\n    </div>\\n  </ion-content>\\n\\n\";","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { EmailPage } from './email.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    TranslateModule\n  ],\n  \n  declarations: [EmailPage]\n})\nexport class EmailPageModule {}\n"]}