(function () {
  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  (window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~pages-home-healthcare-videocalls-videocalls-module~videocalls-videocalls-module"], {
    /***/
    "3PvO":
    /*!*********************************************************************!*\
      !*** ./src/app/pages/home/healthcare/videocalls/videocalls.page.ts ***!
      \*********************************************************************/

    /*! exports provided: VideocallsPage */

    /***/
    function PvO(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "VideocallsPage", function () {
        return VideocallsPage;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_videocalls_page_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./videocalls.page.html */
      "OPiI");
      /* harmony import */


      var _videocalls_page_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./videocalls.page.scss */
      "kD5F");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/common/http */
      "tk/3");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/platform-browser */
      "jhN1");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! @angular/router */
      "tyNb");
      /* harmony import */


      var _capacitor_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! @capacitor/core */
      "gcOT");
      /* harmony import */


      var _ionic_native_chooser_ngx__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! @ionic-native/chooser/ngx */
      "UWV4");
      /* harmony import */


      var _ionic_native_in_app_browser_ngx__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! @ionic-native/in-app-browser/ngx */
      "m/P+");
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! @ionic/angular */
      "TEn/");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! @ngx-translate/core */
      "sYmb");
      /* harmony import */


      var src_app_services_appointment_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! src/app/services/appointment.service */
      "Oz3r");
      /* harmony import */


      var src_app_shared_classes_appointments__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! src/app/shared/classes/appointments */
      "Cx2V");
      /* harmony import */


      var src_app_shared_classes_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! src/app/shared/classes/utils */
      "hNG5");

      var Camera = _capacitor_core__WEBPACK_IMPORTED_MODULE_9__["Plugins"].Camera;

      var VideocallsPage = /*#__PURE__*/function () {
        function VideocallsPage(fb, router, platform, iab, actionSheetCtrl, sanitizer, appointmentService, chooser, translate, datepipe, alertController) {
          _classCallCheck(this, VideocallsPage);

          var _a;

          this.fb = fb;
          this.router = router;
          this.platform = platform;
          this.iab = iab;
          this.actionSheetCtrl = actionSheetCtrl;
          this.sanitizer = sanitizer;
          this.appointmentService = appointmentService;
          this.chooser = chooser;
          this.translate = translate;
          this.datepipe = datepipe;
          this.alertController = alertController;
          this.backgroundImage = Object(src_app_shared_classes_utils__WEBPACK_IMPORTED_MODULE_16__["getRandomBackground"])();
          this.patient_files = [];
          this.fromSymptonChecker = (_a = history.state) === null || _a === void 0 ? void 0 : _a.fromSymptonChecker;
          this.url = 'videocall/create';
          this.showProcessing = false;
          this.isAppointmentChange = history.state.isAppointmentChange;
        }

        _createClass(VideocallsPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _a;

            console.log("this.fromSymptonChecker ", this.fromSymptonChecker);
            this.form = this.fb.group({
              description: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]],
              auto: [''],
              phone: [(_a = this.appointmentService.teladocUser) === null || _a === void 0 ? void 0 : _a.phone, [_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]]
            });
          } // Used for browser direct file upload

        }, {
          key: "uploadFile",
          value: function uploadFile(event) {
            var eventObj = event;
            var target = eventObj.target;
            var file = target.files[0]; //this.api.uploadImageFile(file).subscribe((newImage: ApiImage) => {
            //  this.images.push(newImage);
            //});
          }
        }, {
          key: "selectImageSource",
          value: function selectImageSource() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
              var _this = this;

              var buttons, actionSheet;
              return regeneratorRuntime.wrap(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      buttons = [{
                        text: this.translate.instant('CÃ¡mara'),
                        icon: 'camera',
                        handler: function handler() {
                          _this.addImage(_capacitor_core__WEBPACK_IMPORTED_MODULE_9__["CameraSource"].Camera);
                        }
                      }, {
                        text: this.translate.instant('videocall.pictures'),
                        icon: 'image',
                        handler: function handler() {
                          _this.addImage(_capacitor_core__WEBPACK_IMPORTED_MODULE_9__["CameraSource"].Photos);
                        }
                      }, {
                        text: this.translate.instant('videocall.choose-file'),
                        icon: 'document',
                        handler: function handler() {
                          _this.addFile();
                        }
                      }]; // Only allow file selection inside a browser

                      if (!this.platform.is('hybrid')) {
                        buttons.push({
                          text: 'Choose a File',
                          icon: 'attach',
                          handler: function handler() {
                            _this.fileInput.nativeElement.click();
                          }
                        });
                      }

                      _context.next = 4;
                      return this.actionSheetCtrl.create({
                        buttons: buttons
                      });

                    case 4:
                      actionSheet = _context.sent;
                      _context.next = 7;
                      return actionSheet.present();

                    case 7:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee, this);
            }));
          }
        }, {
          key: "addFile",
          value: function addFile() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
              var _this2 = this;

              return regeneratorRuntime.wrap(function _callee3$(_context3) {
                while (1) {
                  switch (_context3.prev = _context3.next) {
                    case 0:
                      this.chooser.getFile().then(function (file) {
                        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this2, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
                          return regeneratorRuntime.wrap(function _callee2$(_context2) {
                            while (1) {
                              switch (_context2.prev = _context2.next) {
                                case 0:
                                  //console.log(file ? file : 'canceled');
                                  if (file) {
                                    //console.log("file", file);
                                    //console.log(" base64result.split(',')[1] ", file.dataURI.split(',')[1]);
                                    this.patient_files.push({
                                      name: file.name,
                                      file: file.dataURI.split(',')[1],
                                      type: file.mediaType
                                    });
                                  }

                                case 1:
                                case "end":
                                  return _context2.stop();
                              }
                            }
                          }, _callee2, this);
                        }));
                      })["catch"](function (error) {
                        console.error(error);
                      });

                    case 1:
                    case "end":
                      return _context3.stop();
                  }
                }
              }, _callee3, this);
            }));
          }
        }, {
          key: "addImage",
          value: function addImage(source) {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
              var image;
              return regeneratorRuntime.wrap(function _callee4$(_context4) {
                while (1) {
                  switch (_context4.prev = _context4.next) {
                    case 0:
                      _context4.next = 2;
                      return Camera.getPhoto({
                        quality: 60,
                        allowEditing: false,
                        resultType: _capacitor_core__WEBPACK_IMPORTED_MODULE_9__["CameraResultType"].Base64,
                        source: source
                      })["catch"](function (e) {
                        console.log('cancelled');
                      });

                    case 2:
                      image = _context4.sent;

                      if (image) {
                        this.file64 = this.sanitizer.bypassSecurityTrustResourceUrl('data:' + "image/".concat(image.format) + ';base64,' + image.base64String);
                        this.patient_files.push({
                          name: Date.now() + '.' + image.format,
                          file: image.base64String,
                          type: image.format
                        });
                        this.form.patchValue({
                          auto: 'data:' + "image/".concat(image.format) + ';base64,' + image.base64String
                        });
                      }

                    case 4:
                    case "end":
                      return _context4.stop();
                  }
                }
              }, _callee4, this);
            }));
          }
        }, {
          key: "uploadFileFromBrowser",
          value: function uploadFileFromBrowser(event) {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
              var eventObj, target, file, toBase64, result, base64result;
              return regeneratorRuntime.wrap(function _callee5$(_context5) {
                while (1) {
                  switch (_context5.prev = _context5.next) {
                    case 0:
                      eventObj = event;
                      target = eventObj.target;
                      file = target.files[0];

                      toBase64 = function toBase64(file) {
                        return new Promise(function (resolve, reject) {
                          var reader = new FileReader();
                          reader.readAsDataURL(file);

                          reader.onload = function () {
                            return resolve(reader.result);
                          };

                          reader.onerror = function (error) {
                            return reject(error);
                          };
                        });
                      };

                      _context5.next = 6;
                      return toBase64(file)["catch"](function (e) {
                        return Error(e);
                      });

                    case 6:
                      result = _context5.sent;
                      base64result = result; //console.log(" base64result.split(',')[1] ", base64result.split(',')[1]);

                      this.patient_files.push({
                        name: file.name,
                        file: base64result.split(',')[1],
                        type: file.type
                      });
                      this.form.patchValue({
                        auto: result
                      });

                    case 10:
                    case "end":
                      return _context5.stop();
                  }
                }
              }, _callee5, this);
            }));
          }
        }, {
          key: "fileError",
          value: function fileError(error) {
            console.log(error);
          }
        }, {
          key: "deletePreviousAppointment",
          value: function deletePreviousAppointment() {
            var _this3 = this;

            var previousAppointment = history.state.agenda;
            console.log("before deleteAppointmentTeladoc: ");
            return this.appointmentService.deleteAppointmentTeladoc(previousAppointment.ext_id, this.appointmentService.teladocUser.project_id).subscribe(function (data) {
              return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this3, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
                return regeneratorRuntime.wrap(function _callee6$(_context6) {
                  while (1) {
                    switch (_context6.prev = _context6.next) {
                      case 0:
                        console.log("delete appointment teladoc ");
                        this.deleteAppointmentDoole(previousAppointment.id);

                      case 2:
                      case "end":
                        return _context6.stop();
                    }
                  }
                }, _callee6, this);
              }));
            }, function (error) {
              // Called when error
              error = error;
              console.log("error:", error);
              throw error;
            });
          }
        }, {
          key: "deleteAppointmentDoole",
          value: function deleteAppointmentDoole(id) {
            var _this4 = this;

            return this.appointmentService.deleteAppointmentDoole(id).subscribe(function (data) {
              return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this4, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
                return regeneratorRuntime.wrap(function _callee7$(_context7) {
                  while (1) {
                    switch (_context7.prev = _context7.next) {
                      case 0:
                        console.log("deleted appointment doole ", data);
                        this.router.navigate(['/app/home/healthcare/appointments/success'], {
                          state: {
                            isOnline: true,
                            appointmentType: 6,
                            fromSymptonChecker: this.fromSymptonChecker,
                            isAppointmentChange: this.isAppointmentChange
                          }
                        });
                        return _context7.abrupt("return");

                      case 3:
                      case "end":
                        return _context7.stop();
                    }
                  }
                }, _callee7, this);
              }));
            });
          }
        }, {
          key: "submit",
          value: function submit() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
              var _this5 = this;

              return regeneratorRuntime.wrap(function _callee10$(_context10) {
                while (1) {
                  switch (_context10.prev = _context10.next) {
                    case 0:
                      this.showProcessing = true;
                      this.appointmentService.getTeladocToken({
                        client_code: this.appointmentService.teladocUser.client_code,
                        project_id: this.appointmentService.teladocUser.project_id
                      }).subscribe(function (data) {
                        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this5, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
                          var _this6 = this;

                          var description, phone, request, type, place, indications, staff_id;
                          return regeneratorRuntime.wrap(function _callee9$(_context9) {
                            while (1) {
                              switch (_context9.prev = _context9.next) {
                                case 0:
                                  this.teladocCredentials = data;
                                  this.appointmentService.teladocCredentials = data;
                                  description = this.form.get('description').value;
                                  phone = this.form.get('phone').value;
                                  request = this.setTeladocAppoinmentRequest(description, phone, this.patient_files);
                                  type = "6"; // Teladoc's appointment type id

                                  place = "";
                                  indications = "";
                                  staff_id = "";
                                  this.appointmentService.bookTeladocAppointment(request, type, place, indications, staff_id).subscribe(function (res) {
                                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this6, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {
                                      return regeneratorRuntime.wrap(function _callee8$(_context8) {
                                        while (1) {
                                          switch (_context8.prev = _context8.next) {
                                            case 0:
                                              this.appointmentService.booking = res.reference;
                                              console.log('this.isAppointmentChange: ', this.isAppointmentChange);
                                              if (this.isAppointmentChange) this.deletePreviousAppointment();else this.router.navigate(['/app/home/healthcare/appointments/success'], {
                                                state: {
                                                  isOnline: true,
                                                  appointmentType: 6,
                                                  fromSymptonChecker: this.fromSymptonChecker,
                                                  isAppointmentChange: this.isAppointmentChange
                                                }
                                              });

                                            case 3:
                                            case "end":
                                              return _context8.stop();
                                          }
                                        }
                                      }, _callee8, this);
                                    }));
                                  }, function (error) {
                                    var _a; // Called when error


                                    _this6.showProcessing = false;
                                    if (((_a = error.data) === null || _a === void 0 ? void 0 : _a.code) == 150) _this6.appointmentService.showAlert('No hi ha disponibilitat');else throw error;
                                  }, function () {// Called when operation is complete (both success and error)
                                    // this.showProcessing = false;
                                  });

                                case 10:
                                case "end":
                                  return _context9.stop();
                              }
                            }
                          }, _callee9, this);
                        }));
                      }, function (error) {
                        // Called when error
                        throw error;
                      }, function () {// Called when operation is complete (both success and error)
                      });

                    case 2:
                    case "end":
                      return _context10.stop();
                  }
                }
              }, _callee10, this);
            }));
          }
        }, {
          key: "setTeladocAppoinmentRequest",
          value: function setTeladocAppoinmentRequest(description, phone, files) {
            var request = new src_app_shared_classes_appointments__WEBPACK_IMPORTED_MODULE_15__["TeladocBookAppointmentRequest"]();
            var date = this.datepipe.transform(this.appointmentService.appointment, "yyyy-MM-dd");
            var time = this.datepipe.transform(this.appointmentService.appointment, "HH:mm");
            var timeDiff = Math.abs(Date.now() - new Date(this.appointmentService.teladocUser.birth_date).getTime());
            var age = Math.floor(timeDiff / (1000 * 3600 * 24) / 365.25);
            request.project_id = parseInt(this.appointmentService.teladocUser.project_id);
            request.client_id = this.appointmentService.teladocCredentials.client_id;
            request.language = this.appointmentService.teladocUser.language;
            request.specialty = "general";
            request.date = date;
            request.time = time;
            request.time_zone = "Europe/Madrid";
            request.country = "ES";
            request.doctor_location = "local";
            request.patient = {
              name: this.appointmentService.teladocUser.name,
              surname: this.appointmentService.teladocUser.surname,
              surname2: this.appointmentService.teladocUser.surname2,
              birth_date: this.appointmentService.teladocUser.birth_date,
              age: age.toString(),
              phone_prefix: this.appointmentService.teladocUser.phone_prefix,
              phone: phone
            };
            request.patient_files = files, request.title = "";
            request.call_reason = description;
            request.scheduled = true;
            request.doctor_answer = "";
            return request;
          }
        }, {
          key: "getMetgeTutor",
          value: function getMetgeTutor() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
              var _this7 = this;

              return regeneratorRuntime.wrap(function _callee12$(_context12) {
                while (1) {
                  switch (_context12.prev = _context12.next) {
                    case 0:
                      this.appointmentService.get('mgc/metgetutor').subscribe(function (data) {
                        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this7, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
                          return regeneratorRuntime.wrap(function _callee11$(_context11) {
                            while (1) {
                              switch (_context11.prev = _context11.next) {
                                case 0:
                                  if (!(data.tutor && data.meta)) {
                                    _context11.next = 8;
                                    break;
                                  }

                                  this.appointmentService.codi_servei = data.meta.metge_codi_especialitat;
                                  this.appointmentService.id_agenda = data.meta.metge_id_agenda;
                                  this.appointmentService.metgeTutor = null; //data;

                                  this.tutor = data.tutor.first_name;
                                  this.family_name = data.tutor.last_name;
                                  _context11.next = 9;
                                  break;

                                case 8:
                                  throw new Error(this.translate.instant('metge_tutor.unassigned'));

                                case 9:
                                case "end":
                                  return _context11.stop();
                              }
                            }
                          }, _callee11, this);
                        }));
                      }, function (error) {
                        // Called when error
                        console.log("error: ", error);
                        throw new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpErrorResponse"](error);
                      });

                    case 1:
                    case "end":
                      return _context12.stop();
                  }
                }
              }, _callee12, this);
            }));
          }
        }, {
          key: "removeFile",
          value: function removeFile(name) {
            var _this8 = this;

            console.log("removeFile: ", name);
            this.patient_files.forEach(function (element, index) {
              if (element.name == name) _this8.patient_files.splice(index, 1);
            });
          }
        }, {
          key: "openFile",
          value: function openFile(file) {
            //console.log("openFile", file);
            var type = file.type;

            if (type.includes('image') || type.includes('jpeg') || type.includes('jpg') || type.includes('png')) {
              var image = new Image();
              image.src = "data:" + file.type + ";base64," + file.file;

              if (!this.platform.is('mobileweb') && !this.platform.is('desktop')) {
                var pageContent = '<html><head></head><body>' + image.outerHTML + '</body></html>';
                var pageContentUrl = 'data:text/html;base64,' + btoa(pageContent);
                this.openWithInAppBrowser(pageContentUrl);
              } else {
                var w = window.open("");
                w.document.write(image.outerHTML);
              }
            } else if (type.includes('pdf')) {
              if (!this.platform.is('mobileweb') && !this.platform.is('desktop')) {
                var pageContent = "<html><head></head><body><iframe width='100%' height='100%' src='data:application/pdf;base64, " + file.file + "'></iframe></body></html>";
                var pageContentUrl = 'data:text/html;base64,' + btoa(pageContent);
                this.openWithInAppBrowser(pageContentUrl);
              } else {
                var pdfWindow = window.open("");
                pdfWindow.document.write("<iframe width='100%' height='100%' src='data:application/pdf;base64, " + encodeURI(file.file) + "'></iframe>");
              }
            } else this.presentAlert();
          }
        }, {
          key: "openWithInAppBrowser",
          value: function openWithInAppBrowser(url) {
            var options = {
              location: 'yes',
              hideurlbar: 'yes',
              hidden: 'no',
              clearcache: 'yes',
              clearsessioncache: 'yes',
              enableViewPortScale: 'yes',
              zoom: 'yes',
              hardwareback: 'yes',
              mediaPlaybackRequiresUserAction: 'no',
              shouldPauseOnSuspend: 'no',
              closebuttoncaption: 'Close',
              disallowoverscroll: 'no',
              toolbar: 'yes',
              enableViewportScale: 'no',
              allowInlineMediaPlayback: 'no',
              presentationstyle: 'pagesheet',
              fullscreen: 'yes'
            };
            var target = "_blank";
            this.iab.create(url, target, options);
          }
        }, {
          key: "presentAlert",
          value: function presentAlert() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {
              var alert;
              return regeneratorRuntime.wrap(function _callee13$(_context13) {
                while (1) {
                  switch (_context13.prev = _context13.next) {
                    case 0:
                      _context13.next = 2;
                      return this.alertController.create({
                        cssClass: 'my-custom-class',
                        message: this.translate.instant("videocall.file_type_not supported"),
                        buttons: [{
                          text: 'Ok'
                        }]
                      });

                    case 2:
                      alert = _context13.sent;
                      _context13.next = 5;
                      return alert.present();

                    case 5:
                    case "end":
                      return _context13.stop();
                  }
                }
              }, _callee13, this);
            }));
          }
        }]);

        return VideocallsPage;
      }();

      VideocallsPage.ctorParameters = function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"]
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_12__["Platform"]
        }, {
          type: _ionic_native_in_app_browser_ngx__WEBPACK_IMPORTED_MODULE_11__["InAppBrowser"]
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_12__["ActionSheetController"]
        }, {
          type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["DomSanitizer"]
        }, {
          type: src_app_services_appointment_service__WEBPACK_IMPORTED_MODULE_14__["AppointmentService"]
        }, {
          type: _ionic_native_chooser_ngx__WEBPACK_IMPORTED_MODULE_10__["Chooser"]
        }, {
          type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_13__["TranslateService"]
        }, {
          type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"]
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_12__["AlertController"]
        }];
      };

      VideocallsPage.propDecorators = {
        fileInput: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"],
          args: ['fileInput', {
            "static": false
          }]
        }]
      };
      VideocallsPage = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["Component"])({
        selector: 'app-videocalls',
        template: _raw_loader_videocalls_page_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        providers: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"], _ionic_native_chooser_ngx__WEBPACK_IMPORTED_MODULE_10__["Chooser"]],
        styles: [_videocalls_page_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["Injectable"])({
        providedIn: 'root'
      })], VideocallsPage);
      /***/
    },

    /***/
    "OPiI":
    /*!*************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/home/healthcare/videocalls/videocalls.page.html ***!
      \*************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function OPiI(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<custom-header></custom-header>\n<ion-content\n  class=\"back\"\n  [ngStyle]=\"{'background': 'url(' + backgroundImage + ')'}\"\n  fullscreen\n>\n  <page-header\n    title=\"{{'healthcare.videocall'  | translate}}\"\n    icon=\"assets/icons/i_videoconsulta.svg\"\n  >\n  </page-header>\n  <div class=\"main-container\">\n    <ng-container *ngIf=\"this.showProcessing else showForm\">\n      <div style=\"margin: 20px 40px; text-align: center\">\n        <ion-spinner></ion-spinner>\n        <p>\n          <b>{{ 'appointments.save' | translate }}</b>\n        </p>\n      </div>\n    </ng-container>\n\n    <ng-template #showForm>\n      <form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\n        <ion-text><p>{{ 'videocall.text' | translate }}</p></ion-text>\n        <ion-item>\n          <ion-textarea\n            formControlName=\"description\"\n            placeholder=\"{{ 'videocall.description' | translate }}\"\n          ></ion-textarea>\n        </ion-item>\n        <ion-text><p>{{ 'videocall.telephone' | translate }}</p></ion-text>\n        <ion-item>\n          <ion-input type=\"number\" size=\"15\"\n            formControlName=\"phone\"\n          ></ion-input>\n        </ion-item>\n\n        <div style=\"padding-top: 10px;\">\n          <ion-nav-link (click)=\"selectImageSource()\" expand=\"block\" color=\"dark\">\n            <ion-icon size=\"large\" name=\"attach\"></ion-icon>{{ 'videocall.file' |\n            translate }}</ion-nav-link\n          >\n          <input\n            type=\"file\"\n            #fileInput\n            (change)=\"uploadFileFromBrowser($event)\"\n            hidden=\"true\"\n            accept=\"image/*, application/pdf, video/*, audio/*, .doc,.docx,application/msword\">\n          </div>\n       \n        <div id=\"container\" style=\"margin-top: 10px;\">\n          <div *ngFor=\"let file of this.patient_files\">\n          <div id=\"left\">\n            <ion-icon name=\"open\" color=\"primary\" (click)=\"openFile(file)\"></ion-icon>\n          </div>\n          <div id=\"middle\">\n            <p class=\"titule\">{{ file.name }}</p>\n          </div>\n          <div id=\"right\">\n            <ion-icon name=\"close-circle\" color=\"primary\" (click)=\"removeFile(file.name)\"></ion-icon>\n        </div>\n       \n      </div>\n    </div>  \n        <ion-button\n          type=\"submit\"\n          expand=\"block\"\n          color=\"primary\"\n          [disabled]=\"!form.valid\"\n        >\n          {{ 'videocall.submit' | translate |Â uppercase}}</ion-button\n        >\n      </form>\n    </ng-template>\n  </div>\n</ion-content>\n";
      /***/
    },

    /***/
    "bM2s":
    /*!***********************************************************************!*\
      !*** ./src/app/pages/home/healthcare/videocalls/videocalls.module.ts ***!
      \***********************************************************************/

    /*! exports provided: VideocallsPageModule */

    /***/
    function bM2s(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "VideocallsPageModule", function () {
        return VideocallsPageModule;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @ionic/angular */
      "TEn/");
      /* harmony import */


      var _videocalls_routing_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./videocalls-routing.module */
      "qJ1S");
      /* harmony import */


      var _videocalls_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./videocalls.page */
      "3PvO");
      /* harmony import */


      var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @ngx-translate/core */
      "sYmb");
      /* harmony import */


      var src_app_components_components_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! src/app/components/components.module */
      "j1ZV");
      /* harmony import */


      var _ionic_native_in_app_browser_ngx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! @ionic-native/in-app-browser/ngx */
      "m/P+");

      var VideocallsPageModule = function VideocallsPageModule() {
        _classCallCheck(this, VideocallsPageModule);
      };

      VideocallsPageModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"], _ionic_angular__WEBPACK_IMPORTED_MODULE_4__["IonicModule"], _videocalls_routing_module__WEBPACK_IMPORTED_MODULE_5__["VideocallsPageRoutingModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"], _ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__["TranslateModule"], src_app_components_components_module__WEBPACK_IMPORTED_MODULE_8__["ComponentsModule"]],
        providers: [_ionic_native_in_app_browser_ngx__WEBPACK_IMPORTED_MODULE_9__["InAppBrowser"]],
        declarations: [_videocalls_page__WEBPACK_IMPORTED_MODULE_6__["VideocallsPage"]]
      })], VideocallsPageModule);
      /***/
    },

    /***/
    "kD5F":
    /*!***********************************************************************!*\
      !*** ./src/app/pages/home/healthcare/videocalls/videocalls.page.scss ***!
      \***********************************************************************/

    /*! exports provided: default */

    /***/
    function kD5F(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "ion-content {\n  --background: none;\n  background-position: center top;\n  background-repeat: no-repeat !important;\n  background-size: cover !important;\n}\n\nion-icon {\n  font-size: 18px;\n}\n\n.titule {\n  font-size: 18px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n#container * {\n  margin: 0;\n  padding: 0;\n}\n\n#container {\n  width: 100%;\n}\n\n#left,\n#middle,\n#right {\n  display: inline-block;\n  *display: inline;\n  zoom: 1;\n  vertical-align: top;\n}\n\n#left {\n  width: 10%;\n}\n\n#middle {\n  vertical-align: bottom;\n  width: 75%;\n}\n\n#right {\n  vertical-align: bottom;\n  width: 10%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3ZpZGVvY2FsbHMucGFnZS5zY3NzIiwidmlkZW9jYWxscy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUU7RUFDRSxrQkFBQTtFQUNBLCtCQUFBO0VBQ0EsdUNBQUE7RUFDQSxpQ0FBQTtBQUNKOztBQUVFO0VBQ0UsZUFBQTtBQUNKOztBQUdFO0VBQ0UsZUFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtBQUFKOztBQUdFO0VBQ0UsU0FBQTtFQUNBLFVBQUE7QUFBSjs7QUFFRTtFQUNFLFdBQUE7QUFDSjs7QUFFRTs7O0VBR0UscUJBQUE7R0NDRixlREFFO0VBQ0EsT0FBQTtFQUNBLG1CQUFBO0FBQ0o7O0FBQ0U7RUFDRSxVQUFBO0FBRUo7O0FBQUU7RUFDRSxzQkFBQTtFQUNBLFVBQUE7QUFHSjs7QUFERTtFQUNFLHNCQUFBO0VBQ0EsVUFBQTtBQUlKIiwiZmlsZSI6InZpZGVvY2FsbHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiICBpb24tY29udGVudCB7XG4gICAgLS1iYWNrZ3JvdW5kOiBub25lO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciB0b3A7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdCAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXIgIWltcG9ydGFudDtcbiAgXG4gIH0gIFxuICBpb24taWNvbiB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICB9XG4gXG5cbiAgLnRpdHVsZSB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgfVxuICBcbiAgI2NvbnRhaW5lciAqIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICAjY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgXG4gIH1cbiAgI2xlZnQsXG4gICNtaWRkbGUsXG4gICNyaWdodCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICpkaXNwbGF5OiBpbmxpbmU7XG4gICAgem9vbTogMTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICB9XG4gICNsZWZ0IHtcbiAgICB3aWR0aDogMTAlO1xuICB9XG4gICNtaWRkbGUge1xuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG4gICAgd2lkdGg6IDc1JTtcbiAgfVxuICAjcmlnaHQge1xuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG4gICAgd2lkdGg6IDEwJTtcbiAgfVxuICAiLCJpb24tY29udGVudCB7XG4gIC0tYmFja2dyb3VuZDogbm9uZTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHRvcDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdCAhaW1wb3J0YW50O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyICFpbXBvcnRhbnQ7XG59XG5cbmlvbi1pY29uIHtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuXG4udGl0dWxlIHtcbiAgZm9udC1zaXplOiAxOHB4O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cblxuI2NvbnRhaW5lciAqIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4jY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbiNsZWZ0LFxuI21pZGRsZSxcbiNyaWdodCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgKmRpc3BsYXk6IGlubGluZTtcbiAgem9vbTogMTtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuI2xlZnQge1xuICB3aWR0aDogMTAlO1xufVxuXG4jbWlkZGxlIHtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgd2lkdGg6IDc1JTtcbn1cblxuI3JpZ2h0IHtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgd2lkdGg6IDEwJTtcbn0iXX0= */";
      /***/
    },

    /***/
    "qJ1S":
    /*!*******************************************************************************!*\
      !*** ./src/app/pages/home/healthcare/videocalls/videocalls-routing.module.ts ***!
      \*******************************************************************************/

    /*! exports provided: VideocallsPageRoutingModule */

    /***/
    function qJ1S(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "VideocallsPageRoutingModule", function () {
        return VideocallsPageRoutingModule;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/router */
      "tyNb");
      /* harmony import */


      var _videocalls_page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./videocalls.page */
      "3PvO");

      var routes = [{
        path: '',
        component: _videocalls_page__WEBPACK_IMPORTED_MODULE_3__["VideocallsPage"]
      }];

      var VideocallsPageRoutingModule = function VideocallsPageRoutingModule() {
        _classCallCheck(this, VideocallsPageRoutingModule);
      };

      VideocallsPageRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
      })], VideocallsPageRoutingModule);
      /***/
    }
  }]);
})();
//# sourceMappingURL=default~pages-home-healthcare-videocalls-videocalls-module~videocalls-videocalls-module-es5.js.map