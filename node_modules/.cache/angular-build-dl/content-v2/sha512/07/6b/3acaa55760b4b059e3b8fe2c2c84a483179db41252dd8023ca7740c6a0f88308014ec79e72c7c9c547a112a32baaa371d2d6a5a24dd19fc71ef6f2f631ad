{"version":3,"sources":["./src/app/pages/landing/password/password.page.scss","./src/app/pages/landing/password/password.module.ts","./src/app/pages/landing/password/password.page.html","./src/app/pages/landing/password/password.page.ts"],"names":[],"mappings":"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","file":"pages-landing-password-password-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXNzd29yZC5wYWdlLnNjc3MifQ== */\";","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { PasswordPage } from './password.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FirebaseAuthService } from '../../firebase/auth/firebase-auth.service';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PasswordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    TranslateModule,\n    ComponentsModule\n  ],\n  providers: [FirebaseAuthService],\n  declarations: [PasswordPage]\n})\nexport class PasswordPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-icon class=\\\"icon_person\\\" src=\\\"assets/icons/usuari.svg\\\"></ion-icon>\\n      <!-- <ion-icon class=\\\"icon_person\\\" name=\\\"person-circle\\\"></ion-icon> -->\\n      <!---->\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-back-button defaultHref=\\\"/email\\\"></ion-back-button> \\n    </ion-buttons>\\n  \\n    <ion-title >{{ this.header | translate }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <div class=\\\"landing-container\\\">\\n  <form (ngSubmit)=\\\"submit()\\\" [formGroup]=\\\"credentials\\\">\\n  <ion-text>\\n    <p>{{ 'password.text' | translate }}</p>\\n  </ion-text>\\n  <ion-text>\\n    <p>{{ 'password.text_2' | translate }} </p>\\n  </ion-text>\\n  <ion-text>\\n    <p>{{ 'password.text_3' | translate }} </p>\\n  </ion-text>\\n  <ion-item>\\n    <app-show-hide-password>\\n    <ion-input type=\\\"password\\\"  formControlName=\\\"password\\\" placeholder=\\\"{{ 'password.placeholder' | translate }}\\\" ></ion-input>\\n    </app-show-hide-password>\\n  </ion-item>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col></ion-col>\\n      <ion-col></ion-col>\\n      <ion-col>\\n        <div>\\n          <ion-button type=\\\"submit\\\" color=\\\"primary\\\" slot=\\\"end\\\">\\n            {{ 'password.button' | translate |Â uppercase}}\\n            </ion-button>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</form>\\n<!-- <ion-button expand=\\\"block\\\"  routerLink=\\\"/confirmation\\\" color=\\\"dark\\\">{{ 'password.button' | translate | uppercase }}</ion-button> -->\\n<div *ngIf=\\\"this.authService.action=='signUpUser'\\\">\\n  <ion-button class=\\\"button_cred\\\" type=\\\"button\\\" (click)=\\\"doGoogleLogin()\\\" expand=\\\"block\\\" color=\\\"light\\\">\\n    <ion-icon name=\\\"logo-google\\\" slot=\\\"start\\\"></ion-icon>\\n    {{ 'login.google_signin' | translate }}\\n  </ion-button>\\n  <!--\\n  <ion-button class=\\\"button_cred\\\" type=\\\"button\\\" expand=\\\"block\\\" color=\\\"light\\\">\\n    <ion-icon name=\\\"logo-apple\\\" slot=\\\"start\\\"></ion-icon>\\n    {{ 'login.apple_signin' | translate }}\\n  </ion-button>\\n  -->\\n</div>\\n\\n<!-- <ion-button type=\\\"button\\\" expand=\\\"block\\\"  routerLink=\\\"/\\\" color=\\\"dark\\\">\\n  <ion-icon name=\\\"logo-google\\\" slot=\\\"start\\\"></ion-icon>\\n  {{ 'password.google_signin' | translate }}\\n</ion-button>\\n<ion-button type=\\\"button\\\" expand=\\\"block\\\" routerLink=\\\"/home\\\" color=\\\"dark\\\">\\n  <ion-icon name=\\\"logo-apple\\\" slot=\\\"start\\\"></ion-icon>\\n  {{ 'password.apple_signin' | translate }}\\n</ion-button> -->\\n</div>\\n</ion-content>\\n\";","import { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { LoadingController } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { Location } from '@angular/common';\nimport { RecoveryPassword } from 'src/app/shared/classes/credential-data';\nimport { FirebaseAuthService } from '../../firebase/auth/firebase-auth.service';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.page.html',\n  styleUrls: ['./password.page.scss'],\n})\nexport class PasswordPage implements OnInit, OnDestroy {\n\n  credentials: FormGroup;\n  header : string;\n  private resource : string = 'registre4';\n  private nextRoute : string = 'confirmation'\n  submitError: string;\n  redirectLoader: HTMLIonLoadingElement;\n  authRedirectResult: Subscription;\n  constructor(\n    private fb: FormBuilder,\n    public authService: AuthenticationService,\n    private router: Router,\n    public route: ActivatedRoute,\n    private loadingController: LoadingController,\n    public firebaseService: FirebaseAuthService,\n    public location: Location,\n    private ngZone: NgZone,\n  ) { \n\n     // Get firebase authentication redirect result invoken when using signInWithRedirect()\n    // signInWithRedirect() is only used when client is in web but not desktop\n    this.authRedirectResult = this.firebaseService.getRedirectResult()\n    .subscribe(result => {\n      if (result.user) {\n        this.dismissLoading();\n        var uid = this.getUserUid(result.user);\n        this.credentials = this.fb.group({\n          mutua: JSON.parse(window.localStorage.getItem('mutua')),\n          id_usuari_mgc: JSON.parse(window.localStorage.getItem('id_usuari_mgc')),\n          credencial: 'google', \n          username: uid,\n          password: ''\n        });\n       \n        console.log(\"before submit credentials; \", this.credentials.value);\n        this.submit();\n        \n      } else if (result.error) {\n        this.manageAuthWithProvidersErrors(result.error);\n      }\n    });\n\n    // Check if url contains our custom 'auth-redirect' param, then show a loader while we receive the getRedirectResult notification\n    this.route.queryParams.subscribe(params => {\n      const authProvider = params['auth-redirect'];\n      if (authProvider) {\n        this.presentLoading(authProvider);\n      }\n    });\n  }\n\n  public getUserUid(user) : string{\n   \n    var uid = '';\n    user.providerData.forEach(function (profile) {\n      switch(profile.providerId) {\n        case 'google.com':\n          uid = profile.uid;\n          break;\n        default:\n          uid = '';\n      }\n    });\n    console.log(\"  Uid: \" + uid);\n    return uid;\n  }\n  \n  ngOnInit() {\n    this.setCredentials();\n    // Based on user action, get next route and API resource\n    this.setNextRoute();\n    \n  }\n\n // Once the auth provider finished the authentication flow, and the auth redirect completes,\n  // hide the loader and redirect the user to the profile page\n  redirectLoggedUserToProfilePage(result?) {\n\n    \n    console.log(\"token:\" ,  result);\n\n    this.dismissLoading();\n    // As we are calling the Angular router navigation inside a subscribe method, the navigation will be triggered outside Angular zone.\n    // That's why we need to wrap the router navigation call inside an ngZone wrapper\n    this.ngZone.run(() => {\n      // Get previous URL from our custom History Helper\n      // If there's no previous page, then redirect to profile\n      // const previousUrl = this.historyHelper.previousUrl || 'firebase/auth/profile';\n      const previousUrl = 'app/home';\n\n      // No need to store in the navigation history the sign-in page with redirect params (it's justa a mandatory mid-step)\n      // Navigate to profile and replace current url with profile\n      //this.router.navigate([previousUrl], { replaceUrl: true });\n    });\n  }\n\n  public setNextRoute(){\n\n    switch(this.authService.action){\n      case 'signUpUser':\n        this.nextRoute = 'confirmation';\n        this.header = 'landing.registre';\n        break;\n      case 'passwordRecovery':\n        this.nextRoute = '/login';\n        this.resource = 'contrasenya3';\n        this.header = 'landing.password';\n        break;\n      case 'addSocialAuth':\n        this.nextRoute = 'app/home';\n        this.header = 'landing.social';\n        break;\n\n    }\n  }\n\n  async submit() {\n    const loading = await this.loadingController.create();\n    await loading.present();\n    \n    this.authService.validateCredentials(this.credentials.value, this.resource).subscribe(\n      async (data) => {\n        console.log(\"submitting response: \", data);\n        await loading.dismiss();\n        this.router.navigate([this.nextRoute]);\n      },\n      (error) => {\n        // Called when error\n        loading.dismiss();\n       throw error;\n        \n      },\n       () => {\n        // Called when operation is complete (both success and error)\n        loading.dismiss();\n      });\n      \n  }\n\n  setCredentials(){\n   \n   console.log('ngInitCredentials'); \n\n   this.credentials = this.fb.group({\n    mutua: this.authService.mutua,\n    id_usuari_mgc: this.authService.id_usuari_mgc,\n    credencial:'mgc',\n    username: this.authService.mutua,\n    password: ['', [Validators.required]]\n    });\n  }\n\n  async presentLoading(authProvider?: string) {\n    const authProviderCapitalized = authProvider[0].toUpperCase() + authProvider.slice(1);\n    this.loadingController.create({\n      message: authProvider ? 'Signing in with ' + authProviderCapitalized : 'Signin in ...'\n    }).then((loader) => {\n      const currentUrl = this.location.path();\n      if (currentUrl.includes('auth-redirect')) {\n       \n        this.redirectLoader = loader;\n        this.redirectLoader.present();\n      }\n    });\n  }\n\n  resetSubmitError() {\n    this.submitError = null;\n  }\n\n  // Before invoking auth provider redirect flow, present a loading indicator and add a flag to the path.\n  // The precense of the flag in the path indicates we should wait for the auth redirect to complete.\n  prepareForAuthWithProvidersRedirection(authProvider: string) {\n    this.presentLoading(authProvider);\n\n    this.location.replaceState(this.location.path(), 'auth-redirect=' + authProvider, this.location.getState());\n  }\n\n  manageAuthWithProvidersErrors(errorMessage: string) {\n    this.submitError = errorMessage;\n    // remove auth-redirect param from url\n    this.location.replaceState(this.router.url.split('?')[0], '');\n    this.dismissLoading();\n    throw new Error(errorMessage);\n  }\n\n  async dismissLoading() {\n    if (this.redirectLoader) {\n      await this.redirectLoader.dismiss();\n    }\n  }\n\n  \n  doGoogleLogin(): void {\n\n    this.resetSubmitError();\n    this.prepareForAuthWithProvidersRedirection('google');\n    window.localStorage.setItem('mutua', JSON.stringify(this.authService.mutua) );\n    window.localStorage.setItem('id_usuari_mgc', JSON.stringify(this.authService.id_usuari_mgc));\n    console.log(window.localStorage.length);\n    this.firebaseService.signInWithGoogle()\n    .subscribe((result) => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken;\n     \n      console.log(\"token: \", token);\n      this.redirectLoggedUserToProfilePage();\n    }, (error) => {\n        console.log(error);\n      this.manageAuthWithProvidersErrors(error.message);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.dismissLoading();\n  }\n}\n\n\n\n\n"],"sourceRoot":"webpack:///"}