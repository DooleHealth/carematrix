{"version":3,"sources":["webpack:///src/app/pages/home/healthcare/appointments/appointments.page.scss","webpack:///src/app/pages/home/healthcare/appointments/appointments-routing.module.ts","webpack:///src/app/pages/home/healthcare/appointments/appointments.page.ts","webpack:///src/app/pages/home/healthcare/appointments/appointments.page.html","webpack:///src/app/pages/home/healthcare/appointments/appointments.module.ts"],"names":["routes","path","component","loadChildren","then","m","AgendaPageModule","SuccessPageModule","VideocallsPageModule","AppointmentsPageRoutingModule","imports","forChild","exports","AppointmentsPage","router","appointmentService","authService","datepipe","alertController","location","backgroundImage","agendas","data_inici","Date","data_fi","appointmentType","history","state","isOnline","isAppointmentChange","fromSymptonChecker","showProcessing","setHours","getHours","setMonth","getMonth","setPageHeader","console","log","getTeladocAgenda2","metgeTutor","getMetgeTutor","editAgenda","getAgenda","icon","header","infor","getTeladocUser2","res","teladocUser","transform","params","date_from","date_to","project_id","time_zone","language","getTeladocAvailability","subscribe","data","length","teladocSchedules","getNextTeladocAppointment","error","back","getTeladocSchedule","getTeladocUser","agenda","getAppointmentInfo","user","mutua","ext_id","id_agenda","codi_servei","getAgendaSchedule","get","tutor","meta","metge_codi_especialitat","metge_id_agenda","tractament","metge_tractament","request","getAgendaAvailability","schedules","appointment","undefined","getNextAvailableAppointment","navigate","next_appointment","endTime","every","element","pattern","current","replace","horaris","item","disponible","parseInt","hora","substring","setMinutes","getMinutes","flag","date","day_slots","availability","time_ini","toLocaleDateString","toLocaleTimeString","time","staff_id","id","saveAppointment","bookAppointment","dades","booking","previousAppointment","deletePreviousAppointment","deleteAppointment","deleteAppointmentDoole","selector","template","providers","AppointmentsPageModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,EAKrB;AACED,YAAI,EAAE,QADR;AAEEE,oBAAY,EAAE;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA,mBAAkCC,IAAlC,CAAwC,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,gBAAN;AAAA,WAAzC,CAAN;AAAA;AAFhB,OALqB,EASrB;AACEL,YAAI,EAAE,SADR;AAEEE,oBAAY,EAAE;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA,mBAAmCC,IAAnC,CAAyC,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACE,iBAAN;AAAA,WAA1C,CAAN;AAAA;AAFhB,OATqB,EAarB;AACEN,YAAI,EAAE,WADR;AAEEE,oBAAY,EAAE;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA,mBAA0CC,IAA1C,CAAgD,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACG,oBAAN;AAAA,WAAjD,CAAN;AAAA;AAFhB,OAbqB,CAAvB;;UAuBaC,6BAA6B;AAAA;AAAA,O;;AAA7BA,mCAA6B,6DAJzC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBX,MAAtB,CAAD,CADD;AAERY,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIyC,GAA7BH,6BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCZAI,gBAAgB;AAoB3B,kCAAoBC,MAApB,EAA4CC,kBAA5C,EACUC,WADV,EAESC,QAFT,EAGSC,eAHT,EAIUC,QAJV,EAI8B;AAAA;;;;AAJV,eAAAL,MAAA,GAAAA,MAAA;AAAwB,eAAAC,kBAAA,GAAAA,kBAAA;AAClC,eAAAC,WAAA,GAAAA,WAAA;AACD,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACC,eAAAC,QAAA,GAAAA,QAAA;AAvBV,eAAAC,eAAA,GAA0B,2FAA1B;AAEA,eAAAC,OAAA,GAAyB,EAAzB;AAGA,eAAAC,UAAA,GAAa,IAAIC,IAAJ,EAAb;AACA,eAAAC,OAAA,GAAU,IAAID,IAAJ,EAAV;AAIA,eAAAE,eAAA,GAAe,MAAWC,OAAO,CAACC,KAAnB,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAEF,eAAzC;AACA,eAAAG,QAAA,GAAW,CAAH,KAAGF,OAAO,CAACC,KAAR,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEC,QAA1B;AACA,eAAAC,mBAAA,GAAsB,CAAH,KAAGH,OAAO,CAACC,KAAR,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEE,mBAArC;AACA,eAAAC,kBAAA,GAAkB,MAAYJ,OAAO,CAACC,KAApB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEG,kBAA7C;AAKA,eAAAC,cAAA,GAA0B,KAA1B,CAK8B,CAC5B;;AACA,eAAKT,UAAL,CAAgBU,QAAhB,CAAyB,KAAKV,UAAL,CAAgBW,QAAhB,KAA6B,CAAtD;AACA,eAAKT,OAAL,CAAaU,QAAb,CAAsB,KAAKZ,UAAL,CAAgBa,QAAhB,KAA6B,CAAnD;AACD;;AA5B0B;AAAA;AAAA,iBA6B3B,oBAAW;AAET,iBAAKC,aAAL;AAEAC,mBAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0C,KAAKT,mBAA/C;AACA,gBAAI,KAAKJ,eAAL,IAAwB,CAA5B,EAA+B;AAC7B,mBAAKc,iBAAL,GADF,KAEK;AACH;AACA,kBAAG,KAAKd,eAAL,IAAwB,CAAxB,IAA6B,CAAC,KAAKV,kBAAL,CAAwByB,UAAzD,EACE,KAAKC,aAAL,GADF,KAEK,IAAG,KAAKZ,mBAAR,EACH,KAAKa,UAAL,GADG,KAGH,KAAKC,SAAL;AACH;AAEF;AA9C0B;AAAA;AAAA,iBAgD3B,yBAAgB;AAEd;AACA,oBAAQ,CAAC,KAAKlB,eAAd;AACE,mBAAK,CAAL;AACE,qBAAKmB,IAAL,GAAY,8CAAZ;AACA,qBAAKC,MAAL,GAAc,2BAAd;AACA,qBAAKC,KAAL,GAAa,oCAAb;AACA;;AACF,mBAAK,CAAL;AACET,uBAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6C,KAAKb,eAAlD,EAAmE,iBAAnE,EAAsF,KAAKG,QAA3F;AACA,qBAAKgB,IAAL,GAAY,wCAAZ;AACA,qBAAKC,MAAL,GAAc,qBAAd;AACA,qBAAKC,KAAL,GAAa,oCAAb;AACA;;AACF,mBAAK,CAAL;AACE,qBAAKF,IAAL,GAAY,KAAKhB,QAAL,GAAgB,0CAAhB,GAA6D,8CAAzE;AACA,qBAAKiB,MAAL,GAAc,KAAKjB,QAAL,GAAgB,qBAAhB,GAAwC,2BAAtD;AACA,qBAAKkB,KAAL,GAAa,oCAAb;AACA;;AACF;AACET,uBAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,KAAKb,eAAnD,EAAoE,iBAApE,EAAuF,KAAKG,QAA5F;AACA,qBAAKgB,IAAL,GAAY,8CAAZ;AACA,qBAAKC,MAAL,GAAc,2BAAd;AACA,qBAAKC,KAAL,GAAa,oCAAb;AArBJ;AAwBD;AA3E0B;AAAA;AAAA,iBA6E3B,6BAAiB;AAAA;;AACf,iBAAKC,eAAL,GAAuB3C,IAAvB,CAA4B,UAAC4C,GAAD,EAAsB;AAChD;AAEAX,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BU,GAA9B;AACA,mBAAI,CAACC,WAAL,GAAmBD,GAAnB;;AACA,kBAAI1B,UAAU,GAAG,KAAI,CAACL,QAAL,CAAciC,SAAd,CAAwB,KAAI,CAAC5B,UAA7B,EAAyC,YAAzC,CAAjB;;AACA,kBAAIE,OAAO,GAAG,KAAI,CAACP,QAAL,CAAciC,SAAd,CAAwB,KAAI,CAAC1B,OAA7B,EAAsC,YAAtC,CAAd;;AACAa,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAI,CAACW,WAAvC;AAEA,kBAAME,MAAM,GAAG;AACbC,yBAAS,EAAE9B,UADE;AAEb+B,uBAAO,EAAE7B,OAFI;AAGb8B,0BAAU,EAAE,KAAI,CAACL,WAAL,CAAiBK,UAHhB;AAIbC,yBAAS,EAAE,eAJE;AAKbC,wBAAQ,EAAE,KAAI,CAACP,WAAL,CAAiBO;AALd,eAAf;;AAOA,mBAAI,CAACzC,kBAAL,CAAwB0C,sBAAxB,CAA+CN,MAA/C,EAAuDO,SAAvD,CACA,UAAOC,IAAP;AAAA,uBAAuC;AAAA;AAAA;AAAA;AAAA;AACrCtB,iCAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CqB,IAAI,CAACC,MAA/C;AACA,+BAAKC,gBAAL,GAAwBF,IAAxB;AACA,+BAAKG,yBAAL;;AAHqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAvC;AAAA,eADA,EAOA,UAAOC,KAAP;AAAA,uBAAiB;AAAA;AAAA;AAAA;AAAA;AACf;AACA,+BAAK5C,QAAL,CAAc6C,IAAd;AAFe,gCAGTD,KAHS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAjB;AAAA,eAPA;;AAYF,mBAAI,CAACE,kBAAL;AACD,aA7BC,WA6BO,UAAAF,KAAK,EAAI;AAChB,mBAAI,CAAC5C,QAAL,CAAc6C,IAAd;;AACA,oBAAMD,KAAN;AACD,aAhCC;AAiCD,WA/G0B,CAiH3B;;AAjH2B;AAAA;AAAA,iBAkHrB,2BAAe;;;;;;;AACZ,6BAAM,KAAKhD,kBAAL,CAAwBgC,eAAxB,EAAN;;;;;;;;;;;;AACR;AApH0B;AAAA;AAAA,iBAwH3B,4BAAmB;AAAA;;AAEjB,iBAAKhC,kBAAL,CAAwBmD,cAAxB,GAAyCR,SAAzC,CACE,UAAOC,IAAP;AAAA,qBAA6B;AAAA;AAAA;AAAA;AAAA;AACzB,6BAAKV,WAAL,GAAmBU,IAAnB;AACAtB,+BAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BqB,IAA/B;;AAFyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA7B;AAAA,aADF,EAIK,UAAOI,KAAP;AAAA,qBAAgB;AAAA;AAAA;AAAA;AAAA;AACjB1B,+BAAO,CAACC,GAAR,CAAY,SAAZ,EAAuByB,KAAvB;AACA,6BAAK5C,QAAL,CAAc6C,IAAd;AAFiB,8BAGXD,KAHW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAhB;AAAA,aAJL;AAUD;AApI0B;AAAA;AAAA,iBAsIrB,8BAAqB;;;;;;;;;;;;AAK1B;AA3I0B;AAAA;AAAA,iBA6IrB,sBAAU;;;;;;;;;AAEd1B,6BAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CZ,OAAO,CAACC,KAAR,CAAcwC,MAA7D;AACIA,4B,GAASzC,OAAO,CAACC,KAAR,CAAcwC,M;AAC3B,2BAAKpD,kBAAL,CAAwBqD,kBAAxB,CAA2C,KAAKpD,WAAL,CAAiBqD,IAAjB,CAAsBC,KAAjE,EAAwEH,MAAM,CAACI,MAA/E,EAAuFb,SAAvF,CACE,UAAOC,IAAP;AAAA,+BAAqB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACnB,yCAAMA,IAAN;;AADmB;AAEnBtB,yCAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCqB,IAAtC;AACA,uCAAK5C,kBAAL,CAAwByD,SAAxB,GAAoCb,IAAI,CAACa,SAAzC;AACA,uCAAKzD,kBAAL,CAAwB0D,WAAxB,GAAsCd,IAAI,CAACc,WAA3C;AAEA,uCAAK1D,kBAAL,CAAwB4B,SAAxB,GAAoCe,SAApC,CACE,UAAOC,IAAP;AAAA,2CAA0B;AAAA;AAAA;AAAA;AAAA;AAExBtB,qDAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BqB,IAA7B,EAFwB,CAGxB;;AACA,mDAAKtC,OAAL,GAAesC,IAAf;AAJwB;AAMxB,qDAAM,KAAKe,iBAAL,EAAN;;AANwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAA1B;AAAA,mCADF;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAArB;AAAA,uBADF,EAgBK,UAAOX,KAAP;AAAA,+BAAiB;AAAA;AAAA;AAAA;AAAA;AAClB1B,yCAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCyB,KAAnC;AACA,uCAAK5C,QAAL,CAAc6C,IAAd;AAFkB,wCAGZD,KAHY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAjB;AAAA,uBAhBL;;;;;;;;;AAqBD;AAtK0B;AAAA;AAAA,iBAwKrB,qBAAY;;;;;;;;AAEhB,2BAAKhD,kBAAL,CAAwB4B,SAAxB,GAAoCe,SAApC,CACE,UAAOC,IAAP;AAAA,+BAA0B;AAAA;AAAA;AAAA;AAAA;AACxB;AACA,uCAAKtC,OAAL,GAAesC,IAAf;AAFwB;AAIxB,yCAAM,KAAKe,iBAAL,EAAN;;AAJwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA1B;AAAA,uBADF,GAOE,UAAOX,KAAP;AAAA,+BAAiB;AAAA;AAAA;AAAA;AAAA;AACf;AACA,uCAAK5C,QAAL,CAAc6C,IAAd;AAFe,wCAGTD,KAHS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAjB;AAAA,uBAPF;;;;;;;;;AAaD;AAvL0B;AAAA;AAAA,iBAyLrB,yBAAa;;;;;;;;AAEjB,2BAAKhD,kBAAL,CAAwB4D,GAAxB,CAA4B,gBAA5B,EAA8CjB,SAA9C,CACE,UAAOC,IAAP;AAAA,+BAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEd,yCAAMA,IAAN;;AAFc;AAAA,kDAIdtB,OAJc;AAAA;AAIgB,yCAAMsB,IAAN;;AAJhB;AAAA;;AAAA,gDAINrB,GAJM,qBAIF,gBAJE;;AAKd;AACA,sCAAGqB,IAAI,CAACiB,KAAL,IAAcjB,IAAI,CAACkB,IAAtB,EAA2B;AAEzB,yCAAK9D,kBAAL,CAAwB0D,WAAxB,GAAsCd,IAAI,CAACkB,IAAL,CAAUC,uBAAhD;AACA,yCAAK/D,kBAAL,CAAwByD,SAAxB,GAAoCb,IAAI,CAACkB,IAAL,CAAUE,eAA9C;AACA,yCAAKhE,kBAAL,CAAwBiE,UAAxB,GAAqCrB,IAAI,CAACkB,IAAL,CAAUI,gBAA/C;AACA,yCAAKlE,kBAAL,CAAwByB,UAAxB,GAAqCmB,IAArC;AACD;;AACD,uCAAKhB,SAAL;AACA,uCAAKZ,cAAL,GAAsB,KAAtB;;AAdc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAhB;AAAA,uBADF,EAkBE,UAAOgC,KAAP;AAAA,+BAAiB;AAAA;AAAA;AAAA;AAAA;AACf;AACA,uCAAK5C,QAAL,CAAc6C,IAAd;AAFe,wCAGTD,KAHS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAjB;AAAA,uBAlBF;;;;;;;;;AAuBD;AAlN0B;AAAA;AAAA,iBAmN3B,8BAAqB;AAAA;;AAEnB1B,mBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCZ,OAAO,CAACC,KAAR,CAAcwC,MAAlD;AACA,gBAAIA,MAAM,GAAGzC,OAAO,CAACC,KAAR,CAAcwC,MAA3B;AACA,mBAAO,KAAKpD,kBAAL,CAAwBqD,kBAAxB,CAA2C,KAAKpD,WAAL,CAAiBqD,IAAjB,CAAsBC,KAAjE,EAAwEH,MAAM,CAACI,MAA/E,EAAuFb,SAAvF,CACL,UAAOC,IAAP;AAAA,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnB,+BAAMA,IAAN;;AADmB;AAEnBtB,+BAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CqB,IAA9C;AACA,6BAAK5C,kBAAL,CAAwByD,SAAxB,GAAoCb,IAAI,CAACa,SAAzC;AACA,6BAAKzD,kBAAL,CAAwB0D,WAAxB,GAAsCd,IAAI,CAACc,WAA3C;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAArB;AAAA,aADK,EAMF,UAAOV,KAAP;AAAA,qBAAiB;AAAA;AAAA;AAAA;AAAA;AAClB;AACA,6BAAK5C,QAAL,CAAc6C,IAAd;AAFkB,8BAGZD,KAHY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjB;AAAA,aANE,CAAP;AAaD;AApO0B;AAAA;AAAA,iBAqOrB,6BAAoB;;;;;;;;;AACpBzC,gC,GAAa,KAAKL,QAAL,CAAciC,SAAd,CAAwB,KAAK5B,UAA7B,EAAyC,UAAzC,C;AACbE,6B,GAAU,KAAKP,QAAL,CAAciC,SAAd,CAAwB,KAAK1B,OAA7B,EAAsC,UAAtC,C;AAER0D,6B,GAAU,IAAI,6FAAJ,CAA8B,KAAKnE,kBAAL,CAAwByD,SAAtD,EAAiElD,UAAjE,EAA6EE,OAA7E,C;AAEhB,2BAAKT,kBAAL,CAAwBoE,qBAAxB,CAA8CD,OAA9C,EAAuDxB,SAAvD,CACE,UAAOC,IAAP;AAAA,+BAAsC;AAAA;AAAA;AAAA;AAAA;AAEpC;AACA,sCAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EACE,KAAKG,KAAL,GAAa,uCAAb,CADF,KAEK;AACH,yCAAKqB,SAAL,GAAiBzB,IAAjB;AAEA,wCAAI,KAAK0B,WAAL,KAAqBC,SAAzB,EACG,KAAKC,2BAAL;AACJ;;AAVmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAtC;AAAA,uBADF,EAcE,UAAOxB,KAAP;AAAA,+BAAiB;AAAA;AAAA;AAAA;AAAA;AACf;AACA,uCAAK5C,QAAL,CAAc6C,IAAd;AAFe,wCAGTD,KAHS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAjB;AAAA,uBAdF;;;;;;;;;AAmBD;AA9P0B;AAAA;AAAA,iBAgQ3B,sBAAa;AAEX;AACA,iBAAKhD,kBAAL,CAAwBsE,WAAxB,GAAsC,KAAKA,WAA3C;AAEA,iBAAKtE,kBAAL,CAAwBkC,WAAxB,GAAsC,KAAKA,WAA3C;;AACA,gBAAI,KAAKxB,eAAL,IAAwB,CAA5B,EAA+B;AAC7B;AACA,mBAAKV,kBAAL,CAAwB8C,gBAAxB,GAA2C,KAAKA,gBAAhD;AACD,aAHD,MAGO;AACL;AACA,mBAAK9C,kBAAL,CAAwBqE,SAAxB,GAAoC,KAAKA,SAAzC;AACD;;AAED,iBAAKtE,MAAL,CAAY0E,QAAZ,CAAqB,CAAC,0CAAD,CAArB,EAAmE;AAAE7D,mBAAK,EAAE;AAAEC,wBAAQ,EAAE,KAAKA,QAAjB;AAA2BH,+BAAe,EAAE,KAAKA,eAAjD;AAAkEI,mCAAmB,EAAE,KAAKA,mBAA5F;AAAiHsC,sBAAM,EAAEzC,OAAO,CAACC,KAAR,CAAcwC,MAAvI;AAA+IrC,kCAAkB,EAAE,KAAKA;AAAxK;AAAT,aAAnE;AACD;AA/Q0B;AAAA;AAAA,iBAiR3B,uCAA8B;AAAA;;AAE5BO,mBAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,gBAAImD,gBAAJ;AACA,gBAAIC,OAAJ,CAJ4B,CAK5B;;AACA,iBAAKN,SAAL,CAAeO,KAAf,CAAqB,UAACC,OAAD,EAAa;AAEhC;AACA,kBAAIC,OAAO,GAAG,uBAAd;AACA,kBAAIC,OAAO,GAAG,IAAIvE,IAAJ,CAASqE,OAAO,CAACjC,IAAR,CAAaoC,OAAb,CAAqBF,OAArB,EAA8B,UAA9B,CAAT,CAAd,CAJgC,CAMhC;;AACAD,qBAAO,CAACI,OAAR,CAAgBL,KAAhB,CAAsB,UAACM,IAAD,EAAU;AAE9B;AACA,oBAAIA,IAAI,CAACC,UAAT,EAAqB;AAEnBT,kCAAgB,GAAG,IAAIlE,IAAJ,CAASuE,OAAT,CAAnB,CAFmB,CAGnB;;AACAL,kCAAgB,CAACzD,QAAjB,CAA0BmE,QAAQ,CAACF,IAAI,CAACG,IAAL,CAAUC,SAAV,CAAoB,CAApB,EAAuB,CAAvB,CAAD,CAAlC;AACAZ,kCAAgB,CAACa,UAAjB,CAA4BH,QAAQ,CAACF,IAAI,CAACG,IAAL,CAAUC,SAAV,CAAoB,CAApB,EAAuB,CAAvB,CAAD,CAApC,EALmB,CAOnB;;AACAX,yBAAO,GAAG,IAAInE,IAAJ,CAASkE,gBAAT,CAAV;AACAC,yBAAO,CAACY,UAAR,CAAmBb,gBAAgB,CAACc,UAAjB,KAAgC,EAAnD,EATmB,CAWnB;;AACA,wBAAI,CAAClB,WAAL,GAAmBI,gBAAnB,CAZmB,CAcnB;;AAEA,yBAAO,KAAP;AACD;AACF,eArBD;AAsBD,aA7BD;AA8BD;AArT0B;AAAA;AAAA,iBAuT3B,qCAA4B;AAC1B,gBAAIA,gBAAJ;AACA,gBAAIC,OAAJ;AACA,gBAAIc,IAAI,GAAG,KAAX,CAH0B,CAI1B;AACA;;AAL0B,uDAON,KAAK3C,gBAPC;AAAA;;AAAA;AAO1B,kEAA2C;AAAA,oBAAlC+B,OAAkC;AAEzC;AACA,oBAAIC,OAAO,GAAG,uBAAd;AACA,oBAAIC,OAAO,GAAG,IAAIvE,IAAJ,CAASqE,OAAO,CAACa,IAAjB,CAAd,CAJyC,CAMzC;AACA;;AAPyC,4DAQxBb,OAAO,CAACc,SARgB;AAAA;;AAAA;AAQzC,yEAAoC;AAAA,wBAA3BT,IAA2B;;AAClC;AACA,wBAAIA,IAAI,CAACU,YAAT,EAAuB;AACrB;AAEAlB,sCAAgB,GAAG,IAAIlE,IAAJ,CAASuE,OAAT,CAAnB,CAHqB,CAIrB;;AACAL,sCAAgB,CAACzD,QAAjB,CAA0BmE,QAAQ,CAACF,IAAI,CAACW,QAAL,CAAcP,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,CAAD,CAAlC;AACAZ,sCAAgB,CAACa,UAAjB,CAA4BH,QAAQ,CAACF,IAAI,CAACW,QAAL,CAAcP,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,CAAD,CAApC,EANqB,CAQrB;;AACAX,6BAAO,GAAG,IAAInE,IAAJ,CAASkE,gBAAT,CAAV;AACAC,6BAAO,CAACY,UAAR,CAAmBb,gBAAgB,CAACc,UAAjB,KAAgC,EAAnD,EAVqB,CAYrB;;AACA,2BAAKlB,WAAL,GAAmBI,gBAAnB;AAEApD,6BAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,KAAK+C,WAAL,CAAiBwB,kBAAjB,CAAoC,OAApC,CAApC,EAAkF,uDAAlF,EAA2I,KAAKxB,WAAL,CAAiByB,kBAAjB,EAA3I,EAfqB,CAiBrB;;AACAN,0BAAI,GAAG,IAAP;AACA;AACD;AACF;AA/BwC;AAAA;AAAA;AAAA;AAAA;;AAgCzC,oBAAIA,IAAJ,EAAU;AACR;AACD;AACF;AA1CyB;AAAA;AAAA;AAAA;AAAA;AA2C3B;AAlW0B;AAAA;AAAA,iBAoWrB,2BAAkB;;;;;;;;;AACtB,2BAAKzF,kBAAL,CAAwBsE,WAAxB,GAAsC,KAAKA,WAA3C,C,CAEA;;AACA,0BAAI,KAAK5D,eAAL,IAAwB,CAA5B,EAA+B;AAC7B,6BAAKV,kBAAL,CAAwBkC,WAAxB,GAAsC,KAAKA,WAA3C;AACA,6BAAKnC,MAAL,CAAY0E,QAAZ,CAAqB,CAAC,6CAAD,CAArB,EAAsE;AAAE7D,+BAAK,EAAE;AAAEC,oCAAQ,EAAE,KAAKA,QAAjB;AAA2BH,2CAAe,EAAE,KAAKA,eAAjD;AAAkEI,+CAAmB,EAAE,KAAKA,mBAA5F;AAAiHsC,kCAAM,EAAEzC,OAAO,CAACC,KAAR,CAAcwC,MAAvI;AAA+IrC,8CAAkB,EAAE,KAAKA;AAAxK;AAAT,yBAAtE;AACD,uBAHD,MAGO;AACL,6BAAKC,cAAL,GAAsB,IAAtB;AACI0E,4BAFC,GAEM,KAAKxF,QAAL,CAAciC,SAAd,CAAwB,KAAKnC,kBAAL,CAAwBsE,WAAhD,EAA6D,UAA7D,CAFN;AAGD0B,4BAHC,GAGM,KAAK9F,QAAL,CAAciC,SAAd,CAAwB,KAAKnC,kBAAL,CAAwBsE,WAAhD,EAA6D,MAA7D,CAHN,EAKL;;AACI2B,gCANC,GAMU,KAAKvF,eAAL,IAAwB,CAAxB,GAA4B,CAAD,KAAC,KAAKV,kBAAL,CAAwByB,UAAxB,MAAkC,IAAlC,IAAkC,aAAlC,GAAkC,MAAlC,GAAkC,GAAEoC,KAAF,CAAQqC,EAAtE,GAA2E,EANrF;AAOL5E,+BAAO,CAACC,GAAR,CAAY,yBAAZ,EAAwC,KAAKb,eAA7C;AAEAY,+BAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B0E,QAA1B,EATK,CAWL;;AACA,6BAAKE,eAAL,CAAqBT,IAAI,GAAGM,IAA5B,EAAkCC,QAAlC;AACD;;;;;;;;;AACF;AAzX0B;AAAA;AAAA,iBA2X3B,yBAAgBP,IAAhB,EAAsBO,QAAtB,EAAgC;AAAA;;AAE9B,mBAAO,KAAKjG,kBAAL,CAAwBoG,eAAxB,CAAwC,KAAKnG,WAAL,CAAiBsD,KAAzD,EAAgEmC,IAAhE,EAAsE,KAAK7E,QAA3E,EAAqF,KAAKH,eAA1F,EAA2G,EAA3G,EAA+G,EAA/G,EAAmHuF,QAAnH,EAA6HtD,SAA7H,CACL,UAAOV,GAAP;AAAA,qBAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AACtCX,+BAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCU,GAAG,CAACoE,KAApC;AAEA,6BAAKC,OAAL,GAAerE,GAAG,CAACoE,KAAnB;AACA,6BAAKrG,kBAAL,CAAwBsG,OAAxB,GAAkCrE,GAAG,CAACoE,KAAtC;;AAEA,4BAAI,KAAKvF,mBAAT,EAA8B;AACxByF,6CADwB,GACO5F,OAAO,CAACC,KAAR,CAAcwC,MADrB;AAE5B,+BAAKoD,yBAAL,CAA+BD,mBAA/B;AACD,yBAHD,MAGK;AACH,+BAAKxG,MAAL,CAAY0E,QAAZ,CAAqB,CAAC,2CAAD,CAArB,EAAoE;AAAE7D,iCAAK,EAAE;AAAEC,sCAAQ,EAAE,KAAKA,QAAjB;AAA2BH,6CAAe,EAAE,KAAKA,eAAjD;AAAkEI,iDAAmB,EAAE,KAAKA,mBAA5F;AAAiHsC,oCAAM,EAAEzC,OAAO,CAACC,KAAR,CAAcwC;AAAvI;AAAT,2BAApE;AACD;;AAXqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAxC;AAAA,aADK,EAaL,UAAOJ,KAAP;AAAA,qBAAiB;AAAA;AAAA;AAAA;AAAA;AACf,6BAAKhC,cAAL,GAAsB,KAAtB;AACAM,+BAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCyB,KAAxC;;AAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjB;AAAA,aAbK,EAiBL,YAAI,CAAE,CAjBD,CAAP;AAkBD;AA/Y0B;AAAA;AAAA,iBAiZ3B,mCAA0BuD,mBAA1B,EAA+C;AAAA;;AAC7CjF,mBAAO,CAACC,GAAR,CAAY,6CAAZ,EAA2D,KAAKb,eAAhE;AAEE,mBAAO,KAAKV,kBAAL,CAAwByG,iBAAxB,CAA0C,KAAKxG,WAAL,CAAiBsD,KAA3D,EAAkEgD,mBAAmB,CAAC/C,MAAtF,EAA8F,KAAK9C,eAAnG,EAAoH6F,mBAApH,EAAyI5D,SAAzI,CACL,UAAOC,IAAP;AAAA,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAEnBtB,+BAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,6BAAKmF,sBAAL,CAA4BH,mBAAmB,CAACL,EAAhD;;AAHmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAArB;AAAA,aADK,EAMF,UAAOlD,KAAP;AAAA,qBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,wCAElB1B,OAFkB;AAAA;AAEI,+BAAM0B,KAAN;;AAFJ;AAAA;;AAAA,sCAEVzB,GAFU,qBAEN,QAFM;;AAGlB,6BAAKnB,QAAL,CAAc6C,IAAd;AAHkB,8BAIdD,KAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjB;AAAA,aANE,CAAP;AAaH;AAja0B;AAAA;AAAA,iBAma3B,gCAAuBkD,EAAvB,EAAyB;AAAA;;AACvB,mBAAO,KAAKlG,kBAAL,CAAwB0G,sBAAxB,CAA+CR,EAA/C,EAAmDvD,SAAnD,CACL,UAAOC,IAAP;AAAA,qBAAqB;AAAA;AAAA;AAAA;AAAA;AACnBtB,+BAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CqB,IAA9C;AAEA,6BAAK7C,MAAL,CAAY0E,QAAZ,CAAqB,CAAC,2CAAD,CAArB,EAAoE;AAAE7D,+BAAK,EAAE;AAAEC,oCAAQ,EAAE,KAAKA,QAAjB;AAA2BH,2CAAe,EAAE,KAAKA,eAAjD;AAAkEI,+CAAmB,EAAE,KAAKA,mBAA5F;AAAiHsC,kCAAM,EAAEzC,OAAO,CAACC,KAAR,CAAcwC;AAAvI;AAAT,yBAApE;AAHmB,2DAKZR,IALY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAArB;AAAA,aADK,CAAP;AASD;AA7a0B;;AAAA;AAAA,S;;;;gBAdpB;;gBACA;;gBACA;;gBAJA;;gBAMA;;gBAGA;;;;AAOI9C,sBAAgB,6DAN5B,gEAAU;AACT6G,gBAAQ,EAAE,kBADD;AAETC,gBAAQ,EAAR,0EAFS;AAITC,iBAAS,EAAE,CAAC,wDAAD,CAJF;;AAAA,OAAV,CAM4B,GAAhB/G,gBAAgB,CAAhB;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCwBFgH,sBAAsB;AAAA;AAAA,O;;AAAtBA,4BAAsB,6DAXlC,+DAAS;AACRnH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,0FAJO,EAKP,mEALO,EAMP,qFANO,CADD;AASRoH,oBAAY,EAAE,CAAC,mEAAD;AATN,OAAT,CAWkC,GAAtBD,sBAAsB,CAAtB","file":"appointments-appointments-module-es5.js","sourcesContent":["export default \"ion-content {\\n  --background: none;\\n  background-position: center top;\\n  background-repeat: no-repeat !important;\\n  background-size: cover !important;\\n}\\n\\nion-card {\\n  border-radius: 0%;\\n  border-bottom: 2pt solid #006488;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2FwcG9pbnRtZW50cy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBQTtFQUNBLCtCQUFBO0VBQ0EsdUNBQUE7RUFDQSxpQ0FBQTtBQUNGOztBQUNBO0VBQ0UsaUJBQUE7RUFDQSxnQ0FBQTtBQUVGIiwiZmlsZSI6ImFwcG9pbnRtZW50cy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XG4gIC0tYmFja2dyb3VuZDogbm9uZTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHRvcDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdCAhaW1wb3J0YW50O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyICFpbXBvcnRhbnQ7XG59XG5pb24tY2FyZHtcbiAgYm9yZGVyLXJhZGl1czogMCU7XG4gIGJvcmRlci1ib3R0b206IDJwdCBzb2xpZCAjMDA2NDg4O1xuXG59XG5cbiJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppointmentsPage } from './appointments.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppointmentsPage\n  },\n  {\n    path: 'agenda',\n    loadChildren: () => import('../agenda/agenda.module').then( m => m.AgendaPageModule)\n  },\n  {\n    path: 'success',\n    loadChildren: () => import('./success/success.module').then( m => m.SuccessPageModule)\n  },\n  {\n    path: 'videocall',\n    loadChildren: () => import('../videocalls/videocalls.module').then( m => m.VideocallsPageModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppointmentsPageRoutingModule {}\n","import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppointmentService } from 'src/app/services/appointment.service';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Agenda, AgendaAvailability, AgendaAvailabilityRequest, AppointmentConfirmation, AppointmentDetail, IAgenda, ITeladocUser, TeladocAvailability, TeladocCredentials, TeladocUser } from 'src/app/shared/classes/appointments';\nimport { AlertController } from '@ionic/angular';\nimport { getRandomBackground } from 'src/app/shared/classes/utils';\nimport { throwError } from 'rxjs';\nimport { Location } from '@angular/common';\n@Component({\n  selector: 'app-appointments',\n  templateUrl: './appointments.page.html',\n  styleUrls: ['./appointments.page.scss'],\n  providers: [DatePipe]\n})\nexport class AppointmentsPage implements OnInit {\n  backgroundImage: string = getRandomBackground();\n  error: any;\n  agendas: Array<Agenda> = [];\n  schedules: Array<AgendaAvailability>\n  teladocSchedules: Array<TeladocAvailability>;\n  data_inici = new Date();\n  data_fi = new Date();\n  appointment: Date;\n  booking: AppointmentDetail;\n  teladocUser: TeladocUser;\n  appointmentType: number = history.state?.appointmentType;\n  isOnline = history.state?.isOnline;\n  isAppointmentChange = history.state?.isAppointmentChange;\n  fromSymptonChecker: boolean = history.state?.fromSymptonChecker;\n  teladocCredentials: TeladocCredentials;\n  icon: string;\n  infor: string;\n  header: string;\n  showProcessing: boolean = false;\n  constructor(private router: Router, private appointmentService: AppointmentService,\n    private authService: AuthenticationService,\n    public datepipe: DatePipe,\n    public alertController: AlertController,\n    private location: Location) {\n    // Look for appointments between the next 2 hours and 2 months\n    this.data_inici.setHours(this.data_inici.getHours() + 2);\n    this.data_fi.setMonth(this.data_inici.getMonth() + 2);\n  }\n  ngOnInit() {\n    \n    this.setPageHeader();\n    \n    console.log('this.isAppointmentChange: ', this.isAppointmentChange);\n    if (this.appointmentType == 6) // Teladoc\n      this.getTeladocAgenda2();\n    else {\n      // MGC or Medico Tutor\n      if(this.appointmentType == 7 && !this.appointmentService.metgeTutor)\n        this.getMetgeTutor();\n      else if(this.isAppointmentChange)\n        this.editAgenda();\n      else\n        this.getAgenda();\n    }\n      \n  }\n\n  setPageHeader() {\n\n    // Set headers and icons \n    switch (+this.appointmentType) {\n      case 5:\n        this.icon = '../../assets/icons/i_consulta_presencial.svg';\n        this.header = 'appointments.face-to-face';\n        this.infor = '../../assets/icons/interrogant.svg';\n        break;\n      case 6:\n        console.log('this.appointmentType case 6: ', this.appointmentType, 'this is online:', this.isOnline)\n        this.icon = '../../assets/icons/i_videoconsulta.svg';\n        this.header = 'appointments.online';\n        this.infor = '../../assets/icons/interrogant.svg';\n        break;\n      case 7:\n        this.icon = this.isOnline ? '../../assets/icons/i_consulta_online.svg' : '../../assets/icons/i_consulta_presencial.svg';\n        this.header = this.isOnline ? 'appointments.online' : 'appointments.face-to-face';\n        this.infor = '../../assets/icons/interrogant.svg';\n        break;\n      default:\n        console.log('this.appointmentType DEFAULT: ', this.appointmentType, 'this is online:', this.isOnline)\n        this.icon = '../../assets/icons/i_consulta_presencial.svg';\n        this.header = 'appointments.face-to-face';\n        this.infor = '../../assets/icons/interrogant.svg';\n    }\n\n  }\n\n  getTeladocAgenda2(){\n    this.getTeladocUser2().then((res: TeladocUser) => {\n      // here you will have your `rs`\n      \n      console.log('ITeladocUser: ', res);\n      this.teladocUser = res;\n      let data_inici = this.datepipe.transform(this.data_inici, 'YYYY-MM-dd');\n      let data_fi = this.datepipe.transform(this.data_fi, 'YYYY-MM-dd');\n      console.log('this.teladocUser: ', this.teladocUser);\n\n      const params = {\n        date_from: data_inici,\n        date_to: data_fi,\n        project_id: this.teladocUser.project_id,\n        time_zone: \"Europe/Madrid\",\n        language: this.teladocUser.language\n      }\n      this.appointmentService.getTeladocAvailability(params).subscribe(\n      async (data: TeladocAvailability[]) => {\n        console.log(\"2 getTeladocAvailability: \", data.length)\n        this.teladocSchedules = data;\n        this.getNextTeladocAppointment();\n\n      },\n      async (error) => {\n        // Called when error\n        this.location.back();\n        throw error;\n      });\n    this.getTeladocSchedule();\n  }).catch(error => {\n    this.location.back();\n    throw error;\n  });\n  }\n\n  // Function Definition (using async/await as demonstration)\n  async getTeladocUser2(): Promise<TeladocUser> {\n    return await this.appointmentService.getTeladocUser2();\n  }\n\n\n\n  getTeladocAgenda() {\n\n    this.appointmentService.getTeladocUser().subscribe(\n      async (data: TeladocUser) => {\n          this.teladocUser = data;\n          console.log(\"1 teladocUser: \", data)\n      }, async (error) =>{ \n        console.log(\"ERROR: \", error)\n        this.location.back();\n        throw error;\n       \n      });\n  }\n\n  async getTeladocSchedule() {\n\n    \n\n  \n  }\n\n  async editAgenda(){\n    \n    console.log(\"getAppointmentInfo for agenda: \", history.state.agenda);\n    let agenda = history.state.agenda;\n    this.appointmentService.getAppointmentInfo(this.authService.user.mutua, agenda.ext_id).subscribe(\n      async (data: any) => {\n        await data;\n        console.log(\"1 getAppointmentInfo: \", data);\n        this.appointmentService.id_agenda = data.id_agenda;\n        this.appointmentService.codi_servei = data.codi_servei;\n\n        this.appointmentService.getAgenda().subscribe(\n          async (data: Agenda[]) => {\n\n            console.log('2 getAgenda: ', data);\n            // Wait for Provider's Agenda\n            this.agendas = data;\n    \n            await this.getAgendaSchedule();\n          });\n      }, async (error) => {\n        console.log(\"EDIT AGENDA ERROR: \", error)\n        this.location.back();\n        throw error;\n      });\n  }\n\n  async getAgenda() {\n\n    this.appointmentService.getAgenda().subscribe(\n      async (data: Agenda[]) => {\n        // Wait for Provider's Agenda\n        this.agendas = data;\n\n        await this.getAgendaSchedule();\n      }),\n      async (error) => {\n        // Called when error\n        this.location.back();\n        throw error;\n      } \n      ;\n  }\n\n  async getMetgeTutor(){\n   \n    this.appointmentService.get('mgc/metgetutor').subscribe(\n      async (data) => {\n      \n        await data;\n      \n        console.log('mgc/metgetutor', await data);\n        // Validates metgetutor is assigned\n        if(data.tutor && data.meta){\n         \n          this.appointmentService.codi_servei = data.meta.metge_codi_especialitat;\n          this.appointmentService.id_agenda = data.meta.metge_id_agenda;\n          this.appointmentService.tractament = data.meta.metge_tractament;\n          this.appointmentService.metgeTutor = data;\n        }\n        this.getAgenda();\n        this.showProcessing = false;\n        \n      },\n      async (error) => {\n        // Called when error\n        this.location.back();\n        throw error;\n      });\n  }\n  getAppointmentInfo() {\n\n    console.log(\"getAppointmentInfo: \", history.state.agenda);\n    let agenda = history.state.agenda;\n    return this.appointmentService.getAppointmentInfo(this.authService.user.mutua, agenda.ext_id).subscribe(\n      async (data: any) => {\n        await data;\n        console.log(\"isAppointmentChange response: \", data);\n        this.appointmentService.id_agenda = data.id_agenda;\n        this.appointmentService.codi_servei = data.codi_servei;\n      }, async (error) => {\n        // Called when error\n        this.location.back();\n        throw error;\n      });\n\n\n  }\n  async getAgendaSchedule() {\n    let data_inici = this.datepipe.transform(this.data_inici, 'YYYYMMdd');\n    let data_fi = this.datepipe.transform(this.data_fi, 'YYYYMMdd');\n\n    const request = new AgendaAvailabilityRequest(this.appointmentService.id_agenda, data_inici, data_fi);\n\n    this.appointmentService.getAgendaAvailability(request).subscribe(\n      async (data: AgendaAvailability[]) => {\n\n        // Provider's availability for the next 2 months\n        if (data.length < 1)\n          this.error = \"Ho sentim, no hi ha cites disponibles\";\n        else {\n          this.schedules = data;\n\n          if (this.appointment === undefined)\n             this.getNextAvailableAppointment();\n        }\n\n      },\n      async (error) => {\n        // Called when error\n        this.location.back();\n        throw error;\n      });\n  }\n\n  changeDate() {\n\n    //console.log(\"this.appointmentType\", this.appointmentType);\n    this.appointmentService.appointment = this.appointment;\n\n    this.appointmentService.teladocUser = this.teladocUser;\n    if (this.appointmentType == 6) {\n      //console.log(\"teladocAppointment\");\n      this.appointmentService.teladocSchedules = this.teladocSchedules;\n    } else {\n      //console.log(\"mgc|metge-tutor appointment\");\n      this.appointmentService.schedules = this.schedules\n    }\n\n    this.router.navigate(['/app/home/healthcare/appointments/agenda'], { state: { isOnline: this.isOnline, appointmentType: this.appointmentType, isAppointmentChange: this.isAppointmentChange, agenda: history.state.agenda, fromSymptonChecker: this.fromSymptonChecker } });\n  }\n\n  getNextAvailableAppointment() {\n\n    console.log('3 getNextAvailableAppointment')\n    var next_appointment: Date;\n    var endTime: Date;\n    // Iterate for each day\n    this.schedules.every((element) => {\n\n      // convert API date to format YYYY-MM-DD\n      var pattern = /(\\d{4})(\\d{2})(\\d{2})/;\n      var current = new Date(element.data.replace(pattern, '$1-$2-$3'));\n\n      // Iterate for each available hour\n      element.horaris.every((item) => {\n\n        // Check if it's available\n        if (item.disponible) {\n\n          next_appointment = new Date(current);\n          // Time format response is \"HHMM\", so we extracts HH and MM\n          next_appointment.setHours(parseInt(item.hora.substring(0, 2)));\n          next_appointment.setMinutes(parseInt(item.hora.substring(2, 4)));\n\n          // Set end time 15 minutes after start time\n          endTime = new Date(next_appointment);\n          endTime.setMinutes(next_appointment.getMinutes() + 15);\n\n          // Add the time slot to calendar events array\n          this.appointment = next_appointment;\n\n          //console.log(\"FirstAvailableDate: \", this.appointment.toLocaleDateString('es-ES'), \" <- getDate().toLocaleString() -> toLocaleTimeString:\", this.appointment.toLocaleTimeString());\n\n          return false;\n        }\n      });\n    });\n  }\n\n  getNextTeladocAppointment() {\n    var next_appointment: Date;\n    var endTime: Date;\n    var flag = false;\n    // Iterate for each day\n    //console.log(\"this.teladocSchedules: \", this.teladocSchedules);\n\n    for (let element of this.teladocSchedules) {\n\n      // convert API date to format YYYY-MM-DD\n      var pattern = /(\\d{4})(\\d{2})(\\d{2})/;\n      var current = new Date(element.date);\n\n      // Iterate for each available hour\n      //console.log('entry', element.date)\n      for (let item of element.day_slots) {\n        //console.log('entry', item.availability);\n        if (item.availability) {\n          // Check if it's available\n\n          next_appointment = new Date(current);\n          // Time format response is \"HHMM\", so we extracts HH and MM\n          next_appointment.setHours(parseInt(item.time_ini.substring(0, 2)));\n          next_appointment.setMinutes(parseInt(item.time_ini.substring(3, 5)));\n\n          // Set end time 15 minutes after start time\n          endTime = new Date(next_appointment);\n          endTime.setMinutes(next_appointment.getMinutes() + 15);\n\n          // Add the time slot to calendar events array\n          this.appointment = next_appointment;\n\n          console.log(\"FirstAvailableDate: \", this.appointment.toLocaleDateString('es-ES'), \" <- getDate().toLocaleString() -> toLocaleTimeString:\", this.appointment.toLocaleTimeString());\n\n          //console.log(\"FOUND\");\n          flag = true;\n          break;\n        }\n      }\n      if (flag) {\n        break;\n      }\n    }\n  }\n\n  async makeAppointment() {\n    this.appointmentService.appointment = this.appointment;\n\n    // Teladoc appointmentType = 6\n    if (this.appointmentType == 6) {\n      this.appointmentService.teladocUser = this.teladocUser;\n      this.router.navigate(['/app/home/healthcare/appointments/videocall'], { state: { isOnline: this.isOnline, appointmentType: this.appointmentType, isAppointmentChange: this.isAppointmentChange, agenda: history.state.agenda, fromSymptonChecker: this.fromSymptonChecker} });\n    } else {\n      this.showProcessing = true;\n      let date = this.datepipe.transform(this.appointmentService.appointment, \"yyyyMMdd\");\n      let time = this.datepipe.transform(this.appointmentService.appointment, \"HHmm\");\n\n      // Iff appointment is with metge tutor (7), assign staff_id\n      let staff_id = this.appointmentType == 7 ? this.appointmentService.metgeTutor?.tutor.id : \"\";\n      console.log(\" this.appointmentType: \",  this.appointmentType);\n     \n      console.log(\"staff_id: \", staff_id);\n\n      // save apointment\n      this.saveAppointment(date + time, staff_id)\n    }\n  }\n\n  saveAppointment(date, staff_id) {\n\n    return this.appointmentService.bookAppointment(this.authService.mutua, date, this.isOnline, this.appointmentType, \"\", \"\", staff_id).subscribe(\n      async (res: AppointmentConfirmation) => {\n        console.log(\"Appointment OK: \", res.dades);\n\n        this.booking = res.dades;\n        this.appointmentService.booking = res.dades;\n\n        if (this.isAppointmentChange) {\n          let previousAppointment: IAgenda = history.state.agenda;\n          this.deletePreviousAppointment(previousAppointment);\n        }else{\n          this.router.navigate(['/app/home/healthcare/appointments/success'], { state: { isOnline: this.isOnline, appointmentType: this.appointmentType, isAppointmentChange: this.isAppointmentChange, agenda: history.state.agenda} });\n        }},\n      async (error) => {\n        this.showProcessing = false;\n        console.log(\"** ERROR saveAppointment\", error);\n      }, \n      ()=>{});\n  }\n\n  deletePreviousAppointment(previousAppointment) {\n    console.log(\"deletePreviousAppointment appointmentType: \", this.appointmentType);\n\n      return this.appointmentService.deleteAppointment(this.authService.mutua, previousAppointment.ext_id, this.appointmentType, previousAppointment).subscribe(\n        async (data: any) => {\n          \n          console.log(\"1 - deleted appointment MGC\");\n          this.deleteAppointmentDoole(previousAppointment.id);\n          \n        }, async (error) => {\n          // Called when error\n          console.log(\"error:\", await error);\n          this.location.back();\n        throw error;\n        });\n    \n  }\n\n  deleteAppointmentDoole(id){\n    return this.appointmentService.deleteAppointmentDoole(id).subscribe(\n      async (data: any) => {\n        console.log(\"2 - deleted appointment doole \", data);\n       \n        this.router.navigate(['/app/home/healthcare/appointments/success'], { state: { isOnline: this.isOnline, appointmentType: this.appointmentType, isAppointmentChange: this.isAppointmentChange, agenda: history.state.agenda} });\n    \n        return data;\n\n      });\n  }\n}\n","export default \"<custom-header></custom-header>\\n<ion-content class=\\\"back\\\" [ngStyle]=\\\"{'background': 'url(' + backgroundImage + ')'}\\\" fullscreen>\\n  <page-header title=\\\"{{this.header | translate}}\\\" icon=\\\"{{this.icon}}\\\" info=\\\"{{ 'appointments.info' | translate}}\\\" >\\n  </page-header>\\n  <div class=\\\"main-container\\\">\\n    <ng-container *ngIf=\\\"this.showProcessing else showSchedule\\\">\\n      <div style=\\\"margin: 20px 40px; text-align: center;\\\">\\n        <ion-spinner></ion-spinner>\\n        <p>\\n          <b>{{ 'appointments.save' | translate }}</b>\\n        </p>\\n      </div>\\n    </ng-container>\\n    <ng-template #showSchedule>\\n      <ng-container *ngIf=\\\"!this.appointment && !this.error\\\">\\n        <div style=\\\"margin: 20px 40px; text-align: center;\\\">\\n          <ion-spinner></ion-spinner>\\n          <p>\\n            <b>{{ 'appointments.fetching' | translate }}</b>\\n          </p>\\n        </div>\\n      </ng-container>\\n    \\n      <ng-container *ngIf=\\\"appointment && !error\\\">\\n      \\n        <p>{{ 'appointments.availability' | translate }}</p>\\n      \\n      <div *ngIf=\\\"appointmentType==6; else elseBlock\\\"> \\n    \\n          <ion-card>\\n            <ion-card-content style=\\\"text-align: center;\\\">\\n            <ion-card-title>{{ appointment.toLocaleDateString('es-ES',{ hour12: false }) + \\\",\\\" }} {{  appointment.toLocaleTimeString([], {hour12: false , hour: '2-digit', minute:'2-digit'}) + \\\" h\\\" }}</ion-card-title>\\n            <ion-card-header>\\n              <h3>{{'appointments.general-speciality'| translate }}</h3>\\n            </ion-card-header>\\n              \\n          </ion-card-content>\\n        </ion-card>\\n      </div>\\n      \\n        <ng-template #elseBlock>\\n          <ion-card *ngFor=\\\"let agenda of agendas\\\">\\n          <ion-card-content style=\\\"text-align: center;\\\">\\n            <ion-card-title> {{ appointment.toLocaleDateString('es-ES',{ hour12: false }) + \\\",\\\" }} {{  appointment.toLocaleTimeString([], { hour12: false, hour: '2-digit', minute:'2-digit'}) + \\\" h\\\" }}</ion-card-title>\\n            <ion-card-header>\\n           \\n              <h3>{{'appointments.speciality'| translate }} {{ this.agenda.servei_nom}}</h3>\\n              {{ this.agenda.centre_telefon }}\\n            </ion-card-header>\\n            </ion-card-content>\\n          </ion-card>\\n    \\n        </ng-template>\\n       \\n        <ion-row style=\\\"margin-top: -4%; margin-left: 2%; margin-right: 2%;\\\">\\n          <ion-col size=\\\"6\\\" style=\\\"text-align: left;\\\"><ion-button (click)=\\\"changeDate()\\\">{{ 'appointments.calendar' | translate | uppercase}}</ion-button></ion-col>\\n          <ion-col size=\\\"6\\\" style=\\\"text-align: right;\\\"><ion-button (click)=\\\"makeAppointment()\\\">{{ 'appointments.book' | translate | uppercase}}</ion-button></ion-col>\\n        </ion-row>\\n       \\n      </ng-container>\\n    \\n      <ng-container *ngIf=\\\"this.error\\\">\\n      <div style=\\\"margin: 20px 40px; text-align: center;\\\">\\n        <p>\\n          <b>{{ this.error | translate }}</b>\\n        </p>\\n      </div>\\n      </ng-container>\\n    </ng-template>\\n \\n</div> \\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AppointmentsPageRoutingModule } from './appointments-routing.module';\n\nimport { AppointmentsPage } from './appointments.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AppointmentsPageRoutingModule,\n    TranslateModule,\n    ComponentsModule\n  ],\n  declarations: [AppointmentsPage]\n})\nexport class AppointmentsPageModule {}\n"]}