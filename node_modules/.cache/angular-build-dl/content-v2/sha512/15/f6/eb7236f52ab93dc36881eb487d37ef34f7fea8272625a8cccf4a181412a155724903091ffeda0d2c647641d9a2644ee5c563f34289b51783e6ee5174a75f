(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["pages-landing-password-password-module"],{

/***/ "19V/":
/*!***********************************************************!*\
  !*** ./src/app/pages/landing/password/password.page.scss ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXNzd29yZC5wYWdlLnNjc3MifQ== */");

/***/ }),

/***/ "6UXn":
/*!***********************************************************!*\
  !*** ./src/app/pages/landing/password/password.module.ts ***!
  \***********************************************************/
/*! exports provided: PasswordPageModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PasswordPageModule", function() { return PasswordPageModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ionic/angular */ "TEn/");
/* harmony import */ var _password_page__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./password.page */ "J08K");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "sYmb");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _firebase_auth_firebase_auth_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../firebase/auth/firebase-auth.service */ "Oc4o");
/* harmony import */ var src_app_components_components_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/components/components.module */ "j1ZV");










const routes = [
    {
        path: '',
        component: _password_page__WEBPACK_IMPORTED_MODULE_5__["PasswordPage"]
    }
];
let PasswordPageModule = class PasswordPageModule {
};
PasswordPageModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
            _ionic_angular__WEBPACK_IMPORTED_MODULE_4__["IonicModule"],
            _angular_router__WEBPACK_IMPORTED_MODULE_7__["RouterModule"].forChild(routes),
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"],
            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateModule"],
            src_app_components_components_module__WEBPACK_IMPORTED_MODULE_9__["ComponentsModule"]
        ],
        providers: [_firebase_auth_firebase_auth_service__WEBPACK_IMPORTED_MODULE_8__["FirebaseAuthService"]],
        declarations: [_password_page__WEBPACK_IMPORTED_MODULE_5__["PasswordPage"]]
    })
], PasswordPageModule);



/***/ }),

/***/ "9f3n":
/*!*************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/landing/password/password.page.html ***!
  \*************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-icon class=\"icon_person\" src=\"assets/icons/usuari.svg\"></ion-icon>\n      <!-- <ion-icon class=\"icon_person\" name=\"person-circle\"></ion-icon> -->\n      <!---->\n    </ion-buttons>\n    <ion-buttons slot=\"primary\">\n      <ion-back-button defaultHref=\"/email\"></ion-back-button> \n    </ion-buttons>\n  \n    <ion-title >{{ this.header | translate }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n<ion-content>\n  <div class=\"landing-container\">\n  <form (ngSubmit)=\"submit()\" [formGroup]=\"credentials\">\n  <ion-text>\n    <p>{{ 'password.text' | translate }}</p>\n  </ion-text>\n  <ion-text>\n    <p>{{ 'password.text_2' | translate }} </p>\n  </ion-text>\n  <ion-text>\n    <p>{{ 'password.text_3' | translate }} </p>\n  </ion-text>\n  <ion-item>\n    <app-show-hide-password>\n    <ion-input type=\"password\"  formControlName=\"password\" placeholder=\"{{ 'password.placeholder' | translate }}\" ></ion-input>\n    </app-show-hide-password>\n  </ion-item>\n  <ion-grid>\n    <ion-row>\n      <ion-col></ion-col>\n      <ion-col></ion-col>\n      <ion-col>\n        <div>\n          <ion-button type=\"submit\" color=\"primary\" slot=\"end\">\n            {{ 'password.button' | translate |Â uppercase}}\n            </ion-button>\n        </div>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</form>\n<!-- <ion-button expand=\"block\"  routerLink=\"/confirmation\" color=\"dark\">{{ 'password.button' | translate | uppercase }}</ion-button> -->\n<div *ngIf=\"this.authService.action=='signUpUser'\">\n  <ion-button class=\"button_cred\" type=\"button\" (click)=\"doGoogleLogin()\" expand=\"block\" color=\"light\">\n    <ion-icon name=\"logo-google\" slot=\"start\"></ion-icon>\n    {{ 'login.google_signin' | translate }}\n  </ion-button>\n  <!--\n  <ion-button class=\"button_cred\" type=\"button\" expand=\"block\" color=\"light\">\n    <ion-icon name=\"logo-apple\" slot=\"start\"></ion-icon>\n    {{ 'login.apple_signin' | translate }}\n  </ion-button>\n  -->\n</div>\n\n<!-- <ion-button type=\"button\" expand=\"block\"  routerLink=\"/\" color=\"dark\">\n  <ion-icon name=\"logo-google\" slot=\"start\"></ion-icon>\n  {{ 'password.google_signin' | translate }}\n</ion-button>\n<ion-button type=\"button\" expand=\"block\" routerLink=\"/home\" color=\"dark\">\n  <ion-icon name=\"logo-apple\" slot=\"start\"></ion-icon>\n  {{ 'password.apple_signin' | translate }}\n</ion-button> -->\n</div>\n</ion-content>\n");

/***/ }),

/***/ "J08K":
/*!*********************************************************!*\
  !*** ./src/app/pages/landing/password/password.page.ts ***!
  \*********************************************************/
/*! exports provided: PasswordPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PasswordPage", function() { return PasswordPage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_password_page_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./password.page.html */ "9f3n");
/* harmony import */ var _password_page_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./password.page.scss */ "19V/");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _services_authentication_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../services/authentication.service */ "ej43");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ionic/angular */ "TEn/");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _firebase_auth_firebase_auth_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../firebase/auth/firebase-auth.service */ "Oc4o");










let PasswordPage = class PasswordPage {
    constructor(fb, authService, router, route, loadingController, firebaseService, location, ngZone) {
        this.fb = fb;
        this.authService = authService;
        this.router = router;
        this.route = route;
        this.loadingController = loadingController;
        this.firebaseService = firebaseService;
        this.location = location;
        this.ngZone = ngZone;
        this.resource = 'registre4';
        this.nextRoute = 'confirmation';
        // Get firebase authentication redirect result invoken when using signInWithRedirect()
        // signInWithRedirect() is only used when client is in web but not desktop
        this.authRedirectResult = this.firebaseService.getRedirectResult()
            .subscribe(result => {
            if (result.user) {
                this.dismissLoading();
                var uid = this.getUserUid(result.user);
                this.credentials = this.fb.group({
                    mutua: JSON.parse(window.localStorage.getItem('mutua')),
                    id_usuari_mgc: JSON.parse(window.localStorage.getItem('id_usuari_mgc')),
                    credencial: 'google',
                    username: uid,
                    password: ''
                });
                console.log("before submit credentials; ", this.credentials.value);
                this.submit();
            }
            else if (result.error) {
                this.manageAuthWithProvidersErrors(result.error);
            }
        });
        // Check if url contains our custom 'auth-redirect' param, then show a loader while we receive the getRedirectResult notification
        this.route.queryParams.subscribe(params => {
            const authProvider = params['auth-redirect'];
            if (authProvider) {
                this.presentLoading(authProvider);
            }
        });
    }
    getUserUid(user) {
        var uid = '';
        user.providerData.forEach(function (profile) {
            switch (profile.providerId) {
                case 'google.com':
                    uid = profile.uid;
                    break;
                default:
                    uid = '';
            }
        });
        console.log("  Uid: " + uid);
        return uid;
    }
    ngOnInit() {
        this.setCredentials();
        // Based on user action, get next route and API resource
        this.setNextRoute();
    }
    // Once the auth provider finished the authentication flow, and the auth redirect completes,
    // hide the loader and redirect the user to the profile page
    redirectLoggedUserToProfilePage(result) {
        console.log("token:", result);
        this.dismissLoading();
        // As we are calling the Angular router navigation inside a subscribe method, the navigation will be triggered outside Angular zone.
        // That's why we need to wrap the router navigation call inside an ngZone wrapper
        this.ngZone.run(() => {
            // Get previous URL from our custom History Helper
            // If there's no previous page, then redirect to profile
            // const previousUrl = this.historyHelper.previousUrl || 'firebase/auth/profile';
            const previousUrl = 'app/home';
            // No need to store in the navigation history the sign-in page with redirect params (it's justa a mandatory mid-step)
            // Navigate to profile and replace current url with profile
            //this.router.navigate([previousUrl], { replaceUrl: true });
        });
    }
    setNextRoute() {
        switch (this.authService.action) {
            case 'signUpUser':
                this.nextRoute = 'confirmation';
                this.header = 'landing.registre';
                break;
            case 'passwordRecovery':
                this.nextRoute = '/login';
                this.resource = 'contrasenya3';
                this.header = 'landing.password';
                break;
            case 'addSocialAuth':
                this.nextRoute = 'app/home';
                this.header = 'landing.social';
                break;
        }
    }
    submit() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const loading = yield this.loadingController.create();
            yield loading.present();
            this.authService.validateCredentials(this.credentials.value, this.resource).subscribe((data) => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                console.log("submitting response: ", data);
                yield loading.dismiss();
                this.router.navigate([this.nextRoute]);
            }), (error) => {
                // Called when error
                loading.dismiss();
                throw error;
            }, () => {
                // Called when operation is complete (both success and error)
                loading.dismiss();
            });
        });
    }
    setCredentials() {
        console.log('ngInitCredentials');
        this.credentials = this.fb.group({
            mutua: this.authService.mutua,
            id_usuari_mgc: this.authService.id_usuari_mgc,
            credencial: 'mgc',
            username: this.authService.mutua,
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]]
        });
    }
    presentLoading(authProvider) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const authProviderCapitalized = authProvider[0].toUpperCase() + authProvider.slice(1);
            this.loadingController.create({
                message: authProvider ? 'Signing in with ' + authProviderCapitalized : 'Signin in ...'
            }).then((loader) => {
                const currentUrl = this.location.path();
                if (currentUrl.includes('auth-redirect')) {
                    this.redirectLoader = loader;
                    this.redirectLoader.present();
                }
            });
        });
    }
    resetSubmitError() {
        this.submitError = null;
    }
    // Before invoking auth provider redirect flow, present a loading indicator and add a flag to the path.
    // The precense of the flag in the path indicates we should wait for the auth redirect to complete.
    prepareForAuthWithProvidersRedirection(authProvider) {
        this.presentLoading(authProvider);
        this.location.replaceState(this.location.path(), 'auth-redirect=' + authProvider, this.location.getState());
    }
    manageAuthWithProvidersErrors(errorMessage) {
        this.submitError = errorMessage;
        // remove auth-redirect param from url
        this.location.replaceState(this.router.url.split('?')[0], '');
        this.dismissLoading();
        throw new Error(errorMessage);
    }
    dismissLoading() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            if (this.redirectLoader) {
                yield this.redirectLoader.dismiss();
            }
        });
    }
    doGoogleLogin() {
        this.resetSubmitError();
        this.prepareForAuthWithProvidersRedirection('google');
        window.localStorage.setItem('mutua', JSON.stringify(this.authService.mutua));
        window.localStorage.setItem('id_usuari_mgc', JSON.stringify(this.authService.id_usuari_mgc));
        console.log(window.localStorage.length);
        this.firebaseService.signInWithGoogle()
            .subscribe((result) => {
            // This gives you a Google Access Token. You can use it to access the Google API.
            var token = result.credential.accessToken;
            console.log("token: ", token);
            this.redirectLoggedUserToProfilePage();
        }, (error) => {
            console.log(error);
            this.manageAuthWithProvidersErrors(error.message);
        });
    }
    ngOnDestroy() {
        this.dismissLoading();
    }
};
PasswordPage.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"] },
    { type: _services_authentication_service__WEBPACK_IMPORTED_MODULE_5__["AuthenticationService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_6__["LoadingController"] },
    { type: _firebase_auth_firebase_auth_service__WEBPACK_IMPORTED_MODULE_9__["FirebaseAuthService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_8__["Location"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"] }
];
PasswordPage = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-password',
        template: _raw_loader_password_page_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_password_page_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    })
], PasswordPage);



/***/ })

}]);
//# sourceMappingURL=pages-landing-password-password-module-es2015.js.map